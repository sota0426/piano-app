(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[987],{1624:(t,e,i)=>{"use strict";let s;i.d(e,{RG:()=>U,ZA:()=>ee,A4:()=>tz,m6:()=>t8,_C:()=>tO});class n extends Error{constructor(t,e=""){super("[RuntimeError] "+t+": "+e),this.code=t}}function a(){return"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:Function("return this")()}function r(t,e="undefined",i=""){if(void 0===t)throw new n(e,i);return t}function o(t,...e){if(!e)return;let i=Array.prototype.slice.call(e).join(" ");a().console.log(t+": "+i)}function h(t,e){var i;let s=e+(t-e)/2;return s%2>0&&(s=((i=10*s)%5>=2.5?5*parseInt(`${i/5}`,10)+5:5*parseInt(`${i/5}`,10))/10),s}function l(t){return`vf-${t}`}function c(t){return(t%=2*Math.PI)<0&&(t+=2*Math.PI),t}function d(t){return t.reduce((t,e)=>t+e,0)}class u{static get CATEGORY(){return"Fraction"}static GCD(t,e){let i;if("number"!=typeof t||Number.isNaN(t)||"number"!=typeof e||Number.isNaN(e))throw new n("BadArgument",`Invalid numbers: ${t}, ${e}`);for(;0!==e;)i=e,e=t%e,t=i;return t}static LCM(t,e){return t*e/u.GCD(t,e)}static LCMM(t){return 0===t.length?0:1===t.length?t[0]:2===t.length?u.LCM(t[0],t[1]):u.LCM(t.shift(),u.LCMM(t))}constructor(t,e){this.numerator=1,this.denominator=1,this.set(t,e)}set(t=1,e=1){return this.numerator=t,this.denominator=e,this}value(){return this.numerator/this.denominator}simplify(){let t=this.numerator,e=this.denominator,i=u.GCD(t,e);return t/=i,(e/=i)<0&&(e=-e,t=-t),this.set(t,e)}add(t=0,e=1){let[i,s]=g(t,e),n=u.LCM(this.denominator,s),a=n/this.denominator,r=n/s,o=this.numerator*a+i*r;return this.set(o,n)}subtract(t=0,e=1){let[i,s]=g(t,e),n=u.LCM(this.denominator,s),a=n/this.denominator,r=n/s,o=this.numerator*a-i*r;return this.set(o,n)}multiply(t=1,e=1){let[i,s]=g(t,e);return this.set(this.numerator*i,this.denominator*s)}divide(t=1,e=1){let[i,s]=g(t,e);return this.set(this.numerator*s,this.denominator*i)}equals(t){let e=u.fractionA.copy(t).simplify(),i=u.fractionB.copy(this).simplify();return e.numerator===i.numerator&&e.denominator===i.denominator}greaterThan(t){let e=u.fractionA.copy(this);return e.subtract(t),e.numerator>0}greaterThanEquals(t){let e=u.fractionA.copy(this);return e.subtract(t),e.numerator>=0}lessThan(t){return!this.greaterThanEquals(t)}lessThanEquals(t){return!this.greaterThan(t)}clone(){return new u(this.numerator,this.denominator)}copy(t){return"number"==typeof t?this.set(t):this.set(t.numerator,t.denominator)}quotient(){return Math.floor(this.numerator/this.denominator)}remainder(){return this.numerator%this.denominator}makeAbs(){return this.denominator=Math.abs(this.denominator),this.numerator=Math.abs(this.numerator),this}toString(){return`${this.numerator}/${this.denominator}`}toSimplifiedString(){return u.fractionA.copy(this).simplify().toString()}toMixedString(){let t="",e=this.quotient(),i=u.fractionA.copy(this);return e<0&&i.makeAbs(),0!==e?(t+=e,0!==i.numerator&&(t+=` ${i.toSimplifiedString()}`)):t=0===i.numerator?"0":i.toSimplifiedString(),t}parse(t){let e=t.split("/"),i=parseInt(e[0],10),s=e[1]?parseInt(e[1],10):1;return this.set(i,s)}}function g(t,e=1){return"number"==typeof t?[t,e]:[t.numerator,t.denominator]}u.fractionA=new u,u.fractionB=new u;class p{static clear(t){t?(this.cacheFont.delete(t),this.cacheStyle.delete(t)):(this.cacheFont.clear(),this.cacheStyle.clear())}static getFontInfo(t){let e=this.cacheFont.get(t);return e||(e={family:p.get(`${t}.fontFamily`),size:p.get(`${t}.fontSize`)*p.get(`${t}.fontScale`),weight:p.get(`${t}.fontWeight`),style:p.get(`${t}.fontStyle`)},this.cacheFont.set(t,e)),structuredClone(e)}static getStyle(t){let e=this.cacheStyle.get(t);return e||(e={fillStyle:p.get(`${t}.fillStyle`),strokeStyle:p.get(`${t}.strokeStyle`),lineWidth:p.get(`${t}.lineWidth`),lineDash:p.get(`${t}.lineDash`),shadowBlur:p.get(`${t}.shadowBlur`),shadowColor:p.get(`${t}.shadowColor`)},this.cacheStyle.set(t,e)),structuredClone(e)}static get(t,e){var i;let s=t.split("."),n=s.pop(),a=m,r=e;for(;a;){r=null!=(i=a[n])?i:r;let t=s.shift();if(t)a=a[t];else break}return r}}p.cacheStyle=new Map,p.cacheFont=new Map;let m={fontFamily:"Bravura,Academico",fontSize:30,fontScale:1,fontWeight:"normal",fontStyle:"normal",Accidental:{cautionary:{fontSize:20},grace:{fontSize:20},noteheadAccidentalPadding:1,leftPadding:2,accidentalSpacing:3},Annotation:{fontSize:10},Bend:{fontSize:10,line:{strokeStyle:"#777777",lineWidth:1}},ChordSymbol:{fontSize:12,spacing:.05,subscriptOffset:.2,superscriptOffset:-.4,superSubRatio:.6},FretHandFinger:{fontSize:9,fontWeight:"bold"},GraceNote:{fontScale:2/3},GraceTabNote:{fontScale:2/3},NoteHead:{minPadding:2},PedalMarking:{text:{fontSize:12,fontStyle:"italic"}},Repetition:{text:{fontSize:12,fontWeight:"bold",offsetX:12,offsetY:25,spacing:5},coda:{offsetY:25},segno:{offsetY:10}},Stave:{strokeStyle:"#999999",fontSize:8,padding:12,endPaddingMax:10,endPaddingMin:5,unalignedNotePadding:10},StaveConnector:{text:{fontSize:16}},StaveLine:{fontSize:10},StaveSection:{fontSize:10,fontWeight:"bold",lineWidth:2,padding:2,strokeStyle:"black"},StaveTempo:{fontSize:14,glyph:{fontSize:25},name:{fontWeight:"bold"}},StaveText:{fontSize:16},StaveTie:{fontSize:10},Stem:{strokeStyle:"black"},StringNumber:{fontSize:10,fontWeight:"bold",verticalPadding:8,stemPadding:2,leftPadding:5,rightPadding:6},Stroke:{text:{fontSize:10,fontStyle:"italic",fontWeight:"bold"}},TabNote:{text:{fontSize:9}},TabSlide:{fontSize:10,fontStyle:"italic",fontWeight:"bold"},TabStave:{strokeStyle:"#999999",fontSize:8},TabTie:{fontSize:10},TextBracket:{fontSize:15,fontStyle:"italic"},TextNote:{text:{fontSize:12}},Tremolo:{spacing:7},Tuplet:{yOffset:0,textYOffset:2},Volta:{fontSize:9,fontWeight:"bold"}};class f{static copy(t){return new f(t.x,t.y,t.w,t.h)}constructor(t,e,i,s){this.x=t,this.y=e,this.w=i,this.h=s}getX(){return this.x}getY(){return this.y}getW(){return this.w}getH(){return this.h}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setW(t){return this.w=t,this}setH(t){return this.h=t,this}move(t,e){return this.x+=t,this.y+=e,this}clone(){return f.copy(this)}mergeWith(t){let e=this.x<t.x?this.x:t.x,i=this.y<t.y?this.y:t.y,s=Math.max(this.x+this.w,t.x+t.w)-e,n=Math.max(this.y+this.h,t.y+t.h)-i;return this.x=e,this.y=i,this.w=s,this.h=n,this}}!function(t){t.NORMAL="normal",t.BOLD="bold"}(eN||(eN={})),function(t){t.NORMAL="normal",t.ITALIC="italic"}(eF||(eF={}));class S{static convertSizeToPixelValue(t){var e;if("number"==typeof t)return t*S.scaleToPxFrom.pt;{let i=parseFloat(t);if(isNaN(i))return 0;let s=t.replace(/[\d.\s]/g,"").toLowerCase();return i*(null!=(e=S.scaleToPxFrom[s])?e:1)}}static convertSizeToPointValue(t){var e;if("number"==typeof t)return t;{let i=parseFloat(t);if(isNaN(i))return 0;let s=t.replace(/[\d.\s]/g,"").toLowerCase();return i*((null!=(e=S.scaleToPxFrom[s])?e:1)/S.scaleToPxFrom.pt)}}static validate(t,e,i,s){let n;return"string"==typeof t&&void 0===e&&void 0===i&&void 0===s?S.fromCSSString(t):("object"==typeof t?(n=t.family,e=t.size,i=t.weight,s=t.style):n=t,n=null!=n?n:p.get("fontFamily"),e=null!=e?e:p.get("fontSize")+"pt",i=null!=i?i:eN.NORMAL,s=null!=s?s:eF.NORMAL,""===i&&(i=eN.NORMAL),""===s&&(s=eF.NORMAL),"number"==typeof e&&(e=`${e}pt`),"number"==typeof i&&(i=i.toString()),{family:n,size:e,weight:i,style:s})}static fromCSSString(t){s||(s=document.createElement("span")),s.style.font=t;let{fontFamily:e,fontSize:i,fontWeight:n,fontStyle:a}=s.style;return{family:e,size:i,weight:n,style:a}}static toCSSString(t){var e;let i,s,n;if(!t)return"";let a=t.style;i=a===eF.NORMAL||""===a||void 0===a?"":a.trim()+" ";let r=t.weight;s=r===eN.NORMAL||""===r||void 0===r?"":"number"==typeof r?r+" ":r.trim()+" ";let o=t.size;n=void 0===o?p.get("fontSize")+"pt":"number"==typeof o?o+"pt ":o.trim()+" ";let h=null!=(e=t.family)?e:p.get("fontFamily");return`${i}${s}${n}${h}`}static scaleSize(t,e){if("number"==typeof t)return t*e;{let i=parseFloat(t),s=t.replace(/[\d.\s]/g,"");return`${i*e}${s}`}}static isBold(t){if(!t)return!1;{if("number"==typeof t)return t>=600;let e=parseInt(t,10);return isNaN(e)?"bold"===t.toLowerCase():e>=600}}static isItalic(t){return!!t&&t.toLowerCase()===eF.ITALIC}static load(t,e,i){var s,n,a,r;return s=this,n=void 0,a=void 0,r=function*(){let s;if("undefined"==typeof FontFace)return Promise.reject(Error("FontFace API is not available in this environment. Cannot load fonts."));if(void 0===e){let i=S.FILES;if(!(t in i))return Promise.reject(Error(`Font ${t} not found in Font.FILES`));e=S.HOST_URL+i[t]}let n=new FontFace(t,`url(${e})`,i),a=n.load();return"undefined"!=typeof document?s=document.fonts:"undefined"!=typeof self&&"fonts"in self&&(s=self.fonts),null==s||s.add(n),a},new(a||(a=Promise))(function(t,e){function i(t){try{h(r.next(t))}catch(t){e(t)}}function o(t){try{h(r.throw(t))}catch(t){e(t)}}function h(e){var s;e.done?t(e.value):((s=e.value)instanceof a?s:new a(function(t){t(s)})).then(i,o)}h((r=r.apply(s,n||[])).next())})}static getURLForFont(t){let e=S.FILES;if(t in e)return S.HOST_URL+e[t]}}S.scaleToPxFrom={pt:4/3,px:1,em:16,"%":.16,in:96,mm:96/25.4,cm:96/2.54},S.HOST_URL="https://cdn.jsdelivr.net/npm/@vexflow-fonts/",S.FILES={Academico:"academico/academico.woff2",Bravura:"bravura/bravura.woff2","Bravura Text":"bravuratext/bravuratext.woff2",Edwin:"edwin/edwin-roman.woff2","Finale Ash":"finaleash/finaleash.woff2","Finale Ash Text":"finaleashtext/finaleashtext.woff2","Finale Broadway":"finalebroadway/finalebroadway.woff2","Finale Broadway Text":"finalebroadwaytext/finalebroadwaytext.woff2","Finale Jazz":"finalejazz/finalejazz.woff2","Finale Jazz Text":"finalejazztext/finalejazztext.woff2","Finale Maestro":"finalemaestro/finalemaestro.woff2","Finale Maestro Text":"finalemaestrotext/finalemaestrotext-regular.woff2",Gonville:"gonville/gonville.woff2",Gootville:"gootville/gootville.woff2","Gootville Text":"gootvilletext/gootvilletext.woff2",Leipzig:"leipzig/leipzig.woff2",Leland:"leland/leland.woff2","Leland Text":"lelandtext/lelandtext.woff2",MuseJazz:"musejazz/musejazz.woff2","MuseJazz Text":"musejazztext/musejazztext.woff2",Nepomuk:"nepomuk/nepomuk.woff2",Petaluma:"petaluma/petaluma.woff2","Petaluma Script":"petalumascript/petalumascript.woff2","Petaluma Text":"petalumatext/petalumatext.woff2","Roboto Slab":"robotoslab/robotoslab-regular-400.woff2",Sebastian:"sebastian/sebastian.woff2","Sebastian Text":"sebastiantext/sebastiantext.woff2"};class T{constructor(){this.id={},this.type={},this.class={}}}class x{static getDefaultRegistry(){return x.defaultRegistry}static enableDefaultRegistry(t){x.defaultRegistry=t}static disableDefaultRegistry(){x.defaultRegistry=void 0}constructor(){this.index=new T}clear(){return this.index=new T,this}setIndexValue(t,e,i,s){let n=this.index;n[t][e]||(n[t][e]={}),n[t][e][i]=s}updateIndex({id:t,name:e,value:i,oldValue:s}){let n=this.getElementById(t);void 0!==s&&this.index[e][s]&&delete this.index[e][s][t],i&&n&&this.setIndexValue(e,i,n.getAttribute("id"),n)}register(t,e){if(!(e=e||t.getAttribute("id")))throw new n("Can't add element without `id` attribute to registry");return t.setAttribute("id",e),this.setIndexValue("id",e,e,t),this.updateIndex({id:e,name:"type",value:t.getAttribute("type"),oldValue:void 0}),t.onRegister(this),this}getElementById(t){var e,i;return null==(i=null==(e=this.index.id)?void 0:e[t])?void 0:i[t]}getElementsByAttribute(t,e){let i=this.index[t];if(i){let t=i[e];if(t)return Object.keys(t).map(e=>t[e])}return[]}getElementsByType(t){return this.getElementsByAttribute("type",t)}getElementsByClass(t){return this.getElementsByAttribute("class",t)}onUpdate(t){return["id","type","class"].includes(t.name)&&this.updateIndex(t),this}}class w{static get CATEGORY(){return"Element"}static newID(){return`auto${w.ID++}`}static setTextMeasurementCanvas(t){w.txtCanvas=t}static getTextMeasurementCanvas(){let t=w.txtCanvas;return t||("undefined"!=typeof document?t=document.createElement("canvas"):"undefined"!=typeof OffscreenCanvas&&(t=new OffscreenCanvas(300,150)),w.txtCanvas=t),t}constructor(t){var e;this.children=[],this.style={},this._text="",this.metricsValid=!1,this._textMetrics={fontBoundingBoxAscent:0,fontBoundingBoxDescent:0,actualBoundingBoxAscent:0,actualBoundingBoxDescent:0,actualBoundingBoxLeft:0,actualBoundingBoxRight:0,width:0,alphabeticBaseline:0,emHeightAscent:0,emHeightDescent:0,hangingBaseline:0,ideographicBaseline:0},this._height=0,this._width=0,this.xShift=0,this.yShift=0,this.x=0,this.y=0,this.attrs={id:w.newID(),type:null!=t?t:this.constructor.CATEGORY,class:""},this.rendered=!1,this._fontInfo=p.getFontInfo(this.attrs.type),this.style=p.getStyle(this.attrs.type),this.fontScale=p.get(`${this.attrs.type}.fontScale`),null==(e=x.getDefaultRegistry())||e.register(this)}addChild(t){if(t.parent)throw new n("Element","Parent already defined");return t.parent=this,this.children.push(t),this}getCategory(){return this.attrs.type}setStyle(t){return this.style=t,this}setGroupStyle(t){return this.style=t,this.children.forEach(e=>e.setGroupStyle(t)),this}getStyle(){return this.style}applyStyle(t=this.context,e=this.getStyle()){return t&&(e.shadowColor&&t.setShadowColor(e.shadowColor),e.shadowBlur&&t.setShadowBlur(e.shadowBlur),e.fillStyle&&t.setFillStyle(e.fillStyle),e.strokeStyle&&t.setStrokeStyle(e.strokeStyle),e.lineWidth&&t.setLineWidth(e.lineWidth),e.lineDash&&t.setLineDash(e.lineDash.split(" ").map(Number))),this}drawWithStyle(){let t=this.checkContext();return t.save(),this.applyStyle(t),this.draw(),t.restore(),this}draw(){throw new n("Element","Draw not defined")}hasClass(t){var e;return!!this.attrs.class&&(null==(e=this.attrs.class)?void 0:e.split(" ").indexOf(t))!==-1}addClass(t){var e;return this.hasClass(t)||(this.attrs.class?this.attrs.class=`${this.attrs.class} ${t}`:this.attrs.class=`${t}`,null==(e=this.registry)||e.onUpdate({id:this.attrs.id,name:"class",value:t,oldValue:void 0})),this}removeClass(t){var e,i;if(!this.hasClass(t))return this;let s=null==(e=this.attrs.class)?void 0:e.split(" ");return s&&(s.splice(s.indexOf(t)),this.attrs.class=s.join(" ")),null==(i=this.registry)||i.onUpdate({id:this.attrs.id,name:"class",value:void 0,oldValue:t}),this}onRegister(t){return this.registry=t,this}isRendered(){return this.rendered}setRendered(t=!0){return this.rendered=t,this}getAttributes(){return this.attrs}getAttribute(t){return this.attrs[t]}getSVGElement(t=""){let e=l(this.attrs.id+t),i=document.getElementById(e);if(i)return i}setAttribute(t,e){var i;let s=this.attrs.id,n=this.attrs[t];return this.attrs[t]=e,null==(i=this.registry)||i.onUpdate({id:s,name:t,value:e,oldValue:n}),this}getBoundingBox(){return new f(this.x+this.xShift,this.y+this.yShift-this.textMetrics.actualBoundingBoxAscent,this.width,this.height)}getContext(){return this.context}setContext(t){return this.context=t,this}checkContext(){return r(this.context,"NoContext","No rendering context attached to instance.")}set font(t){this.setFont(t)}get font(){return S.toCSSString(this._fontInfo)}setFont(t,e,i,s){let n=p.getFontInfo(this.attrs.type),a="object"==typeof t,r="string"==typeof t,o=void 0===e&&void 0===i&&void 0===s;return this.metricsValid=!1,a?this._fontInfo=Object.assign(Object.assign({},n),t):r&&o?this._fontInfo=S.fromCSSString(t):this._fontInfo=S.validate(null!=t?t:n.family,null!=e?e:n.size,null!=i?i:n.weight,null!=s?s:n.style),this}getFont(){return S.toCSSString(this._fontInfo)}get fontInfo(){return this._fontInfo}set fontInfo(t){this.setFont(t)}setFontSize(t){let e=this.fontInfo;return this.setFont(e.family,t,e.weight,e.style),this}getFontSize(){return this.fontSize}getFontScale(){return this.fontScale}set fontSize(t){this.setFontSize(t)}get fontSize(){let t=this.fontInfo.size;return"number"==typeof t&&(t=`${t}pt`),t}get fontSizeInPoints(){return S.convertSizeToPointValue(this.fontSize)}get fontSizeInPixels(){return S.convertSizeToPixelValue(this.fontSize)}get fontStyle(){return this.fontInfo.style}set fontStyle(t){let e=this.fontInfo;this.setFont(e.family,e.size,e.weight,t)}get fontWeight(){return this.fontInfo.weight+""}set fontWeight(t){let e=this.fontInfo;this.setFont(e.family,e.size,t,e.style)}getWidth(){return this.width}get width(){return this.metricsValid||this.measureText(),this._width}setWidth(t){return this.width=t,this}set width(t){this.metricsValid||this.measureText(),this._width=t}setX(t){return this.x=t,this}getX(){return this.x}getY(){return this.y}setY(t){return this.y=t,this}setYShift(t){return this.yShift=t,this}getYShift(){return this.yShift}setXShift(t){return this.xShift=t,this}getXShift(){return this.xShift}setText(t){return this.text=t,this}set text(t){this.metricsValid=!1,this._text=t}getText(){return this._text}get text(){return this._text}renderText(t,e,i){t.setFont(this._fontInfo),t.fillText(this._text,e+this.x+this.xShift,i+this.y+this.yShift),this.children.forEach(s=>{t.setFont(s.fontInfo),t.fillText(s.text,e+s.x+s.xShift,i+s.y+s.yShift)})}measureText(){var t;let e=null==(t=w.getTextMeasurementCanvas())?void 0:t.getContext("2d");return e?(e.font=S.toCSSString(S.validate(this.fontInfo)),this._textMetrics=e.measureText(this.text),this._height=this._textMetrics.actualBoundingBoxAscent+this._textMetrics.actualBoundingBoxDescent,this._width=this._textMetrics.width,this.metricsValid=!0):console.warn("Element: No context for txtCanvas. Returning empty text metrics."),this._textMetrics}static measureWidth(t,e=""){var i;let s=null==(i=w.getTextMeasurementCanvas())?void 0:i.getContext("2d");return s?(s.font=S.toCSSString(p.getFontInfo(e)),s.measureText(t).width):(console.warn("Element: No context for txtCanvas. Returning empty text metrics."),0)}getTextMetrics(){return this.textMetrics}get textMetrics(){return this.metricsValid||this.measureText(),this._textMetrics}getHeight(){return this.height}get height(){return this.metricsValid||this.measureText(),this._height}set height(t){this.metricsValid||this.measureText(),this._height=t}setOriginX(t){let e=this.getBoundingBox(),i=(t-Math.abs((e.getX()-this.xShift)/e.getW()))*e.getW();this.xShift=-i}setOriginY(t){let e=this.getBoundingBox(),i=(t-Math.abs((e.getY()-this.yShift)/e.getH()))*e.getH();this.yShift=-i}setOrigin(t,e){this.setOriginX(t),this.setOriginY(e)}}w.ID=1e3,function(t){t[t.CENTER=0]="CENTER",t[t.LEFT=1]="LEFT",t[t.RIGHT=2]="RIGHT",t[t.ABOVE=3]="ABOVE",t[t.BELOW=4]="BELOW"}(eR||(eR={}));class b extends w{static get CATEGORY(){return"Modifier"}static get Position(){return eR}static get PositionString(){return{center:eR.CENTER,above:eR.ABOVE,below:eR.BELOW,left:eR.LEFT,right:eR.RIGHT}}constructor(){super(),this.width=0,this.textLine=0,this.position=b.Position.LEFT,this.spacingFromNextModifier=0}reset(){}getNote(){return r(this.note,"NoNote","Modifier has no note.")}checkAttachedNote(){let t=this.getCategory();return r(this.index,"NoIndex",`Can't draw ${t} without an index.`),r(this.note,"NoNote",`Can't draw ${t} without a note.`)}setNote(t){return this.note=t,this}getIndex(){return this.index}checkIndex(){return r(this.index,"NoIndex","Modifier has an invalid index.")}setIndex(t){return this.index=t,this}getModifierContext(){return this.modifierContext}checkModifierContext(){return r(this.modifierContext,"NoModifierContext","Modifier Context Required")}setModifierContext(t){return this.modifierContext=t,this}getPosition(){return this.position}setPosition(t){return this.position="string"==typeof t?b.PositionString[t]:t,this.reset(),this}setTextLine(t){return this.textLine=t,this}setYShift(t){return this.yShift=t,this}setSpacingFromNextModifier(t){this.spacingFromNextModifier=t}getSpacingFromNextModifier(){return this.spacingFromNextModifier}setXShift(t){return this.xShift=0,this.position===b.Position.LEFT?this.xShift-=t:this.xShift+=t,this}getXShift(){return this.xShift}draw(){throw this.checkContext(),new n("NotImplemented","draw() not implemented for this modifier.")}alignSubNotesWithNote(t,e,i=b.Position.LEFT){let s=e.getTickContext(),n=s.getMetrics(),a=e.getStave(),r=i===b.Position.RIGHT?s.getX()+this.getSpacingFromNextModifier()*t.length+10:s.getX()-n.modLeftPx-n.modRightPx+this.getSpacingFromNextModifier();t.forEach(t=>{let e=t.getTickContext();a&&t.setStave(a),e.setXOffset(r)})}}class y{static get NUM_TONES(){return this.canonicalNotes.length}static get roots(){return["c","d","e","f","g","a","b"]}static get rootValues(){return[0,2,4,5,7,9,11]}static get rootIndexes(){return{c:0,d:1,e:2,f:3,g:4,a:5,b:6}}static get canonicalNotes(){return["c","c#","d","d#","e","f","f#","g","g#","a","a#","b"]}static get diatonicIntervals(){return["unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","octave"]}static get diatonicAccidentals(){return{unison:{note:0,accidental:0},m2:{note:1,accidental:-1},M2:{note:1,accidental:0},m3:{note:2,accidental:-1},M3:{note:2,accidental:0},p4:{note:3,accidental:0},dim5:{note:4,accidental:-1},p5:{note:4,accidental:0},m6:{note:5,accidental:-1},M6:{note:5,accidental:0},b7:{note:6,accidental:-1},M7:{note:6,accidental:0},octave:{note:7,accidental:0}}}static get intervals(){return{u:0,unison:0,m2:1,b2:1,min2:1,S:1,H:1,2:2,M2:2,maj2:2,T:2,W:2,m3:3,b3:3,min3:3,M3:4,3:4,maj3:4,4:5,p4:5,"#4":6,b5:6,aug4:6,dim5:6,5:7,p5:7,"#5":8,b6:8,aug5:8,6:9,M6:9,maj6:9,b7:10,m7:10,min7:10,dom7:10,M7:11,maj7:11,8:12,octave:12}}static get scales(){return{major:[2,2,1,2,2,2,1],minor:[2,1,2,2,1,2,2],ionian:[2,2,1,2,2,2,1],dorian:[2,1,2,2,2,1,2],phyrgian:[1,2,2,2,1,2,2],lydian:[2,2,2,1,2,2,1],mixolydian:[2,2,1,2,2,1,2],aeolian:[2,1,2,2,1,2,2],locrian:[1,2,2,1,2,2,2]}}static get scaleTypes(){return{M:y.scales.major,m:y.scales.minor}}static get accidentals(){return["bb","b","n","#","##"]}static get noteValues(){return{c:{rootIndex:0,intVal:0},cn:{rootIndex:0,intVal:0},"c#":{rootIndex:0,intVal:1},"c##":{rootIndex:0,intVal:2},cb:{rootIndex:0,intVal:11},cbb:{rootIndex:0,intVal:10},d:{rootIndex:1,intVal:2},dn:{rootIndex:1,intVal:2},"d#":{rootIndex:1,intVal:3},"d##":{rootIndex:1,intVal:4},db:{rootIndex:1,intVal:1},dbb:{rootIndex:1,intVal:0},e:{rootIndex:2,intVal:4},en:{rootIndex:2,intVal:4},"e#":{rootIndex:2,intVal:5},"e##":{rootIndex:2,intVal:6},eb:{rootIndex:2,intVal:3},ebb:{rootIndex:2,intVal:2},f:{rootIndex:3,intVal:5},fn:{rootIndex:3,intVal:5},"f#":{rootIndex:3,intVal:6},"f##":{rootIndex:3,intVal:7},fb:{rootIndex:3,intVal:4},fbb:{rootIndex:3,intVal:3},g:{rootIndex:4,intVal:7},gn:{rootIndex:4,intVal:7},"g#":{rootIndex:4,intVal:8},"g##":{rootIndex:4,intVal:9},gb:{rootIndex:4,intVal:6},gbb:{rootIndex:4,intVal:5},a:{rootIndex:5,intVal:9},an:{rootIndex:5,intVal:9},"a#":{rootIndex:5,intVal:10},"a##":{rootIndex:5,intVal:11},ab:{rootIndex:5,intVal:8},abb:{rootIndex:5,intVal:7},b:{rootIndex:6,intVal:11},bn:{rootIndex:6,intVal:11},"b#":{rootIndex:6,intVal:0},"b##":{rootIndex:6,intVal:1},bb:{rootIndex:6,intVal:10},bbb:{rootIndex:6,intVal:9}}}isValidNoteValue(t){return t>=0&&t<y.canonicalNotes.length}isValidIntervalValue(t){return t>=0&&t<y.diatonicIntervals.length}getNoteParts(t){if(!t||t.length<1||t.length>3)throw new n("BadArguments","Invalid note name: "+t);let e=t.toLowerCase(),i=/^([cdefgab])(b|bb|n|#|##)?$/.exec(e);if(null!==i)return{root:i[1],accidental:i[2]};throw new n("BadArguments","Invalid note name: "+t)}getKeyParts(t){if(!t||t.length<1)throw new n("BadArguments","Invalid key: "+t);let e=t.toLowerCase(),i=/^([cdefgab])(b|#)?(mel|harm|m|M)?$/.exec(e);if(null!==i){let t=i[1],e=i[2],s=i[3];return s||(s="M"),{root:t,accidental:e,type:s}}throw new n("BadArguments",`Invalid key: ${t}`)}getNoteValue(t){let e=y.noteValues[t];if(void 0===e)throw new n("BadArguments",`Invalid note name: ${t}`);return e.intVal}getIntervalValue(t){let e=y.intervals[t];if(void 0===e)throw new n("BadArguments",`Invalid interval name: ${t}`);return e}getCanonicalNoteName(t){if(!this.isValidNoteValue(t))throw new n("BadArguments",`Invalid note value: ${t}`);return y.canonicalNotes[t]}getCanonicalIntervalName(t){if(!this.isValidIntervalValue(t))throw new n("BadArguments",`Invalid interval value: ${t}`);return y.diatonicIntervals[t]}getRelativeNoteValue(t,e,i=1){if(1!==i&&-1!==i)throw new n("BadArguments",`Invalid direction: ${i}`);let s=(t+i*e)%y.NUM_TONES;return s<0&&(s+=y.NUM_TONES),s}getRelativeNoteName(t,e){let i=this.getNoteParts(t),s=this.getNoteValue(i.root),a=e-s;if(Math.abs(a)>y.NUM_TONES-3){let i=1;a>0&&(i=-1);let r=(e+1+(s+1))%y.NUM_TONES*i;if(Math.abs(r)>2)throw new n("BadArguments",`Notes not related: ${t}, ${e})`);a=r}if(Math.abs(a)>2)throw new n("BadArguments",`Notes not related: ${t}, ${e})`);let r=i.root;if(a>0)for(let t=1;t<=a;++t)r+="#";else if(a<0)for(let t=-1;t>=a;--t)r+="b";return r}getScaleTones(t,e){let i=[t],s=t;for(let n=0;n<e.length;n++)(s=this.getRelativeNoteValue(s,e[n]))!==t&&i.push(s);return i}getIntervalBetween(t,e,i=1){if(1!==i&&-1!==i)throw new n("BadArguments",`Invalid direction: ${i}`);if(!this.isValidNoteValue(t)||!this.isValidNoteValue(e))throw new n("BadArguments",`Invalid notes: ${t}, ${e}`);let s=1===i?e-t:t-e;return s<0&&(s+=y.NUM_TONES),s}createScaleMap(t){let e=this.getKeyParts(t);if(!e.type)throw new n("BadArguments","Unsupported key type: undefined");let i=y.scaleTypes[e.type],s=e.root;if(e.accidental&&(s+=e.accidental),!i)throw new n("BadArguments","Unsupported key type: "+t);let a=this.getScaleTones(this.getNoteValue(s),i),r=y.rootIndexes[e.root],o={};for(let t=0;t<y.roots.length;++t){let e=(r+t)%y.roots.length,i=y.roots[e],s=this.getRelativeNoteName(i,a[t]);1===s.length&&(s+="n"),o[i]=s}return o}}!function(t){t.null="\0",t.fourStringTabClef="",t.sixStringTabClef="",t.accSagittal11LargeDiesisDown="",t.accSagittal11LargeDiesisUp="",t.accSagittal11MediumDiesisDown="",t.accSagittal11MediumDiesisUp="",t.accSagittal11v19LargeDiesisDown="",t.accSagittal11v19LargeDiesisUp="",t.accSagittal11v19MediumDiesisDown="",t.accSagittal11v19MediumDiesisUp="",t.accSagittal11v49CommaDown="",t.accSagittal11v49CommaUp="",t.accSagittal143CommaDown="",t.accSagittal143CommaUp="",t.accSagittal17CommaDown="",t.accSagittal17CommaUp="",t.accSagittal17KleismaDown="",t.accSagittal17KleismaUp="",t.accSagittal19CommaDown="",t.accSagittal19CommaUp="",t.accSagittal19SchismaDown="",t.accSagittal19SchismaUp="",t.accSagittal1MinaDown="",t.accSagittal1MinaUp="",t.accSagittal1TinaDown="",t.accSagittal1TinaUp="",t.accSagittal23CommaDown="",t.accSagittal23CommaUp="",t.accSagittal23SmallDiesisDown="",t.accSagittal23SmallDiesisUp="",t.accSagittal25SmallDiesisDown="",t.accSagittal25SmallDiesisUp="",t.accSagittal2MinasDown="",t.accSagittal2MinasUp="",t.accSagittal2TinasDown="",t.accSagittal2TinasUp="",t.accSagittal35LargeDiesisDown="",t.accSagittal35LargeDiesisUp="",t.accSagittal35MediumDiesisDown="",t.accSagittal35MediumDiesisUp="",t.accSagittal3TinasDown="",t.accSagittal3TinasUp="",t.accSagittal49LargeDiesisDown="",t.accSagittal49LargeDiesisUp="",t.accSagittal49MediumDiesisDown="",t.accSagittal49MediumDiesisUp="",t.accSagittal49SmallDiesisDown="",t.accSagittal49SmallDiesisUp="",t.accSagittal4TinasDown="",t.accSagittal4TinasUp="",t.accSagittal55CommaDown="",t.accSagittal55CommaUp="",t.accSagittal5CommaDown="",t.accSagittal5CommaUp="",t.accSagittal5TinasDown="",t.accSagittal5TinasUp="",t.accSagittal5v11SmallDiesisDown="",t.accSagittal5v11SmallDiesisUp="",t.accSagittal5v13LargeDiesisDown="",t.accSagittal5v13LargeDiesisUp="",t.accSagittal5v13MediumDiesisDown="",t.accSagittal5v13MediumDiesisUp="",t.accSagittal5v19CommaDown="",t.accSagittal5v19CommaUp="",t.accSagittal5v23SmallDiesisDown="",t.accSagittal5v23SmallDiesisUp="",t.accSagittal5v49MediumDiesisDown="",t.accSagittal5v49MediumDiesisUp="",t.accSagittal5v7KleismaDown="",t.accSagittal5v7KleismaUp="",t.accSagittal6TinasDown="",t.accSagittal6TinasUp="",t.accSagittal7CommaDown="",t.accSagittal7CommaUp="",t.accSagittal7TinasDown="",t.accSagittal7TinasUp="",t.accSagittal7v11CommaDown="",t.accSagittal7v11CommaUp="",t.accSagittal7v11KleismaDown="",t.accSagittal7v11KleismaUp="",t.accSagittal7v19CommaDown="",t.accSagittal7v19CommaUp="",t.accSagittal8TinasDown="",t.accSagittal8TinasUp="",t.accSagittal9TinasDown="",t.accSagittal9TinasUp="",t.accSagittalAcute="",t.accSagittalDoubleFlat="",t.accSagittalDoubleFlat11v49CUp="",t.accSagittalDoubleFlat143CUp="",t.accSagittalDoubleFlat17CUp="",t.accSagittalDoubleFlat17kUp="",t.accSagittalDoubleFlat19CUp="",t.accSagittalDoubleFlat19sUp="",t.accSagittalDoubleFlat23CUp="",t.accSagittalDoubleFlat23SUp="",t.accSagittalDoubleFlat25SUp="",t.accSagittalDoubleFlat49SUp="",t.accSagittalDoubleFlat55CUp="",t.accSagittalDoubleFlat5CUp="",t.accSagittalDoubleFlat5v11SUp="",t.accSagittalDoubleFlat5v19CUp="",t.accSagittalDoubleFlat5v23SUp="",t.accSagittalDoubleFlat5v7kUp="",t.accSagittalDoubleFlat7CUp="",t.accSagittalDoubleFlat7v11CUp="",t.accSagittalDoubleFlat7v11kUp="",t.accSagittalDoubleFlat7v19CUp="",t.accSagittalDoubleSharp="",t.accSagittalDoubleSharp11v49CDown="",t.accSagittalDoubleSharp143CDown="",t.accSagittalDoubleSharp17CDown="",t.accSagittalDoubleSharp17kDown="",t.accSagittalDoubleSharp19CDown="",t.accSagittalDoubleSharp19sDown="",t.accSagittalDoubleSharp23CDown="",t.accSagittalDoubleSharp23SDown="",t.accSagittalDoubleSharp25SDown="",t.accSagittalDoubleSharp49SDown="",t.accSagittalDoubleSharp55CDown="",t.accSagittalDoubleSharp5CDown="",t.accSagittalDoubleSharp5v11SDown="",t.accSagittalDoubleSharp5v19CDown="",t.accSagittalDoubleSharp5v23SDown="",t.accSagittalDoubleSharp5v7kDown="",t.accSagittalDoubleSharp7CDown="",t.accSagittalDoubleSharp7v11CDown="",t.accSagittalDoubleSharp7v11kDown="",t.accSagittalDoubleSharp7v19CDown="",t.accSagittalFlat="",t.accSagittalFlat11LDown="",t.accSagittalFlat11MDown="",t.accSagittalFlat11v19LDown="",t.accSagittalFlat11v19MDown="",t.accSagittalFlat11v49CDown="",t.accSagittalFlat11v49CUp="",t.accSagittalFlat143CDown="",t.accSagittalFlat143CUp="",t.accSagittalFlat17CDown="",t.accSagittalFlat17CUp="",t.accSagittalFlat17kDown="",t.accSagittalFlat17kUp="",t.accSagittalFlat19CDown="",t.accSagittalFlat19CUp="",t.accSagittalFlat19sDown="",t.accSagittalFlat19sUp="",t.accSagittalFlat23CDown="",t.accSagittalFlat23CUp="",t.accSagittalFlat23SDown="",t.accSagittalFlat23SUp="",t.accSagittalFlat25SDown="",t.accSagittalFlat25SUp="",t.accSagittalFlat35LDown="",t.accSagittalFlat35MDown="",t.accSagittalFlat49LDown="",t.accSagittalFlat49MDown="",t.accSagittalFlat49SDown="",t.accSagittalFlat49SUp="",t.accSagittalFlat55CDown="",t.accSagittalFlat55CUp="",t.accSagittalFlat5CDown="",t.accSagittalFlat5CUp="",t.accSagittalFlat5v11SDown="",t.accSagittalFlat5v11SUp="",t.accSagittalFlat5v13LDown="",t.accSagittalFlat5v13MDown="",t.accSagittalFlat5v19CDown="",t.accSagittalFlat5v19CUp="",t.accSagittalFlat5v23SDown="",t.accSagittalFlat5v23SUp="",t.accSagittalFlat5v49MDown="",t.accSagittalFlat5v7kDown="",t.accSagittalFlat5v7kUp="",t.accSagittalFlat7CDown="",t.accSagittalFlat7CUp="",t.accSagittalFlat7v11CDown="",t.accSagittalFlat7v11CUp="",t.accSagittalFlat7v11kDown="",t.accSagittalFlat7v11kUp="",t.accSagittalFlat7v19CDown="",t.accSagittalFlat7v19CUp="",t.accSagittalFractionalTinaDown="",t.accSagittalFractionalTinaUp="",t.accSagittalGrave="",t.accSagittalShaftDown="",t.accSagittalShaftUp="",t.accSagittalSharp="",t.accSagittalSharp11LUp="",t.accSagittalSharp11MUp="",t.accSagittalSharp11v19LUp="",t.accSagittalSharp11v19MUp="",t.accSagittalSharp11v49CDown="",t.accSagittalSharp11v49CUp="",t.accSagittalSharp143CDown="",t.accSagittalSharp143CUp="",t.accSagittalSharp17CDown="",t.accSagittalSharp17CUp="",t.accSagittalSharp17kDown="",t.accSagittalSharp17kUp="",t.accSagittalSharp19CDown="",t.accSagittalSharp19CUp="",t.accSagittalSharp19sDown="",t.accSagittalSharp19sUp="",t.accSagittalSharp23CDown="",t.accSagittalSharp23CUp="",t.accSagittalSharp23SDown="",t.accSagittalSharp23SUp="",t.accSagittalSharp25SDown="",t.accSagittalSharp25SUp="",t.accSagittalSharp35LUp="",t.accSagittalSharp35MUp="",t.accSagittalSharp49LUp="",t.accSagittalSharp49MUp="",t.accSagittalSharp49SDown="",t.accSagittalSharp49SUp="",t.accSagittalSharp55CDown="",t.accSagittalSharp55CUp="",t.accSagittalSharp5CDown="",t.accSagittalSharp5CUp="",t.accSagittalSharp5v11SDown="",t.accSagittalSharp5v11SUp="",t.accSagittalSharp5v13LUp="",t.accSagittalSharp5v13MUp="",t.accSagittalSharp5v19CDown="",t.accSagittalSharp5v19CUp="",t.accSagittalSharp5v23SDown="",t.accSagittalSharp5v23SUp="",t.accSagittalSharp5v49MUp="",t.accSagittalSharp5v7kDown="",t.accSagittalSharp5v7kUp="",t.accSagittalSharp7CDown="",t.accSagittalSharp7CUp="",t.accSagittalSharp7v11CDown="",t.accSagittalSharp7v11CUp="",t.accSagittalSharp7v11kDown="",t.accSagittalSharp7v11kUp="",t.accSagittalSharp7v19CDown="",t.accSagittalSharp7v19CUp="",t.accSagittalUnused1="",t.accSagittalUnused2="",t.accSagittalUnused3="",t.accSagittalUnused4="",t.accdnCombDot="",t.accdnCombLH2RanksEmpty="",t.accdnCombLH3RanksEmptySquare="",t.accdnCombRH3RanksEmpty="",t.accdnCombRH4RanksEmpty="",t.accdnDiatonicClef="",t.accdnLH2Ranks16Round="",t.accdnLH2Ranks8Plus16Round="",t.accdnLH2Ranks8Round="",t.accdnLH2RanksFullMasterRound="",t.accdnLH2RanksMasterPlus16Round="",t.accdnLH2RanksMasterRound="",t.accdnLH3Ranks2Plus8Square="",t.accdnLH3Ranks2Square="",t.accdnLH3Ranks8Square="",t.accdnLH3RanksDouble8Square="",t.accdnLH3RanksTuttiSquare="",t.accdnPull="",t.accdnPush="",t.accdnRH3RanksAccordion="",t.accdnRH3RanksAuthenticMusette="",t.accdnRH3RanksBandoneon="",t.accdnRH3RanksBassoon="",t.accdnRH3RanksClarinet="",t.accdnRH3RanksDoubleTremoloLower8ve="",t.accdnRH3RanksDoubleTremoloUpper8ve="",t.accdnRH3RanksFullFactory="",t.accdnRH3RanksHarmonium="",t.accdnRH3RanksImitationMusette="",t.accdnRH3RanksLowerTremolo8="",t.accdnRH3RanksMaster="",t.accdnRH3RanksOboe="",t.accdnRH3RanksOrgan="",t.accdnRH3RanksPiccolo="",t.accdnRH3RanksTremoloLower8ve="",t.accdnRH3RanksTremoloUpper8ve="",t.accdnRH3RanksTwoChoirs="",t.accdnRH3RanksUpperTremolo8="",t.accdnRH3RanksViolin="",t.accdnRH4RanksAlto="",t.accdnRH4RanksBassAlto="",t.accdnRH4RanksMaster="",t.accdnRH4RanksSoftBass="",t.accdnRH4RanksSoftTenor="",t.accdnRH4RanksSoprano="",t.accdnRH4RanksTenor="",t.accdnRicochet2="",t.accdnRicochet3="",t.accdnRicochet4="",t.accdnRicochet5="",t.accdnRicochet6="",t.accdnRicochetStem2="",t.accdnRicochetStem3="",t.accdnRicochetStem4="",t.accdnRicochetStem5="",t.accdnRicochetStem6="",t.accidental1CommaFlat="",t.accidental1CommaSharp="",t.accidental2CommaFlat="",t.accidental2CommaSharp="",t.accidental3CommaFlat="",t.accidental3CommaSharp="",t.accidental4CommaFlat="",t.accidental5CommaSharp="",t.accidentalArrowDown="",t.accidentalArrowUp="",t.accidentalBakiyeFlat="",t.accidentalBakiyeSharp="",t.accidentalBracketLeft="",t.accidentalBracketRight="",t.accidentalBuyukMucennebFlat="",t.accidentalBuyukMucennebSharp="",t.accidentalCombiningCloseCurlyBrace="",t.accidentalCombiningLower17Schisma="",t.accidentalCombiningLower19Schisma="",t.accidentalCombiningLower23Limit29LimitComma="",t.accidentalCombiningLower29LimitComma="",t.accidentalCombiningLower31Schisma="",t.accidentalCombiningLower37Quartertone="",t.accidentalCombiningLower41Comma="",t.accidentalCombiningLower43Comma="",t.accidentalCombiningLower47Quartertone="",t.accidentalCombiningLower53LimitComma="",t.accidentalCombiningOpenCurlyBrace="",t.accidentalCombiningRaise17Schisma="",t.accidentalCombiningRaise19Schisma="",t.accidentalCombiningRaise23Limit29LimitComma="",t.accidentalCombiningRaise29LimitComma="",t.accidentalCombiningRaise31Schisma="",t.accidentalCombiningRaise37Quartertone="",t.accidentalCombiningRaise41Comma="",t.accidentalCombiningRaise43Comma="",t.accidentalCombiningRaise47Quartertone="",t.accidentalCombiningRaise53LimitComma="",t.accidentalCommaSlashDown="",t.accidentalCommaSlashUp="",t.accidentalDoubleFlat="",t.accidentalDoubleFlatArabic="",t.accidentalDoubleFlatEqualTempered="",t.accidentalDoubleFlatOneArrowDown="",t.accidentalDoubleFlatOneArrowUp="",t.accidentalDoubleFlatReversed="",t.accidentalDoubleFlatThreeArrowsDown="",t.accidentalDoubleFlatThreeArrowsUp="",t.accidentalDoubleFlatTurned="",t.accidentalDoubleFlatTwoArrowsDown="",t.accidentalDoubleFlatTwoArrowsUp="",t.accidentalDoubleSharp="",t.accidentalDoubleSharpArabic="",t.accidentalDoubleSharpEqualTempered="",t.accidentalDoubleSharpOneArrowDown="",t.accidentalDoubleSharpOneArrowUp="",t.accidentalDoubleSharpThreeArrowsDown="",t.accidentalDoubleSharpThreeArrowsUp="",t.accidentalDoubleSharpTwoArrowsDown="",t.accidentalDoubleSharpTwoArrowsUp="",t.accidentalEnharmonicAlmostEqualTo="",t.accidentalEnharmonicEquals="",t.accidentalEnharmonicTilde="",t.accidentalFilledReversedFlatAndFlat="",t.accidentalFilledReversedFlatAndFlatArrowDown="",t.accidentalFilledReversedFlatAndFlatArrowUp="",t.accidentalFilledReversedFlatArrowDown="",t.accidentalFilledReversedFlatArrowUp="",t.accidentalFiveQuarterTonesFlatArrowDown="",t.accidentalFiveQuarterTonesSharpArrowUp="",t.accidentalFlat="",t.accidentalFlatArabic="",t.accidentalFlatEqualTempered="",t.accidentalFlatLoweredStockhausen="",t.accidentalFlatOneArrowDown="",t.accidentalFlatOneArrowUp="",t.accidentalFlatRaisedStockhausen="",t.accidentalFlatRepeatedLineStockhausen="",t.accidentalFlatRepeatedSpaceStockhausen="",t.accidentalFlatThreeArrowsDown="",t.accidentalFlatThreeArrowsUp="",t.accidentalFlatTurned="",t.accidentalFlatTwoArrowsDown="",t.accidentalFlatTwoArrowsUp="",t.accidentalHabaFlatQuarterToneHigher="",t.accidentalHabaFlatThreeQuarterTonesLower="",t.accidentalHabaQuarterToneHigher="",t.accidentalHabaQuarterToneLower="",t.accidentalHabaSharpQuarterToneLower="",t.accidentalHabaSharpThreeQuarterTonesHigher="",t.accidentalHalfSharpArrowDown="",t.accidentalHalfSharpArrowUp="",t.accidentalJohnston13="",t.accidentalJohnston31="",t.accidentalJohnstonDown="",t.accidentalJohnstonEl="",t.accidentalJohnstonMinus="",t.accidentalJohnstonPlus="",t.accidentalJohnstonSeven="",t.accidentalJohnstonUp="",t.accidentalKomaFlat="",t.accidentalKomaSharp="",t.accidentalKoron="",t.accidentalKucukMucennebFlat="",t.accidentalKucukMucennebSharp="",t.accidentalLargeDoubleSharp="",t.accidentalLowerOneSeptimalComma="",t.accidentalLowerOneTridecimalQuartertone="",t.accidentalLowerOneUndecimalQuartertone="",t.accidentalLowerTwoSeptimalCommas="",t.accidentalLoweredStockhausen="",t.accidentalNarrowReversedFlat="",t.accidentalNarrowReversedFlatAndFlat="",t.accidentalNatural="",t.accidentalNaturalArabic="",t.accidentalNaturalEqualTempered="",t.accidentalNaturalFlat="",t.accidentalNaturalLoweredStockhausen="",t.accidentalNaturalOneArrowDown="",t.accidentalNaturalOneArrowUp="",t.accidentalNaturalRaisedStockhausen="",t.accidentalNaturalReversed="",t.accidentalNaturalSharp="",t.accidentalNaturalThreeArrowsDown="",t.accidentalNaturalThreeArrowsUp="",t.accidentalNaturalTwoArrowsDown="",t.accidentalNaturalTwoArrowsUp="",t.accidentalOneAndAHalfSharpsArrowDown="",t.accidentalOneAndAHalfSharpsArrowUp="",t.accidentalOneQuarterToneFlatFerneyhough="",t.accidentalOneQuarterToneFlatStockhausen="",t.accidentalOneQuarterToneSharpFerneyhough="",t.accidentalOneQuarterToneSharpStockhausen="",t.accidentalOneThirdToneFlatFerneyhough="",t.accidentalOneThirdToneSharpFerneyhough="",t.accidentalParensLeft="",t.accidentalParensRight="",t.accidentalQuarterFlatEqualTempered="",t.accidentalQuarterSharpEqualTempered="",t.accidentalQuarterToneFlat4="",t.accidentalQuarterToneFlatArabic="",t.accidentalQuarterToneFlatArrowUp="",t.accidentalQuarterToneFlatFilledReversed="",t.accidentalQuarterToneFlatNaturalArrowDown="",t.accidentalQuarterToneFlatPenderecki="",t.accidentalQuarterToneFlatStein="",t.accidentalQuarterToneFlatVanBlankenburg="",t.accidentalQuarterToneSharp4="",t.accidentalQuarterToneSharpArabic="",t.accidentalQuarterToneSharpArrowDown="",t.accidentalQuarterToneSharpBusotti="",t.accidentalQuarterToneSharpNaturalArrowUp="",t.accidentalQuarterToneSharpStein="",t.accidentalQuarterToneSharpWiggle="",t.accidentalRaiseOneSeptimalComma="",t.accidentalRaiseOneTridecimalQuartertone="",t.accidentalRaiseOneUndecimalQuartertone="",t.accidentalRaiseTwoSeptimalCommas="",t.accidentalRaisedStockhausen="",t.accidentalReversedFlatAndFlatArrowDown="",t.accidentalReversedFlatAndFlatArrowUp="",t.accidentalReversedFlatArrowDown="",t.accidentalReversedFlatArrowUp="",t.accidentalSharp="",t.accidentalSharpArabic="",t.accidentalSharpEqualTempered="",t.accidentalSharpLoweredStockhausen="",t.accidentalSharpOneArrowDown="",t.accidentalSharpOneArrowUp="",t.accidentalSharpOneHorizontalStroke="",t.accidentalSharpRaisedStockhausen="",t.accidentalSharpRepeatedLineStockhausen="",t.accidentalSharpRepeatedSpaceStockhausen="",t.accidentalSharpReversed="",t.accidentalSharpSharp="",t.accidentalSharpThreeArrowsDown="",t.accidentalSharpThreeArrowsUp="",t.accidentalSharpTwoArrowsDown="",t.accidentalSharpTwoArrowsUp="",t.accidentalSims12Down="",t.accidentalSims12Up="",t.accidentalSims4Down="",t.accidentalSims4Up="",t.accidentalSims6Down="",t.accidentalSims6Up="",t.accidentalSori="",t.accidentalTavenerFlat="",t.accidentalTavenerSharp="",t.accidentalThreeQuarterTonesFlatArabic="",t.accidentalThreeQuarterTonesFlatArrowDown="",t.accidentalThreeQuarterTonesFlatArrowUp="",t.accidentalThreeQuarterTonesFlatCouper="",t.accidentalThreeQuarterTonesFlatGrisey="",t.accidentalThreeQuarterTonesFlatTartini="",t.accidentalThreeQuarterTonesFlatZimmermann="",t.accidentalThreeQuarterTonesSharpArabic="",t.accidentalThreeQuarterTonesSharpArrowDown="",t.accidentalThreeQuarterTonesSharpArrowUp="",t.accidentalThreeQuarterTonesSharpBusotti="",t.accidentalThreeQuarterTonesSharpStein="",t.accidentalThreeQuarterTonesSharpStockhausen="",t.accidentalTripleFlat="",t.accidentalTripleSharp="",t.accidentalTwoThirdTonesFlatFerneyhough="",t.accidentalTwoThirdTonesSharpFerneyhough="",t.accidentalUpsAndDownsDown="",t.accidentalUpsAndDownsLess="",t.accidentalUpsAndDownsMore="",t.accidentalUpsAndDownsUp="",t.accidentalWilsonMinus="",t.accidentalWilsonPlus="",t.accidentalWyschnegradsky10TwelfthsFlat="",t.accidentalWyschnegradsky10TwelfthsSharp="",t.accidentalWyschnegradsky11TwelfthsFlat="",t.accidentalWyschnegradsky11TwelfthsSharp="",t.accidentalWyschnegradsky1TwelfthsFlat="",t.accidentalWyschnegradsky1TwelfthsSharp="",t.accidentalWyschnegradsky2TwelfthsFlat="",t.accidentalWyschnegradsky2TwelfthsSharp="",t.accidentalWyschnegradsky3TwelfthsFlat="",t.accidentalWyschnegradsky3TwelfthsSharp="",t.accidentalWyschnegradsky4TwelfthsFlat="",t.accidentalWyschnegradsky4TwelfthsSharp="",t.accidentalWyschnegradsky5TwelfthsFlat="",t.accidentalWyschnegradsky5TwelfthsSharp="",t.accidentalWyschnegradsky6TwelfthsFlat="",t.accidentalWyschnegradsky6TwelfthsSharp="",t.accidentalWyschnegradsky7TwelfthsFlat="",t.accidentalWyschnegradsky7TwelfthsSharp="",t.accidentalWyschnegradsky8TwelfthsFlat="",t.accidentalWyschnegradsky8TwelfthsSharp="",t.accidentalWyschnegradsky9TwelfthsFlat="",t.accidentalWyschnegradsky9TwelfthsSharp="",t.accidentalXenakisOneThirdToneSharp="",t.accidentalXenakisTwoThirdTonesSharp="",t.analyticsChoralmelodie="",t.analyticsEndStimme="",t.analyticsHauptrhythmus="",t.analyticsHauptstimme="",t.analyticsInversion1="",t.analyticsNebenstimme="",t.analyticsStartStimme="",t.analyticsTheme="",t.analyticsTheme1="",t.analyticsThemeInversion="",t.analyticsThemeRetrograde="",t.analyticsThemeRetrogradeInversion="",t.arpeggiato="",t.arpeggiatoDown="",t.arpeggiatoUp="",t.arrowBlackDown="",t.arrowBlackDownLeft="",t.arrowBlackDownRight="",t.arrowBlackLeft="",t.arrowBlackRight="",t.arrowBlackUp="",t.arrowBlackUpLeft="",t.arrowBlackUpRight="",t.arrowOpenDown="",t.arrowOpenDownLeft="",t.arrowOpenDownRight="",t.arrowOpenLeft="",t.arrowOpenRight="",t.arrowOpenUp="",t.arrowOpenUpLeft="",t.arrowOpenUpRight="",t.arrowWhiteDown="",t.arrowWhiteDownLeft="",t.arrowWhiteDownRight="",t.arrowWhiteLeft="",t.arrowWhiteRight="",t.arrowWhiteUp="",t.arrowWhiteUpLeft="",t.arrowWhiteUpRight="",t.arrowheadBlackDown="",t.arrowheadBlackDownLeft="",t.arrowheadBlackDownRight="",t.arrowheadBlackLeft="",t.arrowheadBlackRight="",t.arrowheadBlackUp="",t.arrowheadBlackUpLeft="",t.arrowheadBlackUpRight="",t.arrowheadOpenDown="",t.arrowheadOpenDownLeft="",t.arrowheadOpenDownRight="",t.arrowheadOpenLeft="",t.arrowheadOpenRight="",t.arrowheadOpenUp="",t.arrowheadOpenUpLeft="",t.arrowheadOpenUpRight="",t.arrowheadWhiteDown="",t.arrowheadWhiteDownLeft="",t.arrowheadWhiteDownRight="",t.arrowheadWhiteLeft="",t.arrowheadWhiteRight="",t.arrowheadWhiteUp="",t.arrowheadWhiteUpLeft="",t.arrowheadWhiteUpRight="",t.articAccentAbove="",t.articAccentBelow="",t.articAccentStaccatoAbove="",t.articAccentStaccatoBelow="",t.articLaissezVibrerAbove="",t.articLaissezVibrerBelow="",t.articMarcatoAbove="",t.articMarcatoBelow="",t.articMarcatoStaccatoAbove="",t.articMarcatoStaccatoBelow="",t.articMarcatoTenutoAbove="",t.articMarcatoTenutoBelow="",t.articSoftAccentAbove="",t.articSoftAccentBelow="",t.articSoftAccentStaccatoAbove="",t.articSoftAccentStaccatoBelow="",t.articSoftAccentTenutoAbove="",t.articSoftAccentTenutoBelow="",t.articSoftAccentTenutoStaccatoAbove="",t.articSoftAccentTenutoStaccatoBelow="",t.articStaccatissimoAbove="",t.articStaccatissimoBelow="",t.articStaccatissimoStrokeAbove="",t.articStaccatissimoStrokeBelow="",t.articStaccatissimoWedgeAbove="",t.articStaccatissimoWedgeBelow="",t.articStaccatoAbove="",t.articStaccatoBelow="",t.articStressAbove="",t.articStressBelow="",t.articTenutoAbove="",t.articTenutoAccentAbove="",t.articTenutoAccentBelow="",t.articTenutoBelow="",t.articTenutoStaccatoAbove="",t.articTenutoStaccatoBelow="",t.articUnstressAbove="",t.articUnstressBelow="",t.augmentationDot="",t.barlineDashed="",t.barlineDotted="",t.barlineDouble="",t.barlineFinal="",t.barlineHeavy="",t.barlineHeavyHeavy="",t.barlineReverseFinal="",t.barlineShort="",t.barlineSingle="",t.barlineTick="",t.beamAccelRit1="",t.beamAccelRit10="",t.beamAccelRit11="",t.beamAccelRit12="",t.beamAccelRit13="",t.beamAccelRit14="",t.beamAccelRit15="",t.beamAccelRit2="",t.beamAccelRit3="",t.beamAccelRit4="",t.beamAccelRit5="",t.beamAccelRit6="",t.beamAccelRit7="",t.beamAccelRit8="",t.beamAccelRit9="",t.beamAccelRitFinal="",t.brace="",t.bracket="",t.bracketBottom="",t.bracketTop="",t.brassBend="",t.brassDoitLong="",t.brassDoitMedium="",t.brassDoitShort="",t.brassFallLipLong="",t.brassFallLipMedium="",t.brassFallLipShort="",t.brassFallRoughLong="",t.brassFallRoughMedium="",t.brassFallRoughShort="",t.brassFallSmoothLong="",t.brassFallSmoothMedium="",t.brassFallSmoothShort="",t.brassFlip="",t.brassHarmonMuteClosed="",t.brassHarmonMuteStemHalfLeft="",t.brassHarmonMuteStemHalfRight="",t.brassHarmonMuteStemOpen="",t.brassJazzTurn="",t.brassLiftLong="",t.brassLiftMedium="",t.brassLiftShort="",t.brassLiftSmoothLong="",t.brassLiftSmoothMedium="",t.brassLiftSmoothShort="",t.brassMuteClosed="",t.brassMuteHalfClosed="",t.brassMuteOpen="",t.brassPlop="",t.brassScoop="",t.brassSmear="",t.brassValveTrill="",t.breathMarkComma="",t.breathMarkSalzedo="",t.breathMarkTick="",t.breathMarkUpbow="",t.bridgeClef="",t.buzzRoll="",t.cClef="",t.cClef8vb="",t.cClefArrowDown="",t.cClefArrowUp="",t.cClefChange="",t.cClefCombining="",t.cClefReversed="",t.cClefSquare="",t.caesura="",t.caesuraCurved="",t.caesuraShort="",t.caesuraSingleStroke="",t.caesuraThick="",t.chantAccentusAbove="",t.chantAccentusBelow="",t.chantAuctumAsc="",t.chantAuctumDesc="",t.chantAugmentum="",t.chantCaesura="",t.chantCclef="",t.chantCirculusAbove="",t.chantCirculusBelow="",t.chantConnectingLineAsc2nd="",t.chantConnectingLineAsc3rd="",t.chantConnectingLineAsc4th="",t.chantConnectingLineAsc5th="",t.chantConnectingLineAsc6th="",t.chantCustosStemDownPosHigh="",t.chantCustosStemDownPosHighest="",t.chantCustosStemDownPosMiddle="",t.chantCustosStemUpPosLow="",t.chantCustosStemUpPosLowest="",t.chantCustosStemUpPosMiddle="",t.chantDeminutumLower="",t.chantDeminutumUpper="",t.chantDivisioFinalis="",t.chantDivisioMaior="",t.chantDivisioMaxima="",t.chantDivisioMinima="",t.chantEntryLineAsc2nd="",t.chantEntryLineAsc3rd="",t.chantEntryLineAsc4th="",t.chantEntryLineAsc5th="",t.chantEntryLineAsc6th="",t.chantEpisema="",t.chantFclef="",t.chantIctusAbove="",t.chantIctusBelow="",t.chantLigaturaDesc2nd="",t.chantLigaturaDesc3rd="",t.chantLigaturaDesc4th="",t.chantLigaturaDesc5th="",t.chantOriscusAscending="",t.chantOriscusDescending="",t.chantOriscusLiquescens="",t.chantPodatusLower="",t.chantPodatusUpper="",t.chantPunctum="",t.chantPunctumCavum="",t.chantPunctumDeminutum="",t.chantPunctumInclinatum="",t.chantPunctumInclinatumAuctum="",t.chantPunctumInclinatumDeminutum="",t.chantPunctumLinea="",t.chantPunctumLineaCavum="",t.chantPunctumVirga="",t.chantPunctumVirgaReversed="",t.chantQuilisma="",t.chantSemicirculusAbove="",t.chantSemicirculusBelow="",t.chantStaff="",t.chantStaffNarrow="",t.chantStaffWide="",t.chantStrophicus="",t.chantStrophicusAuctus="",t.chantStrophicusLiquescens2nd="",t.chantStrophicusLiquescens3rd="",t.chantStrophicusLiquescens4th="",t.chantStrophicusLiquescens5th="",t.chantVirgula="",t.clef15="",t.clef8="",t.clefChangeCombining="",t.coda="",t.codaSquare="",t.conductorBeat2Compound="",t.conductorBeat2Simple="",t.conductorBeat3Compound="",t.conductorBeat3Simple="",t.conductorBeat4Compound="",t.conductorBeat4Simple="",t.conductorLeftBeat="",t.conductorRightBeat="",t.conductorStrongBeat="",t.conductorUnconducted="",t.conductorWeakBeat="",t.controlBeginBeam="",t.controlBeginPhrase="",t.controlBeginSlur="",t.controlBeginTie="",t.controlEndBeam="",t.controlEndPhrase="",t.controlEndSlur="",t.controlEndTie="",t.csymAccidentalDoubleFlat="",t.csymAccidentalDoubleSharp="",t.csymAccidentalFlat="",t.csymAccidentalNatural="",t.csymAccidentalSharp="",t.csymAccidentalTripleFlat="",t.csymAccidentalTripleSharp="",t.csymAlteredBassSlash="",t.csymAugmented="",t.csymBracketLeftTall="",t.csymBracketRightTall="",t.csymDiagonalArrangementSlash="",t.csymDiminished="",t.csymHalfDiminished="",t.csymMajorSeventh="",t.csymMinor="",t.csymParensLeftTall="",t.csymParensLeftVeryTall="",t.csymParensRightTall="",t.csymParensRightVeryTall="",t.curlewSign="",t.daCapo="",t.dalSegno="",t.daseianExcellentes1="",t.daseianExcellentes2="",t.daseianExcellentes3="",t.daseianExcellentes4="",t.daseianFinales1="",t.daseianFinales2="",t.daseianFinales3="",t.daseianFinales4="",t.daseianGraves1="",t.daseianGraves2="",t.daseianGraves3="",t.daseianGraves4="",t.daseianResidua1="",t.daseianResidua2="",t.daseianSuperiores1="",t.daseianSuperiores2="",t.daseianSuperiores3="",t.daseianSuperiores4="",t.doubleLateralRollStevens="",t.doubleTongueAbove="",t.doubleTongueBelow="",t.dynamicCombinedSeparatorColon="",t.dynamicCombinedSeparatorHyphen="",t.dynamicCombinedSeparatorSlash="",t.dynamicCombinedSeparatorSpace="",t.dynamicCrescendoHairpin="",t.dynamicDiminuendoHairpin="",t.dynamicFF="",t.dynamicFFF="",t.dynamicFFFF="",t.dynamicFFFFF="",t.dynamicFFFFFF="",t.dynamicForte="",t.dynamicFortePiano="",t.dynamicForzando="",t.dynamicHairpinBracketLeft="",t.dynamicHairpinBracketRight="",t.dynamicHairpinParenthesisLeft="",t.dynamicHairpinParenthesisRight="",t.dynamicMF="",t.dynamicMP="",t.dynamicMessaDiVoce="",t.dynamicMezzo="",t.dynamicNiente="",t.dynamicNienteForHairpin="",t.dynamicPF="",t.dynamicPP="",t.dynamicPPP="",t.dynamicPPPP="",t.dynamicPPPPP="",t.dynamicPPPPPP="",t.dynamicPiano="",t.dynamicRinforzando="",t.dynamicRinforzando1="",t.dynamicRinforzando2="",t.dynamicSforzando="",t.dynamicSforzando1="",t.dynamicSforzandoPianissimo="",t.dynamicSforzandoPiano="",t.dynamicSforzato="",t.dynamicSforzatoFF="",t.dynamicSforzatoPiano="",t.dynamicZ="",t.elecAudioChannelsEight="",t.elecAudioChannelsFive="",t.elecAudioChannelsFour="",t.elecAudioChannelsOne="",t.elecAudioChannelsSeven="",t.elecAudioChannelsSix="",t.elecAudioChannelsThreeFrontal="",t.elecAudioChannelsThreeSurround="",t.elecAudioChannelsTwo="",t.elecAudioIn="",t.elecAudioMono="",t.elecAudioOut="",t.elecAudioStereo="",t.elecCamera="",t.elecDataIn="",t.elecDataOut="",t.elecDisc="",t.elecDownload="",t.elecEject="",t.elecFastForward="",t.elecHeadphones="",t.elecHeadset="",t.elecLineIn="",t.elecLineOut="",t.elecLoop="",t.elecLoudspeaker="",t.elecMIDIController0="",t.elecMIDIController100="",t.elecMIDIController20="",t.elecMIDIController40="",t.elecMIDIController60="",t.elecMIDIController80="",t.elecMIDIIn="",t.elecMIDIOut="",t.elecMicrophone="",t.elecMicrophoneMute="",t.elecMicrophoneUnmute="",t.elecMixingConsole="",t.elecMonitor="",t.elecMute="",t.elecPause="",t.elecPlay="",t.elecPowerOnOff="",t.elecProjector="",t.elecReplay="",t.elecRewind="",t.elecShuffle="",t.elecSkipBackwards="",t.elecSkipForwards="",t.elecStop="",t.elecTape="",t.elecUSB="",t.elecUnmute="",t.elecUpload="",t.elecVideoCamera="",t.elecVideoIn="",t.elecVideoOut="",t.elecVolumeFader="",t.elecVolumeFaderThumb="",t.elecVolumeLevel0="",t.elecVolumeLevel100="",t.elecVolumeLevel20="",t.elecVolumeLevel40="",t.elecVolumeLevel60="",t.elecVolumeLevel80="",t.fClef="",t.fClef15ma="",t.fClef15mb="",t.fClef8va="",t.fClef8vb="",t.fClefArrowDown="",t.fClefArrowUp="",t.fClefChange="",t.fClefReversed="",t.fClefTurned="",t.fermataAbove="",t.fermataBelow="",t.fermataLongAbove="",t.fermataLongBelow="",t.fermataLongHenzeAbove="",t.fermataLongHenzeBelow="",t.fermataShortAbove="",t.fermataShortBelow="",t.fermataShortHenzeAbove="",t.fermataShortHenzeBelow="",t.fermataVeryLongAbove="",t.fermataVeryLongBelow="",t.fermataVeryShortAbove="",t.fermataVeryShortBelow="",t.figbass0="",t.figbass1="",t.figbass2="",t.figbass2Raised="",t.figbass3="",t.figbass4="",t.figbass4Raised="",t.figbass5="",t.figbass5Raised1="",t.figbass5Raised2="",t.figbass5Raised3="",t.figbass6="",t.figbass6Raised="",t.figbass6Raised2="",t.figbass7="",t.figbass7Diminished="",t.figbass7Raised1="",t.figbass7Raised2="",t.figbass8="",t.figbass9="",t.figbass9Raised="",t.figbassBracketLeft="",t.figbassBracketRight="",t.figbassCombiningLowering="",t.figbassCombiningRaising="",t.figbassDoubleFlat="",t.figbassDoubleSharp="",t.figbassFlat="",t.figbassNatural="",t.figbassParensLeft="",t.figbassParensRight="",t.figbassPlus="",t.figbassSharp="",t.figbassTripleFlat="",t.figbassTripleSharp="",t.fingering0="",t.fingering0Italic="",t.fingering1="",t.fingering1Italic="",t.fingering2="",t.fingering2Italic="",t.fingering3="",t.fingering3Italic="",t.fingering4="",t.fingering4Italic="",t.fingering5="",t.fingering5Italic="",t.fingering6="",t.fingering6Italic="",t.fingering7="",t.fingering7Italic="",t.fingering8="",t.fingering8Italic="",t.fingering9="",t.fingering9Italic="",t.fingeringALower="",t.fingeringCLower="",t.fingeringELower="",t.fingeringILower="",t.fingeringLeftBracket="",t.fingeringLeftBracketItalic="",t.fingeringLeftParenthesis="",t.fingeringLeftParenthesisItalic="",t.fingeringMLower="",t.fingeringMultipleNotes="",t.fingeringOLower="",t.fingeringPLower="",t.fingeringQLower="",t.fingeringRightBracket="",t.fingeringRightBracketItalic="",t.fingeringRightParenthesis="",t.fingeringRightParenthesisItalic="",t.fingeringSLower="",t.fingeringSeparatorMiddleDot="",t.fingeringSeparatorMiddleDotWhite="",t.fingeringSeparatorSlash="",t.fingeringSubstitutionAbove="",t.fingeringSubstitutionBelow="",t.fingeringSubstitutionDash="",t.fingeringTLower="",t.fingeringTUpper="",t.fingeringXLower="",t.flag1024thDown="",t.flag1024thUp="",t.flag128thDown="",t.flag128thUp="",t.flag16thDown="",t.flag16thUp="",t.flag256thDown="",t.flag256thUp="",t.flag32ndDown="",t.flag32ndUp="",t.flag512thDown="",t.flag512thUp="",t.flag64thDown="",t.flag64thUp="",t.flag8thDown="",t.flag8thUp="",t.flagInternalDown="",t.flagInternalUp="",t.fretboard3String="",t.fretboard3StringNut="",t.fretboard4String="",t.fretboard4StringNut="",t.fretboard5String="",t.fretboard5StringNut="",t.fretboard6String="",t.fretboard6StringNut="",t.fretboardFilledCircle="",t.fretboardO="",t.fretboardX="",t.functionAngleLeft="",t.functionAngleRight="",t.functionBracketLeft="",t.functionBracketRight="",t.functionDD="",t.functionDLower="",t.functionDUpper="",t.functionEight="",t.functionFUpper="",t.functionFive="",t.functionFour="",t.functionGLower="",t.functionGUpper="",t.functionGreaterThan="",t.functionILower="",t.functionIUpper="",t.functionKLower="",t.functionKUpper="",t.functionLLower="",t.functionLUpper="",t.functionLessThan="",t.functionMLower="",t.functionMUpper="",t.functionMinus="",t.functionNLower="",t.functionNUpper="",t.functionNUpperSuperscript="",t.functionNine="",t.functionOne="",t.functionPLower="",t.functionPUpper="",t.functionParensLeft="",t.functionParensRight="",t.functionPlus="",t.functionRLower="",t.functionRepetition1="",t.functionRepetition2="",t.functionRing="",t.functionSLower="",t.functionSSLower="",t.functionSSUpper="",t.functionSUpper="",t.functionSeven="",t.functionSix="",t.functionSlashedDD="",t.functionTLower="",t.functionTUpper="",t.functionThree="",t.functionTwo="",t.functionVLower="",t.functionVUpper="",t.functionZero="",t.gClef="",t.gClef15ma="",t.gClef15mb="",t.gClef8va="",t.gClef8vb="",t.gClef8vbCClef="",t.gClef8vbOld="",t.gClef8vbParens="",t.gClefArrowDown="",t.gClefArrowUp="",t.gClefChange="",t.gClefLigatedNumberAbove="",t.gClefLigatedNumberBelow="",t.gClefReversed="",t.gClefTurned="",t.glissandoDown="",t.glissandoUp="",t.graceNoteAcciaccaturaStemDown="",t.graceNoteAcciaccaturaStemUp="",t.graceNoteAppoggiaturaStemDown="",t.graceNoteAppoggiaturaStemUp="",t.graceNoteSlashStemDown="",t.graceNoteSlashStemUp="",t.guitarBarreFull="",t.guitarBarreHalf="",t.guitarClosePedal="",t.guitarFadeIn="",t.guitarFadeOut="",t.guitarGolpe="",t.guitarHalfOpenPedal="",t.guitarLeftHandTapping="",t.guitarOpenPedal="",t.guitarRightHandTapping="",t.guitarShake="",t.guitarString0="",t.guitarString1="",t.guitarString10="",t.guitarString11="",t.guitarString12="",t.guitarString13="",t.guitarString2="",t.guitarString3="",t.guitarString4="",t.guitarString5="",t.guitarString6="",t.guitarString7="",t.guitarString8="",t.guitarString9="",t.guitarStrumDown="",t.guitarStrumUp="",t.guitarVibratoBarDip="",t.guitarVibratoBarScoop="",t.guitarVibratoStroke="",t.guitarVolumeSwell="",t.guitarWideVibratoStroke="",t.handbellsBelltree="",t.handbellsDamp3="",t.handbellsEcho1="",t.handbellsEcho2="",t.handbellsGyro="",t.handbellsHandMartellato="",t.handbellsMalletBellOnTable="",t.handbellsMalletBellSuspended="",t.handbellsMalletLft="",t.handbellsMartellato="",t.handbellsMartellatoLift="",t.handbellsMutedMartellato="",t.handbellsPluckLift="",t.handbellsSwing="",t.handbellsSwingDown="",t.handbellsSwingUp="",t.handbellsTablePairBells="",t.handbellsTableSingleBell="",t.harpMetalRod="",t.harpPedalCentered="",t.harpPedalDivider="",t.harpPedalLowered="",t.harpPedalRaised="",t.harpSalzedoAeolianAscending="",t.harpSalzedoAeolianDescending="",t.harpSalzedoDampAbove="",t.harpSalzedoDampBelow="",t.harpSalzedoDampBothHands="",t.harpSalzedoDampLowStrings="",t.harpSalzedoFluidicSoundsLeft="",t.harpSalzedoFluidicSoundsRight="",t.harpSalzedoIsolatedSounds="",t.harpSalzedoMetallicSounds="",t.harpSalzedoMetallicSoundsOneString="",t.harpSalzedoMuffleTotally="",t.harpSalzedoOboicFlux="",t.harpSalzedoPlayUpperEnd="",t.harpSalzedoSlideWithSuppleness="",t.harpSalzedoSnareDrum="",t.harpSalzedoTamTamSounds="",t.harpSalzedoThunderEffect="",t.harpSalzedoTimpanicSounds="",t.harpSalzedoWhistlingSounds="",t.harpStringNoiseStem="",t.harpTuningKey="",t.harpTuningKeyGlissando="",t.harpTuningKeyHandle="",t.harpTuningKeyShank="",t.indianDrumClef="",t.kahnBackChug="",t.kahnBackFlap="",t.kahnBackRiff="",t.kahnBackRip="",t.kahnBallChange="",t.kahnBallDig="",t.kahnBrushBackward="",t.kahnBrushForward="",t.kahnChug="",t.kahnClap="",t.kahnDoubleSnap="",t.kahnDoubleWing="",t.kahnDrawStep="",t.kahnDrawTap="",t.kahnFlam="",t.kahnFlap="",t.kahnFlapStep="",t.kahnFlat="",t.kahnFleaHop="",t.kahnFleaTap="",t.kahnGraceTap="",t.kahnGraceTapChange="",t.kahnGraceTapHop="",t.kahnGraceTapStamp="",t.kahnHeel="",t.kahnHeelChange="",t.kahnHeelClick="",t.kahnHeelDrop="",t.kahnHeelStep="",t.kahnHeelTap="",t.kahnHop="",t.kahnJumpApart="",t.kahnJumpTogether="",t.kahnKneeInward="",t.kahnKneeOutward="",t.kahnLeap="",t.kahnLeapFlatFoot="",t.kahnLeapHeelClick="",t.kahnLeftCatch="",t.kahnLeftCross="",t.kahnLeftFoot="",t.kahnLeftToeStrike="",t.kahnLeftTurn="",t.kahnOverTheTop="",t.kahnOverTheTopTap="",t.kahnPull="",t.kahnPush="",t.kahnRiff="",t.kahnRiffle="",t.kahnRightCatch="",t.kahnRightCross="",t.kahnRightFoot="",t.kahnRightToeStrike="",t.kahnRightTurn="",t.kahnRip="",t.kahnRipple="",t.kahnScrape="",t.kahnScuff="",t.kahnScuffle="",t.kahnShuffle="",t.kahnSlam="",t.kahnSlap="",t.kahnSlideStep="",t.kahnSlideTap="",t.kahnSnap="",t.kahnStamp="",t.kahnStampStamp="",t.kahnStep="",t.kahnStepStamp="",t.kahnStomp="",t.kahnStompBrush="",t.kahnTap="",t.kahnToe="",t.kahnToeClick="",t.kahnToeDrop="",t.kahnToeStep="",t.kahnToeTap="",t.kahnTrench="",t.kahnWing="",t.kahnWingChange="",t.kahnZank="",t.kahnZink="",t.keyboardBebung2DotsAbove="",t.keyboardBebung2DotsBelow="",t.keyboardBebung3DotsAbove="",t.keyboardBebung3DotsBelow="",t.keyboardBebung4DotsAbove="",t.keyboardBebung4DotsBelow="",t.keyboardLeftPedalPictogram="",t.keyboardMiddlePedalPictogram="",t.keyboardPedalD="",t.keyboardPedalDot="",t.keyboardPedalE="",t.keyboardPedalHalf="",t.keyboardPedalHalf2="",t.keyboardPedalHalf3="",t.keyboardPedalHeel1="",t.keyboardPedalHeel2="",t.keyboardPedalHeel3="",t.keyboardPedalHeelToToe="",t.keyboardPedalHeelToe="",t.keyboardPedalHookEnd="",t.keyboardPedalHookStart="",t.keyboardPedalHyphen="",t.keyboardPedalP="",t.keyboardPedalParensLeft="",t.keyboardPedalParensRight="",t.keyboardPedalPed="",t.keyboardPedalS="",t.keyboardPedalSost="",t.keyboardPedalToe1="",t.keyboardPedalToe2="",t.keyboardPedalToeToHeel="",t.keyboardPedalUp="",t.keyboardPedalUpNotch="",t.keyboardPedalUpSpecial="",t.keyboardPlayWithLH="",t.keyboardPlayWithLHEnd="",t.keyboardPlayWithRH="",t.keyboardPlayWithRHEnd="",t.keyboardPluckInside="",t.keyboardRightPedalPictogram="",t.kievanAccidentalFlat="",t.kievanAccidentalSharp="",t.kievanAugmentationDot="",t.kievanCClef="",t.kievanEndingSymbol="",t.kievanNote8thStemDown="",t.kievanNote8thStemUp="",t.kievanNoteBeam="",t.kievanNoteHalfStaffLine="",t.kievanNoteHalfStaffSpace="",t.kievanNoteQuarterStemDown="",t.kievanNoteQuarterStemUp="",t.kievanNoteReciting="",t.kievanNoteWhole="",t.kievanNoteWholeFinal="",t.kodalyHandDo="",t.kodalyHandFa="",t.kodalyHandLa="",t.kodalyHandMi="",t.kodalyHandRe="",t.kodalyHandSo="",t.kodalyHandTi="",t.leftRepeatSmall="",t.legerLine="",t.legerLineNarrow="",t.legerLineWide="",t.luteBarlineEndRepeat="",t.luteBarlineFinal="",t.luteBarlineStartRepeat="",t.luteDuration16th="",t.luteDuration32nd="",t.luteDuration8th="",t.luteDurationDoubleWhole="",t.luteDurationHalf="",t.luteDurationQuarter="",t.luteDurationWhole="",t.luteFingeringRHFirst="",t.luteFingeringRHSecond="",t.luteFingeringRHThird="",t.luteFingeringRHThumb="",t.luteFrench10thCourse="",t.luteFrench7thCourse="",t.luteFrench8thCourse="",t.luteFrench9thCourse="",t.luteFrenchAppoggiaturaAbove="",t.luteFrenchAppoggiaturaBelow="",t.luteFrenchFretA="",t.luteFrenchFretB="",t.luteFrenchFretC="",t.luteFrenchFretD="",t.luteFrenchFretE="",t.luteFrenchFretF="",t.luteFrenchFretG="",t.luteFrenchFretH="",t.luteFrenchFretI="",t.luteFrenchFretK="",t.luteFrenchFretL="",t.luteFrenchFretM="",t.luteFrenchFretN="",t.luteFrenchMordentInverted="",t.luteFrenchMordentLower="",t.luteFrenchMordentUpper="",t.luteGermanALower="",t.luteGermanAUpper="",t.luteGermanBLower="",t.luteGermanBUpper="",t.luteGermanCLower="",t.luteGermanCUpper="",t.luteGermanDLower="",t.luteGermanDUpper="",t.luteGermanELower="",t.luteGermanEUpper="",t.luteGermanFLower="",t.luteGermanFUpper="",t.luteGermanGLower="",t.luteGermanGUpper="",t.luteGermanHLower="",t.luteGermanHUpper="",t.luteGermanILower="",t.luteGermanIUpper="",t.luteGermanKLower="",t.luteGermanKUpper="",t.luteGermanLLower="",t.luteGermanLUpper="",t.luteGermanMLower="",t.luteGermanMUpper="",t.luteGermanNLower="",t.luteGermanNUpper="",t.luteGermanOLower="",t.luteGermanPLower="",t.luteGermanQLower="",t.luteGermanRLower="",t.luteGermanSLower="",t.luteGermanTLower="",t.luteGermanVLower="",t.luteGermanXLower="",t.luteGermanYLower="",t.luteGermanZLower="",t.luteItalianClefCSolFaUt="",t.luteItalianClefFFaUt="",t.luteItalianFret0="",t.luteItalianFret1="",t.luteItalianFret2="",t.luteItalianFret3="",t.luteItalianFret4="",t.luteItalianFret5="",t.luteItalianFret6="",t.luteItalianFret7="",t.luteItalianFret8="",t.luteItalianFret9="",t.luteItalianHoldFinger="",t.luteItalianHoldNote="",t.luteItalianReleaseFinger="",t.luteItalianTempoFast="",t.luteItalianTempoNeitherFastNorSlow="",t.luteItalianTempoSlow="",t.luteItalianTempoSomewhatFast="",t.luteItalianTempoVerySlow="",t.luteItalianTimeTriple="",t.luteItalianTremolo="",t.luteItalianVibrato="",t.luteStaff6Lines="",t.luteStaff6LinesNarrow="",t.luteStaff6LinesWide="",t.lyricsElision="",t.lyricsElisionNarrow="",t.lyricsElisionWide="",t.lyricsHyphenBaseline="",t.lyricsHyphenBaselineNonBreaking="",t.lyricsTextRepeat="",t.medRenFlatHardB="",t.medRenFlatSoftB="",t.medRenFlatWithDot="",t.medRenGClefCMN="",t.medRenLiquescenceCMN="",t.medRenLiquescentAscCMN="",t.medRenLiquescentDescCMN="",t.medRenNatural="",t.medRenNaturalWithCross="",t.medRenOriscusCMN="",t.medRenPlicaCMN="",t.medRenPunctumCMN="",t.medRenQuilismaCMN="",t.medRenSharpCroix="",t.medRenStrophicusCMN="",t.mensuralAlterationSign="",t.mensuralBlackBrevis="",t.mensuralBlackBrevisVoid="",t.mensuralBlackDragma="",t.mensuralBlackLonga="",t.mensuralBlackMaxima="",t.mensuralBlackMinima="",t.mensuralBlackMinimaVoid="",t.mensuralBlackSemibrevis="",t.mensuralBlackSemibrevisCaudata="",t.mensuralBlackSemibrevisOblique="",t.mensuralBlackSemibrevisVoid="",t.mensuralBlackSemiminima="",t.mensuralCclef="",t.mensuralCclefPetrucciPosHigh="",t.mensuralCclefPetrucciPosHighest="",t.mensuralCclefPetrucciPosLow="",t.mensuralCclefPetrucciPosLowest="",t.mensuralCclefPetrucciPosMiddle="",t.mensuralColorationEndRound="",t.mensuralColorationEndSquare="",t.mensuralColorationStartRound="",t.mensuralColorationStartSquare="",t.mensuralCombStemDiagonal="",t.mensuralCombStemDown="",t.mensuralCombStemDownFlagExtended="",t.mensuralCombStemDownFlagFlared="",t.mensuralCombStemDownFlagFusa="",t.mensuralCombStemDownFlagLeft="",t.mensuralCombStemDownFlagRight="",t.mensuralCombStemDownFlagSemiminima="",t.mensuralCombStemUp="",t.mensuralCombStemUpFlagExtended="",t.mensuralCombStemUpFlagFlared="",t.mensuralCombStemUpFlagFusa="",t.mensuralCombStemUpFlagLeft="",t.mensuralCombStemUpFlagRight="",t.mensuralCombStemUpFlagSemiminima="",t.mensuralCustosCheckmark="",t.mensuralCustosDown="",t.mensuralCustosTurn="",t.mensuralCustosUp="",t.mensuralFclef="",t.mensuralFclefPetrucci="",t.mensuralGclef="",t.mensuralGclefPetrucci="",t.mensuralModusImperfectumVert="",t.mensuralModusPerfectumVert="",t.mensuralNoteheadLongaBlack="",t.mensuralNoteheadLongaBlackVoid="",t.mensuralNoteheadLongaVoid="",t.mensuralNoteheadLongaWhite="",t.mensuralNoteheadMaximaBlack="",t.mensuralNoteheadMaximaBlackVoid="",t.mensuralNoteheadMaximaVoid="",t.mensuralNoteheadMaximaWhite="",t.mensuralNoteheadMinimaWhite="",t.mensuralNoteheadSemibrevisBlack="",t.mensuralNoteheadSemibrevisBlackVoid="",t.mensuralNoteheadSemibrevisBlackVoidTurned="",t.mensuralNoteheadSemibrevisVoid="",t.mensuralNoteheadSemiminimaWhite="",t.mensuralObliqueAsc2ndBlack="",t.mensuralObliqueAsc2ndBlackVoid="",t.mensuralObliqueAsc2ndVoid="",t.mensuralObliqueAsc2ndWhite="",t.mensuralObliqueAsc3rdBlack="",t.mensuralObliqueAsc3rdBlackVoid="",t.mensuralObliqueAsc3rdVoid="",t.mensuralObliqueAsc3rdWhite="",t.mensuralObliqueAsc4thBlack="",t.mensuralObliqueAsc4thBlackVoid="",t.mensuralObliqueAsc4thVoid="",t.mensuralObliqueAsc4thWhite="",t.mensuralObliqueAsc5thBlack="",t.mensuralObliqueAsc5thBlackVoid="",t.mensuralObliqueAsc5thVoid="",t.mensuralObliqueAsc5thWhite="",t.mensuralObliqueDesc2ndBlack="",t.mensuralObliqueDesc2ndBlackVoid="",t.mensuralObliqueDesc2ndVoid="",t.mensuralObliqueDesc2ndWhite="",t.mensuralObliqueDesc3rdBlack="",t.mensuralObliqueDesc3rdBlackVoid="",t.mensuralObliqueDesc3rdVoid="",t.mensuralObliqueDesc3rdWhite="",t.mensuralObliqueDesc4thBlack="",t.mensuralObliqueDesc4thBlackVoid="",t.mensuralObliqueDesc4thVoid="",t.mensuralObliqueDesc4thWhite="",t.mensuralObliqueDesc5thBlack="",t.mensuralObliqueDesc5thBlackVoid="",t.mensuralObliqueDesc5thVoid="",t.mensuralObliqueDesc5thWhite="",t.mensuralProlation1="",t.mensuralProlation10="",t.mensuralProlation11="",t.mensuralProlation2="",t.mensuralProlation3="",t.mensuralProlation4="",t.mensuralProlation5="",t.mensuralProlation6="",t.mensuralProlation7="",t.mensuralProlation8="",t.mensuralProlation9="",t.mensuralProlationCombiningDot="",t.mensuralProlationCombiningDotVoid="",t.mensuralProlationCombiningStroke="",t.mensuralProlationCombiningThreeDots="",t.mensuralProlationCombiningThreeDotsTri="",t.mensuralProlationCombiningTwoDots="",t.mensuralProportion1="",t.mensuralProportion2="",t.mensuralProportion3="",t.mensuralProportion4="",t.mensuralProportion5="",t.mensuralProportion6="",t.mensuralProportion7="",t.mensuralProportion8="",t.mensuralProportion9="",t.mensuralProportionMajor="",t.mensuralProportionMinor="",t.mensuralProportionProportioDupla1="",t.mensuralProportionProportioDupla2="",t.mensuralProportionProportioQuadrupla="",t.mensuralProportionProportioTripla="",t.mensuralProportionTempusPerfectum="",t.mensuralRestBrevis="",t.mensuralRestFusa="",t.mensuralRestLongaImperfecta="",t.mensuralRestLongaPerfecta="",t.mensuralRestMaxima="",t.mensuralRestMinima="",t.mensuralRestSemibrevis="",t.mensuralRestSemifusa="",t.mensuralRestSemiminima="",t.mensuralSignumDown="",t.mensuralSignumUp="",t.mensuralTempusImperfectumHoriz="",t.mensuralTempusPerfectumHoriz="",t.mensuralWhiteBrevis="",t.mensuralWhiteFusa="",t.mensuralWhiteLonga="",t.mensuralWhiteMaxima="",t.mensuralWhiteMinima="",t.mensuralWhiteSemibrevis="",t.mensuralWhiteSemiminima="",t.metAugmentationDot="",t.metNote1024thDown="",t.metNote1024thUp="",t.metNote128thDown="",t.metNote128thUp="",t.metNote16thDown="",t.metNote16thUp="",t.metNote256thDown="",t.metNote256thUp="",t.metNote32ndDown="",t.metNote32ndUp="",t.metNote512thDown="",t.metNote512thUp="",t.metNote64thDown="",t.metNote64thUp="",t.metNote8thDown="",t.metNote8thUp="",t.metNoteDoubleWhole="",t.metNoteDoubleWholeSquare="",t.metNoteHalfDown="",t.metNoteHalfUp="",t.metNoteQuarterDown="",t.metNoteQuarterUp="",t.metNoteWhole="",t.metricModulationArrowLeft="",t.metricModulationArrowRight="",t.miscDoNotCopy="",t.miscDoNotPhotocopy="",t.miscEyeglasses="",t.note1024thDown="",t.note1024thUp="",t.note128thDown="",t.note128thUp="",t.note16thDown="",t.note16thUp="",t.note256thDown="",t.note256thUp="",t.note32ndDown="",t.note32ndUp="",t.note512thDown="",t.note512thUp="",t.note64thDown="",t.note64thUp="",t.note8thDown="",t.note8thUp="",t.noteABlack="",t.noteAFlatBlack="",t.noteAFlatHalf="",t.noteAFlatWhole="",t.noteAHalf="",t.noteASharpBlack="",t.noteASharpHalf="",t.noteASharpWhole="",t.noteAWhole="",t.noteBBlack="",t.noteBFlatBlack="",t.noteBFlatHalf="",t.noteBFlatWhole="",t.noteBHalf="",t.noteBSharpBlack="",t.noteBSharpHalf="",t.noteBSharpWhole="",t.noteBWhole="",t.noteCBlack="",t.noteCFlatBlack="",t.noteCFlatHalf="",t.noteCFlatWhole="",t.noteCHalf="",t.noteCSharpBlack="",t.noteCSharpHalf="",t.noteCSharpWhole="",t.noteCWhole="",t.noteDBlack="",t.noteDFlatBlack="",t.noteDFlatHalf="",t.noteDFlatWhole="",t.noteDHalf="",t.noteDSharpBlack="",t.noteDSharpHalf="",t.noteDSharpWhole="",t.noteDWhole="",t.noteDiBlack="",t.noteDiHalf="",t.noteDiWhole="",t.noteDoBlack="",t.noteDoHalf="",t.noteDoWhole="",t.noteDoubleWhole="",t.noteDoubleWholeSquare="",t.noteEBlack="",t.noteEFlatBlack="",t.noteEFlatHalf="",t.noteEFlatWhole="",t.noteEHalf="",t.noteESharpBlack="",t.noteESharpHalf="",t.noteESharpWhole="",t.noteEWhole="",t.noteEmptyBlack="",t.noteEmptyHalf="",t.noteEmptyWhole="",t.noteFBlack="",t.noteFFlatBlack="",t.noteFFlatHalf="",t.noteFFlatWhole="",t.noteFHalf="",t.noteFSharpBlack="",t.noteFSharpHalf="",t.noteFSharpWhole="",t.noteFWhole="",t.noteFaBlack="",t.noteFaHalf="",t.noteFaWhole="",t.noteFiBlack="",t.noteFiHalf="",t.noteFiWhole="",t.noteGBlack="",t.noteGFlatBlack="",t.noteGFlatHalf="",t.noteGFlatWhole="",t.noteGHalf="",t.noteGSharpBlack="",t.noteGSharpHalf="",t.noteGSharpWhole="",t.noteGWhole="",t.noteHBlack="",t.noteHHalf="",t.noteHSharpBlack="",t.noteHSharpHalf="",t.noteHSharpWhole="",t.noteHWhole="",t.noteHalfDown="",t.noteHalfUp="",t.noteLaBlack="",t.noteLaHalf="",t.noteLaWhole="",t.noteLeBlack="",t.noteLeHalf="",t.noteLeWhole="",t.noteLiBlack="",t.noteLiHalf="",t.noteLiWhole="",t.noteMeBlack="",t.noteMeHalf="",t.noteMeWhole="",t.noteMiBlack="",t.noteMiHalf="",t.noteMiWhole="",t.noteQuarterDown="",t.noteQuarterUp="",t.noteRaBlack="",t.noteRaHalf="",t.noteRaWhole="",t.noteReBlack="",t.noteReHalf="",t.noteReWhole="",t.noteRiBlack="",t.noteRiHalf="",t.noteRiWhole="",t.noteSeBlack="",t.noteSeHalf="",t.noteSeWhole="",t.noteShapeArrowheadLeftBlack="",t.noteShapeArrowheadLeftDoubleWhole="",t.noteShapeArrowheadLeftWhite="",t.noteShapeDiamondBlack="",t.noteShapeDiamondDoubleWhole="",t.noteShapeDiamondWhite="",t.noteShapeIsoscelesTriangleBlack="",t.noteShapeIsoscelesTriangleDoubleWhole="",t.noteShapeIsoscelesTriangleWhite="",t.noteShapeKeystoneBlack="",t.noteShapeKeystoneDoubleWhole="",t.noteShapeKeystoneWhite="",t.noteShapeMoonBlack="",t.noteShapeMoonDoubleWhole="",t.noteShapeMoonLeftBlack="",t.noteShapeMoonLeftDoubleWhole="",t.noteShapeMoonLeftWhite="",t.noteShapeMoonWhite="",t.noteShapeQuarterMoonBlack="",t.noteShapeQuarterMoonDoubleWhole="",t.noteShapeQuarterMoonWhite="",t.noteShapeRoundBlack="",t.noteShapeRoundDoubleWhole="",t.noteShapeRoundWhite="",t.noteShapeSquareBlack="",t.noteShapeSquareDoubleWhole="",t.noteShapeSquareWhite="",t.noteShapeTriangleLeftBlack="",t.noteShapeTriangleLeftDoubleWhole="",t.noteShapeTriangleLeftWhite="",t.noteShapeTriangleRightBlack="",t.noteShapeTriangleRightDoubleWhole="",t.noteShapeTriangleRightWhite="",t.noteShapeTriangleRoundBlack="",t.noteShapeTriangleRoundDoubleWhole="",t.noteShapeTriangleRoundLeftBlack="",t.noteShapeTriangleRoundLeftDoubleWhole="",t.noteShapeTriangleRoundLeftWhite="",t.noteShapeTriangleRoundWhite="",t.noteShapeTriangleUpBlack="",t.noteShapeTriangleUpDoubleWhole="",t.noteShapeTriangleUpWhite="",t.noteSiBlack="",t.noteSiHalf="",t.noteSiWhole="",t.noteSoBlack="",t.noteSoHalf="",t.noteSoWhole="",t.noteTeBlack="",t.noteTeHalf="",t.noteTeWhole="",t.noteTiBlack="",t.noteTiHalf="",t.noteTiWhole="",t.noteWhole="",t.noteheadBlack="",t.noteheadCircleSlash="",t.noteheadCircleX="",t.noteheadCircleXDoubleWhole="",t.noteheadCircleXHalf="",t.noteheadCircleXWhole="",t.noteheadCircledBlack="",t.noteheadCircledBlackLarge="",t.noteheadCircledDoubleWhole="",t.noteheadCircledDoubleWholeLarge="",t.noteheadCircledHalf="",t.noteheadCircledHalfLarge="",t.noteheadCircledWhole="",t.noteheadCircledWholeLarge="",t.noteheadCircledXLarge="",t.noteheadClusterDoubleWhole2nd="",t.noteheadClusterDoubleWhole3rd="",t.noteheadClusterDoubleWholeBottom="",t.noteheadClusterDoubleWholeMiddle="",t.noteheadClusterDoubleWholeTop="",t.noteheadClusterHalf2nd="",t.noteheadClusterHalf3rd="",t.noteheadClusterHalfBottom="",t.noteheadClusterHalfMiddle="",t.noteheadClusterHalfTop="",t.noteheadClusterQuarter2nd="",t.noteheadClusterQuarter3rd="",t.noteheadClusterQuarterBottom="",t.noteheadClusterQuarterMiddle="",t.noteheadClusterQuarterTop="",t.noteheadClusterRoundBlack="",t.noteheadClusterRoundWhite="",t.noteheadClusterSquareBlack="",t.noteheadClusterSquareWhite="",t.noteheadClusterWhole2nd="",t.noteheadClusterWhole3rd="",t.noteheadClusterWholeBottom="",t.noteheadClusterWholeMiddle="",t.noteheadClusterWholeTop="",t.noteheadCowellEleventhNoteSeriesHalf="",t.noteheadCowellEleventhNoteSeriesWhole="",t.noteheadCowellEleventhSeriesBlack="",t.noteheadCowellFifteenthNoteSeriesBlack="",t.noteheadCowellFifteenthNoteSeriesHalf="",t.noteheadCowellFifteenthNoteSeriesWhole="",t.noteheadCowellFifthNoteSeriesBlack="",t.noteheadCowellFifthNoteSeriesHalf="",t.noteheadCowellFifthNoteSeriesWhole="",t.noteheadCowellNinthNoteSeriesBlack="",t.noteheadCowellNinthNoteSeriesHalf="",t.noteheadCowellNinthNoteSeriesWhole="",t.noteheadCowellSeventhNoteSeriesBlack="",t.noteheadCowellSeventhNoteSeriesHalf="",t.noteheadCowellSeventhNoteSeriesWhole="",t.noteheadCowellThirdNoteSeriesBlack="",t.noteheadCowellThirdNoteSeriesHalf="",t.noteheadCowellThirdNoteSeriesWhole="",t.noteheadCowellThirteenthNoteSeriesBlack="",t.noteheadCowellThirteenthNoteSeriesHalf="",t.noteheadCowellThirteenthNoteSeriesWhole="",t.noteheadDiamondBlack="",t.noteheadDiamondBlackOld="",t.noteheadDiamondBlackWide="",t.noteheadDiamondClusterBlack2nd="",t.noteheadDiamondClusterBlack3rd="",t.noteheadDiamondClusterBlackBottom="",t.noteheadDiamondClusterBlackMiddle="",t.noteheadDiamondClusterBlackTop="",t.noteheadDiamondClusterWhite2nd="",t.noteheadDiamondClusterWhite3rd="",t.noteheadDiamondClusterWhiteBottom="",t.noteheadDiamondClusterWhiteMiddle="",t.noteheadDiamondClusterWhiteTop="",t.noteheadDiamondDoubleWhole="",t.noteheadDiamondDoubleWholeOld="",t.noteheadDiamondHalf="",t.noteheadDiamondHalfFilled="",t.noteheadDiamondHalfOld="",t.noteheadDiamondHalfWide="",t.noteheadDiamondOpen="",t.noteheadDiamondWhite="",t.noteheadDiamondWhiteWide="",t.noteheadDiamondWhole="",t.noteheadDiamondWholeOld="",t.noteheadDoubleWhole="",t.noteheadDoubleWholeSquare="",t.noteheadDoubleWholeWithX="",t.noteheadHalf="",t.noteheadHalfFilled="",t.noteheadHalfWithX="",t.noteheadHeavyX="",t.noteheadHeavyXHat="",t.noteheadLargeArrowDownBlack="",t.noteheadLargeArrowDownDoubleWhole="",t.noteheadLargeArrowDownHalf="",t.noteheadLargeArrowDownWhole="",t.noteheadLargeArrowUpBlack="",t.noteheadLargeArrowUpDoubleWhole="",t.noteheadLargeArrowUpHalf="",t.noteheadLargeArrowUpWhole="",t.noteheadMoonBlack="",t.noteheadMoonWhite="",t.noteheadNancarrowSine="",t.noteheadNull="",t.noteheadParenthesis="",t.noteheadParenthesisLeft="",t.noteheadParenthesisRight="",t.noteheadPlusBlack="",t.noteheadPlusDoubleWhole="",t.noteheadPlusHalf="",t.noteheadPlusWhole="",t.noteheadRectangularClusterBlackBottom="",t.noteheadRectangularClusterBlackMiddle="",t.noteheadRectangularClusterBlackTop="",t.noteheadRectangularClusterWhiteBottom="",t.noteheadRectangularClusterWhiteMiddle="",t.noteheadRectangularClusterWhiteTop="",t.noteheadRoundBlack="",t.noteheadRoundBlackDoubleSlashed="",t.noteheadRoundBlackLarge="",t.noteheadRoundBlackSlashed="",t.noteheadRoundBlackSlashedLarge="",t.noteheadRoundWhite="",t.noteheadRoundWhiteDoubleSlashed="",t.noteheadRoundWhiteLarge="",t.noteheadRoundWhiteSlashed="",t.noteheadRoundWhiteSlashedLarge="",t.noteheadRoundWhiteWithDot="",t.noteheadRoundWhiteWithDotLarge="",t.noteheadSlashDiamondWhite="",t.noteheadSlashHorizontalEnds="",t.noteheadSlashHorizontalEndsMuted="",t.noteheadSlashVerticalEnds="",t.noteheadSlashVerticalEndsMuted="",t.noteheadSlashVerticalEndsSmall="",t.noteheadSlashWhiteDoubleWhole="",t.noteheadSlashWhiteHalf="",t.noteheadSlashWhiteMuted="",t.noteheadSlashWhiteWhole="",t.noteheadSlashX="",t.noteheadSlashedBlack1="",t.noteheadSlashedBlack2="",t.noteheadSlashedDoubleWhole1="",t.noteheadSlashedDoubleWhole2="",t.noteheadSlashedHalf1="",t.noteheadSlashedHalf2="",t.noteheadSlashedWhole1="",t.noteheadSlashedWhole2="",t.noteheadSquareBlack="",t.noteheadSquareBlackLarge="",t.noteheadSquareBlackWhite="",t.noteheadSquareWhite="",t.noteheadTriangleDownBlack="",t.noteheadTriangleDownDoubleWhole="",t.noteheadTriangleDownHalf="",t.noteheadTriangleDownWhite="",t.noteheadTriangleDownWhole="",t.noteheadTriangleLeftBlack="",t.noteheadTriangleLeftWhite="",t.noteheadTriangleRightBlack="",t.noteheadTriangleRightWhite="",t.noteheadTriangleRoundDownBlack="",t.noteheadTriangleRoundDownWhite="",t.noteheadTriangleUpBlack="",t.noteheadTriangleUpDoubleWhole="",t.noteheadTriangleUpHalf="",t.noteheadTriangleUpRightBlack="",t.noteheadTriangleUpRightWhite="",t.noteheadTriangleUpWhite="",t.noteheadTriangleUpWhole="",t.noteheadVoidWithX="",t.noteheadWhole="",t.noteheadWholeFilled="",t.noteheadWholeWithX="",t.noteheadXBlack="",t.noteheadXDoubleWhole="",t.noteheadXHalf="",t.noteheadXOrnate="",t.noteheadXOrnateEllipse="",t.noteheadXWhole="",t.octaveBaselineA="",t.octaveBaselineB="",t.octaveBaselineM="",t.octaveBaselineV="",t.octaveBassa="",t.octaveLoco="",t.octaveParensLeft="",t.octaveParensRight="",t.octaveSuperscriptA="",t.octaveSuperscriptB="",t.octaveSuperscriptM="",t.octaveSuperscriptV="",t.oneHandedRollStevens="",t.organGerman2Fusae="",t.organGerman2Minimae="",t.organGerman2OctaveUp="",t.organGerman2Semifusae="",t.organGerman2Semiminimae="",t.organGerman3Fusae="",t.organGerman3Minimae="",t.organGerman3Semifusae="",t.organGerman3Semiminimae="",t.organGerman4Fusae="",t.organGerman4Minimae="",t.organGerman4Semifusae="",t.organGerman4Semiminimae="",t.organGerman5Fusae="",t.organGerman5Minimae="",t.organGerman5Semifusae="",t.organGerman5Semiminimae="",t.organGerman6Fusae="",t.organGerman6Minimae="",t.organGerman6Semifusae="",t.organGerman6Semiminimae="",t.organGermanALower="",t.organGermanAUpper="",t.organGermanAugmentationDot="",t.organGermanBLower="",t.organGermanBUpper="",t.organGermanBuxheimerBrevis2="",t.organGermanBuxheimerBrevis3="",t.organGermanBuxheimerMinimaRest="",t.organGermanBuxheimerSemibrevis="",t.organGermanBuxheimerSemibrevisRest="",t.organGermanCLower="",t.organGermanCUpper="",t.organGermanCisLower="",t.organGermanCisUpper="",t.organGermanDLower="",t.organGermanDUpper="",t.organGermanDisLower="",t.organGermanDisUpper="",t.organGermanELower="",t.organGermanEUpper="",t.organGermanFLower="",t.organGermanFUpper="",t.organGermanFisLower="",t.organGermanFisUpper="",t.organGermanFusa="",t.organGermanFusaRest="",t.organGermanGLower="",t.organGermanGUpper="",t.organGermanGisLower="",t.organGermanGisUpper="",t.organGermanHLower="",t.organGermanHUpper="",t.organGermanMinima="",t.organGermanMinimaRest="",t.organGermanOctaveDown="",t.organGermanOctaveUp="",t.organGermanSemibrevis="",t.organGermanSemibrevisRest="",t.organGermanSemifusa="",t.organGermanSemifusaRest="",t.organGermanSemiminima="",t.organGermanSemiminimaRest="",t.organGermanTie="",t.ornamentBottomLeftConcaveStroke="",t.ornamentBottomLeftConcaveStrokeLarge="",t.ornamentBottomLeftConvexStroke="",t.ornamentBottomRightConcaveStroke="",t.ornamentBottomRightConvexStroke="",t.ornamentComma="",t.ornamentDoubleObliqueLinesAfterNote="",t.ornamentDoubleObliqueLinesBeforeNote="",t.ornamentDownCurve="",t.ornamentHaydn="",t.ornamentHighLeftConcaveStroke="",t.ornamentHighLeftConvexStroke="",t.ornamentHighRightConcaveStroke="",t.ornamentHighRightConvexStroke="",t.ornamentHookAfterNote="",t.ornamentHookBeforeNote="",t.ornamentLeftFacingHalfCircle="",t.ornamentLeftFacingHook="",t.ornamentLeftPlus="",t.ornamentLeftShakeT="",t.ornamentLeftVerticalStroke="",t.ornamentLeftVerticalStrokeWithCross="",t.ornamentLowLeftConcaveStroke="",t.ornamentLowLeftConvexStroke="",t.ornamentLowRightConcaveStroke="",t.ornamentLowRightConvexStroke="",t.ornamentMiddleVerticalStroke="",t.ornamentMordent="",t.ornamentObliqueLineAfterNote="",t.ornamentObliqueLineBeforeNote="",t.ornamentObliqueLineHorizAfterNote="",t.ornamentObliqueLineHorizBeforeNote="",t.ornamentOriscus="",t.ornamentPinceCouperin="",t.ornamentPortDeVoixV="",t.ornamentPrecompAppoggTrill="",t.ornamentPrecompAppoggTrillSuffix="",t.ornamentPrecompCadence="",t.ornamentPrecompCadenceUpperPrefix="",t.ornamentPrecompCadenceUpperPrefixTurn="",t.ornamentPrecompCadenceWithTurn="",t.ornamentPrecompDescendingSlide="",t.ornamentPrecompDoubleCadenceLowerPrefix="",t.ornamentPrecompDoubleCadenceUpperPrefix="",t.ornamentPrecompDoubleCadenceUpperPrefixTurn="",t.ornamentPrecompInvertedMordentUpperPrefix="",t.ornamentPrecompMordentRelease="",t.ornamentPrecompMordentUpperPrefix="",t.ornamentPrecompPortDeVoixMordent="",t.ornamentPrecompSlide="",t.ornamentPrecompSlideTrillBach="",t.ornamentPrecompSlideTrillDAnglebert="",t.ornamentPrecompSlideTrillMarpurg="",t.ornamentPrecompSlideTrillMuffat="",t.ornamentPrecompSlideTrillSuffixMuffat="",t.ornamentPrecompTrillLowerSuffix="",t.ornamentPrecompTrillSuffixDandrieu="",t.ornamentPrecompTrillWithMordent="",t.ornamentPrecompTurnTrillBach="",t.ornamentPrecompTurnTrillDAnglebert="",t.ornamentQuilisma="",t.ornamentRightFacingHalfCircle="",t.ornamentRightFacingHook="",t.ornamentRightVerticalStroke="",t.ornamentSchleifer="",t.ornamentShake3="",t.ornamentShakeMuffat1="",t.ornamentShortObliqueLineAfterNote="",t.ornamentShortObliqueLineBeforeNote="",t.ornamentShortTrill="",t.ornamentTopLeftConcaveStroke="",t.ornamentTopLeftConvexStroke="",t.ornamentTopRightConcaveStroke="",t.ornamentTopRightConvexStroke="",t.ornamentTremblement="",t.ornamentTremblementCouperin="",t.ornamentTrill="",t.ornamentTurn="",t.ornamentTurnInverted="",t.ornamentTurnSlash="",t.ornamentTurnUp="",t.ornamentTurnUpS="",t.ornamentUpCurve="",t.ornamentVerticalLine="",t.ornamentZigZagLineNoRightEnd="",t.ornamentZigZagLineWithRightEnd="",t.ottava="",t.ottavaAlta="",t.ottavaBassa="",t.ottavaBassaBa="",t.ottavaBassaVb="",t.pendereckiTremolo="",t.pictAgogo="",t.pictAlmglocken="",t.pictAnvil="",t.pictBambooChimes="",t.pictBambooScraper="",t.pictBassDrum="",t.pictBassDrumOnSide="",t.pictBeaterBow="",t.pictBeaterBox="",t.pictBeaterBrassMalletsDown="",t.pictBeaterBrassMalletsLeft="",t.pictBeaterBrassMalletsRight="",t.pictBeaterBrassMalletsUp="",t.pictBeaterCombiningDashedCircle="",t.pictBeaterCombiningParentheses="",t.pictBeaterDoubleBassDrumDown="",t.pictBeaterDoubleBassDrumUp="",t.pictBeaterFinger="",t.pictBeaterFingernails="",t.pictBeaterFist="",t.pictBeaterGuiroScraper="",t.pictBeaterHammer="",t.pictBeaterHammerMetalDown="",t.pictBeaterHammerMetalUp="",t.pictBeaterHammerPlasticDown="",t.pictBeaterHammerPlasticUp="",t.pictBeaterHammerWoodDown="",t.pictBeaterHammerWoodUp="",t.pictBeaterHand="",t.pictBeaterHardBassDrumDown="",t.pictBeaterHardBassDrumUp="",t.pictBeaterHardGlockenspielDown="",t.pictBeaterHardGlockenspielLeft="",t.pictBeaterHardGlockenspielRight="",t.pictBeaterHardGlockenspielUp="",t.pictBeaterHardTimpaniDown="",t.pictBeaterHardTimpaniLeft="",t.pictBeaterHardTimpaniRight="",t.pictBeaterHardTimpaniUp="",t.pictBeaterHardXylophoneDown="",t.pictBeaterHardXylophoneLeft="",t.pictBeaterHardXylophoneRight="",t.pictBeaterHardXylophoneUp="",t.pictBeaterHardYarnDown="",t.pictBeaterHardYarnLeft="",t.pictBeaterHardYarnRight="",t.pictBeaterHardYarnUp="",t.pictBeaterJazzSticksDown="",t.pictBeaterJazzSticksUp="",t.pictBeaterKnittingNeedle="",t.pictBeaterMallet="",t.pictBeaterMalletDown="",t.pictBeaterMediumBassDrumDown="",t.pictBeaterMediumBassDrumUp="",t.pictBeaterMediumTimpaniDown="",t.pictBeaterMediumTimpaniLeft="",t.pictBeaterMediumTimpaniRight="",t.pictBeaterMediumTimpaniUp="",t.pictBeaterMediumXylophoneDown="",t.pictBeaterMediumXylophoneLeft="",t.pictBeaterMediumXylophoneRight="",t.pictBeaterMediumXylophoneUp="",t.pictBeaterMediumYarnDown="",t.pictBeaterMediumYarnLeft="",t.pictBeaterMediumYarnRight="",t.pictBeaterMediumYarnUp="",t.pictBeaterMetalBassDrumDown="",t.pictBeaterMetalBassDrumUp="",t.pictBeaterMetalDown="",t.pictBeaterMetalHammer="",t.pictBeaterMetalLeft="",t.pictBeaterMetalRight="",t.pictBeaterMetalUp="",t.pictBeaterSnareSticksDown="",t.pictBeaterSnareSticksUp="",t.pictBeaterSoftBassDrumDown="",t.pictBeaterSoftBassDrumUp="",t.pictBeaterSoftGlockenspielDown="",t.pictBeaterSoftGlockenspielLeft="",t.pictBeaterSoftGlockenspielRight="",t.pictBeaterSoftGlockenspielUp="",t.pictBeaterSoftTimpaniDown="",t.pictBeaterSoftTimpaniLeft="",t.pictBeaterSoftTimpaniRight="",t.pictBeaterSoftTimpaniUp="",t.pictBeaterSoftXylophone="",t.pictBeaterSoftXylophoneDown="",t.pictBeaterSoftXylophoneLeft="",t.pictBeaterSoftXylophoneRight="",t.pictBeaterSoftXylophoneUp="",t.pictBeaterSoftYarnDown="",t.pictBeaterSoftYarnLeft="",t.pictBeaterSoftYarnRight="",t.pictBeaterSoftYarnUp="",t.pictBeaterSpoonWoodenMallet="",t.pictBeaterSuperballDown="",t.pictBeaterSuperballLeft="",t.pictBeaterSuperballRight="",t.pictBeaterSuperballUp="",t.pictBeaterTriangleDown="",t.pictBeaterTrianglePlain="",t.pictBeaterTriangleUp="",t.pictBeaterWireBrushesDown="",t.pictBeaterWireBrushesUp="",t.pictBeaterWoodTimpaniDown="",t.pictBeaterWoodTimpaniLeft="",t.pictBeaterWoodTimpaniRight="",t.pictBeaterWoodTimpaniUp="",t.pictBeaterWoodXylophoneDown="",t.pictBeaterWoodXylophoneLeft="",t.pictBeaterWoodXylophoneRight="",t.pictBeaterWoodXylophoneUp="",t.pictBell="",t.pictBellOfCymbal="",t.pictBellPlate="",t.pictBellTree="",t.pictBirdWhistle="",t.pictBoardClapper="",t.pictBongos="",t.pictBrakeDrum="",t.pictCabasa="",t.pictCannon="",t.pictCarHorn="",t.pictCastanets="",t.pictCastanetsWithHandle="",t.pictCelesta="",t.pictCencerro="",t.pictCenter1="",t.pictCenter2="",t.pictCenter3="",t.pictChainRattle="",t.pictChimes="",t.pictChineseCymbal="",t.pictChokeCymbal="",t.pictClaves="",t.pictCoins="",t.pictConga="",t.pictCowBell="",t.pictCrashCymbals="",t.pictCrotales="",t.pictCrushStem="",t.pictCuica="",t.pictCymbalTongs="",t.pictDamp1="",t.pictDamp2="",t.pictDamp3="",t.pictDamp4="",t.pictDeadNoteStem="",t.pictDrumStick="",t.pictDuckCall="",t.pictEdgeOfCymbal="",t.pictEmptyTrap="",t.pictFingerCymbals="",t.pictFlexatone="",t.pictFootballRatchet="",t.pictGlassHarmonica="",t.pictGlassHarp="",t.pictGlassPlateChimes="",t.pictGlassTubeChimes="",t.pictGlsp="",t.pictGlspSmithBrindle="",t.pictGobletDrum="",t.pictGong="",t.pictGongWithButton="",t.pictGuiro="",t.pictGumHardDown="",t.pictGumHardLeft="",t.pictGumHardRight="",t.pictGumHardUp="",t.pictGumMediumDown="",t.pictGumMediumLeft="",t.pictGumMediumRight="",t.pictGumMediumUp="",t.pictGumSoftDown="",t.pictGumSoftLeft="",t.pictGumSoftRight="",t.pictGumSoftUp="",t.pictHalfOpen1="",t.pictHalfOpen2="",t.pictHandbell="",t.pictHiHat="",t.pictHiHatOnStand="",t.pictJawHarp="",t.pictJingleBells="",t.pictKlaxonHorn="",t.pictLeftHandCircle="",t.pictLionsRoar="",t.pictLithophone="",t.pictLogDrum="",t.pictLotusFlute="",t.pictMar="",t.pictMarSmithBrindle="",t.pictMaraca="",t.pictMaracas="",t.pictMegaphone="",t.pictMetalPlateChimes="",t.pictMetalTubeChimes="",t.pictMusicalSaw="",t.pictNormalPosition="",t.pictOnRim="",t.pictOpen="",t.pictOpenRimShot="",t.pictPistolShot="",t.pictPoliceWhistle="",t.pictQuijada="",t.pictRainstick="",t.pictRatchet="",t.pictRecoReco="",t.pictRightHandSquare="",t.pictRim1="",t.pictRim2="",t.pictRim3="",t.pictRimShotOnStem="",t.pictSandpaperBlocks="",t.pictScrapeAroundRim="",t.pictScrapeAroundRimClockwise="",t.pictScrapeCenterToEdge="",t.pictScrapeEdgeToCenter="",t.pictShellBells="",t.pictShellChimes="",t.pictSiren="",t.pictSistrum="",t.pictSizzleCymbal="",t.pictSleighBell="",t.pictSlideBrushOnGong="",t.pictSlideWhistle="",t.pictSlitDrum="",t.pictSnareDrum="",t.pictSnareDrumMilitary="",t.pictSnareDrumSnaresOff="",t.pictSteelDrums="",t.pictStickShot="",t.pictSuperball="",t.pictSuspendedCymbal="",t.pictSwishStem="",t.pictTabla="",t.pictTamTam="",t.pictTamTamWithBeater="",t.pictTambourine="",t.pictTempleBlocks="",t.pictTenorDrum="",t.pictThundersheet="",t.pictTimbales="",t.pictTimpani="",t.pictTomTom="",t.pictTomTomChinese="",t.pictTomTomIndoAmerican="",t.pictTomTomJapanese="",t.pictTriangle="",t.pictTubaphone="",t.pictTubularBells="",t.pictTurnLeftStem="",t.pictTurnRightLeftStem="",t.pictTurnRightStem="",t.pictVib="",t.pictVibMotorOff="",t.pictVibSmithBrindle="",t.pictVibraslap="",t.pictVietnameseHat="",t.pictWhip="",t.pictWindChimesGlass="",t.pictWindMachine="",t.pictWindWhistle="",t.pictWoodBlock="",t.pictWoundHardDown="",t.pictWoundHardLeft="",t.pictWoundHardRight="",t.pictWoundHardUp="",t.pictWoundSoftDown="",t.pictWoundSoftLeft="",t.pictWoundSoftRight="",t.pictWoundSoftUp="",t.pictXyl="",t.pictXylBass="",t.pictXylSmithBrindle="",t.pictXylTenor="",t.pictXylTenorTrough="",t.pictXylTrough="",t.pluckedBuzzPizzicato="",t.pluckedDamp="",t.pluckedDampAll="",t.pluckedDampOnStem="",t.pluckedFingernailFlick="",t.pluckedLeftHandPizzicato="",t.pluckedPlectrum="",t.pluckedSnapPizzicatoAbove="",t.pluckedSnapPizzicatoBelow="",t.pluckedWithFingernails="",t.quindicesima="",t.quindicesimaAlta="",t.quindicesimaBassa="",t.quindicesimaBassaMb="",t.repeat1Bar="",t.repeat2Bars="",t.repeat4Bars="",t.repeatBarLowerDot="",t.repeatBarSlash="",t.repeatBarUpperDot="",t.repeatDot="",t.repeatDots="",t.repeatLeft="",t.repeatRight="",t.repeatRightLeft="",t.rest1024th="",t.rest128th="",t.rest16th="",t.rest256th="",t.rest32nd="",t.rest512th="",t.rest64th="",t.rest8th="",t.restDoubleWhole="",t.restDoubleWholeLegerLine="",t.restHBar="",t.restHBarLeft="",t.restHBarMiddle="",t.restHBarRight="",t.restHalf="",t.restHalfLegerLine="",t.restLonga="",t.restMaxima="",t.restQuarter="",t.restQuarterOld="",t.restQuarterZ="",t.restWhole="",t.restWholeLegerLine="",t.reversedBrace="",t.reversedBracketBottom="",t.reversedBracketTop="",t.rightRepeatSmall="",t.scaleDegree1="",t.scaleDegree2="",t.scaleDegree3="",t.scaleDegree4="",t.scaleDegree5="",t.scaleDegree6="",t.scaleDegree7="",t.scaleDegree8="",t.scaleDegree9="",t.schaefferClef="",t.schaefferFClefToGClef="",t.schaefferGClefToFClef="",t.schaefferPreviousClef="",t.segno="",t.segnoSerpent1="",t.segnoSerpent2="",t.semipitchedPercussionClef1="",t.semipitchedPercussionClef2="",t.smnFlat="",t.smnFlatWhite="",t.smnHistoryDoubleFlat="",t.smnHistoryDoubleSharp="",t.smnHistoryFlat="",t.smnHistorySharp="",t.smnNatural="",t.smnSharp="",t.smnSharpDown="",t.smnSharpWhite="",t.smnSharpWhiteDown="",t.splitBarDivider="",t.staff1Line="",t.staff1LineNarrow="",t.staff1LineWide="",t.staff2Lines="",t.staff2LinesNarrow="",t.staff2LinesWide="",t.staff3Lines="",t.staff3LinesNarrow="",t.staff3LinesWide="",t.staff4Lines="",t.staff4LinesNarrow="",t.staff4LinesWide="",t.staff5Lines="",t.staff5LinesNarrow="",t.staff5LinesWide="",t.staff6Lines="",t.staff6LinesNarrow="",t.staff6LinesWide="",t.staffDivideArrowDown="",t.staffDivideArrowUp="",t.staffDivideArrowUpDown="",t.staffPosLower1="",t.staffPosLower2="",t.staffPosLower3="",t.staffPosLower4="",t.staffPosLower5="",t.staffPosLower6="",t.staffPosLower7="",t.staffPosLower8="",t.staffPosRaise1="",t.staffPosRaise2="",t.staffPosRaise3="",t.staffPosRaise4="",t.staffPosRaise5="",t.staffPosRaise6="",t.staffPosRaise7="",t.staffPosRaise8="",t.stem="",t.stemBowOnBridge="",t.stemBowOnTailpiece="",t.stemBuzzRoll="",t.stemDamp="",t.stemHarpStringNoise="",t.stemMultiphonicsBlack="",t.stemMultiphonicsBlackWhite="",t.stemMultiphonicsWhite="",t.stemPendereckiTremolo="",t.stemRimShot="",t.stemSprechgesang="",t.stemSulPonticello="",t.stemSussurando="",t.stemSwished="",t.stemVibratoPulse="",t.stockhausenTremolo="",t.stringsBowBehindBridge="",t.stringsBowBehindBridgeFourStrings="",t.stringsBowBehindBridgeOneString="",t.stringsBowBehindBridgeThreeStrings="",t.stringsBowBehindBridgeTwoStrings="",t.stringsBowOnBridge="",t.stringsBowOnTailpiece="",t.stringsChangeBowDirection="",t.stringsDownBow="",t.stringsDownBowAwayFromBody="",t.stringsDownBowBeyondBridge="",t.stringsDownBowTowardsBody="",t.stringsDownBowTurned="",t.stringsFouette="",t.stringsHalfHarmonic="",t.stringsHarmonic="",t.stringsJeteAbove="",t.stringsJeteBelow="",t.stringsMuteOff="",t.stringsMuteOn="",t.stringsOverpressureDownBow="",t.stringsOverpressureNoDirection="",t.stringsOverpressurePossibileDownBow="",t.stringsOverpressurePossibileUpBow="",t.stringsOverpressureUpBow="",t.stringsScrapeCircularClockwise="",t.stringsScrapeCircularCounterclockwise="",t.stringsScrapeParallelInward="",t.stringsScrapeParallelOutward="",t.stringsThumbPosition="",t.stringsThumbPositionTurned="",t.stringsTripleChopInward="",t.stringsTripleChopOutward="",t.stringsUpBow="",t.stringsUpBowAwayFromBody="",t.stringsUpBowBeyondBridge="",t.stringsUpBowTowardsBody="",t.stringsUpBowTurned="",t.stringsVibratoPulse="",t.swissRudimentsNoteheadBlackDouble="",t.swissRudimentsNoteheadBlackFlam="",t.swissRudimentsNoteheadHalfDouble="",t.swissRudimentsNoteheadHalfFlam="",t.systemDivider="",t.systemDividerExtraLong="",t.systemDividerLong="",t.textAugmentationDot="",t.textBlackNoteFrac16thLongStem="",t.textBlackNoteFrac16thShortStem="",t.textBlackNoteFrac32ndLongStem="",t.textBlackNoteFrac8thLongStem="",t.textBlackNoteFrac8thShortStem="",t.textBlackNoteLongStem="",t.textBlackNoteShortStem="",t.textCont16thBeamLongStem="",t.textCont16thBeamShortStem="",t.textCont32ndBeamLongStem="",t.textCont8thBeamLongStem="",t.textCont8thBeamShortStem="",t.textHeadlessBlackNoteFrac16thLongStem="",t.textHeadlessBlackNoteFrac16thShortStem="",t.textHeadlessBlackNoteFrac32ndLongStem="",t.textHeadlessBlackNoteFrac8thLongStem="",t.textHeadlessBlackNoteFrac8thShortStem="",t.textHeadlessBlackNoteLongStem="",t.textHeadlessBlackNoteShortStem="",t.textTie="",t.textTuplet3LongStem="",t.textTuplet3ShortStem="",t.textTupletBracketEndLongStem="",t.textTupletBracketEndShortStem="",t.textTupletBracketStartLongStem="",t.textTupletBracketStartShortStem="",t.timeSig0="",t.timeSig0Reversed="",t.timeSig0Turned="",t.timeSig1="",t.timeSig1Reversed="",t.timeSig1Turned="",t.timeSig2="",t.timeSig2Reversed="",t.timeSig2Turned="",t.timeSig3="",t.timeSig3Reversed="",t.timeSig3Turned="",t.timeSig4="",t.timeSig4Reversed="",t.timeSig4Turned="",t.timeSig5="",t.timeSig5Reversed="",t.timeSig5Turned="",t.timeSig6="",t.timeSig6Reversed="",t.timeSig6Turned="",t.timeSig7="",t.timeSig7Reversed="",t.timeSig7Turned="",t.timeSig8="",t.timeSig8Reversed="",t.timeSig8Turned="",t.timeSig9="",t.timeSig9Reversed="",t.timeSig9Turned="",t.timeSigBracketLeft="",t.timeSigBracketLeftSmall="",t.timeSigBracketRight="",t.timeSigBracketRightSmall="",t.timeSigCombDenominator="",t.timeSigCombNumerator="",t.timeSigComma="",t.timeSigCommon="",t.timeSigCommonReversed="",t.timeSigCommonTurned="",t.timeSigCut2="",t.timeSigCut3="",t.timeSigCutCommon="",t.timeSigCutCommonReversed="",t.timeSigCutCommonTurned="",t.timeSigEquals="",t.timeSigFractionHalf="",t.timeSigFractionOneThird="",t.timeSigFractionQuarter="",t.timeSigFractionThreeQuarters="",t.timeSigFractionTwoThirds="",t.timeSigFractionalSlash="",t.timeSigMinus="",t.timeSigMultiply="",t.timeSigOpenPenderecki="",t.timeSigParensLeft="",t.timeSigParensLeftSmall="",t.timeSigParensRight="",t.timeSigParensRightSmall="",t.timeSigPlus="",t.timeSigPlusSmall="",t.timeSigSlash="",t.timeSigX="",t.tremolo1="",t.tremolo2="",t.tremolo3="",t.tremolo4="",t.tremolo5="",t.tremoloDivisiDots2="",t.tremoloDivisiDots3="",t.tremoloDivisiDots4="",t.tremoloDivisiDots6="",t.tremoloFingered1="",t.tremoloFingered2="",t.tremoloFingered3="",t.tremoloFingered4="",t.tremoloFingered5="",t.tripleTongueAbove="",t.tripleTongueBelow="",t.tuplet0="",t.tuplet1="",t.tuplet2="",t.tuplet3="",t.tuplet4="",t.tuplet5="",t.tuplet6="",t.tuplet7="",t.tuplet8="",t.tuplet9="",t.tupletColon="",t.unmeasuredTremolo="",t.unmeasuredTremoloSimple="",t.unpitchedPercussionClef1="",t.unpitchedPercussionClef2="",t.ventiduesima="",t.ventiduesimaAlta="",t.ventiduesimaBassa="",t.ventiduesimaBassaMb="",t.vocalFingerClickStockhausen="",t.vocalHalbGesungen="",t.vocalMouthClosed="",t.vocalMouthOpen="",t.vocalMouthPursed="",t.vocalMouthSlightlyOpen="",t.vocalMouthWideOpen="",t.vocalNasalVoice="",t.vocalSprechgesang="",t.vocalTongueClickStockhausen="",t.vocalTongueFingerClickStockhausen="",t.vocalsSussurando="",t.wiggleArpeggiatoDown="",t.wiggleArpeggiatoDownArrow="",t.wiggleArpeggiatoDownSwash="",t.wiggleArpeggiatoUp="",t.wiggleArpeggiatoUpArrow="",t.wiggleArpeggiatoUpSwash="",t.wiggleCircular="",t.wiggleCircularConstant="",t.wiggleCircularConstantFlipped="",t.wiggleCircularConstantFlippedLarge="",t.wiggleCircularConstantLarge="",t.wiggleCircularEnd="",t.wiggleCircularLarge="",t.wiggleCircularLarger="",t.wiggleCircularLargerStill="",t.wiggleCircularLargest="",t.wiggleCircularSmall="",t.wiggleCircularStart="",t.wiggleGlissando="",t.wiggleGlissandoGroup1="",t.wiggleGlissandoGroup2="",t.wiggleGlissandoGroup3="",t.wiggleRandom1="",t.wiggleRandom2="",t.wiggleRandom3="",t.wiggleRandom4="",t.wiggleSawtooth="",t.wiggleSawtoothNarrow="",t.wiggleSawtoothWide="",t.wiggleSquareWave="",t.wiggleSquareWaveNarrow="",t.wiggleSquareWaveWide="",t.wiggleTrill="",t.wiggleTrillFast="",t.wiggleTrillFaster="",t.wiggleTrillFasterStill="",t.wiggleTrillFastest="",t.wiggleTrillSlow="",t.wiggleTrillSlower="",t.wiggleTrillSlowerStill="",t.wiggleTrillSlowest="",t.wiggleVIbratoLargestSlower="",t.wiggleVIbratoMediumSlower="",t.wiggleVibrato="",t.wiggleVibratoLargeFast="",t.wiggleVibratoLargeFaster="",t.wiggleVibratoLargeFasterStill="",t.wiggleVibratoLargeFastest="",t.wiggleVibratoLargeSlow="",t.wiggleVibratoLargeSlower="",t.wiggleVibratoLargeSlowest="",t.wiggleVibratoLargestFast="",t.wiggleVibratoLargestFaster="",t.wiggleVibratoLargestFasterStill="",t.wiggleVibratoLargestFastest="",t.wiggleVibratoLargestSlow="",t.wiggleVibratoLargestSlowest="",t.wiggleVibratoMediumFast="",t.wiggleVibratoMediumFaster="",t.wiggleVibratoMediumFasterStill="",t.wiggleVibratoMediumFastest="",t.wiggleVibratoMediumSlow="",t.wiggleVibratoMediumSlowest="",t.wiggleVibratoSmallFast="",t.wiggleVibratoSmallFaster="",t.wiggleVibratoSmallFasterStill="",t.wiggleVibratoSmallFastest="",t.wiggleVibratoSmallSlow="",t.wiggleVibratoSmallSlower="",t.wiggleVibratoSmallSlowest="",t.wiggleVibratoSmallestFast="",t.wiggleVibratoSmallestFaster="",t.wiggleVibratoSmallestFasterStill="",t.wiggleVibratoSmallestFastest="",t.wiggleVibratoSmallestSlow="",t.wiggleVibratoSmallestSlower="",t.wiggleVibratoSmallestSlowest="",t.wiggleVibratoStart="",t.wiggleVibratoWide="",t.wiggleWavy="",t.wiggleWavyNarrow="",t.wiggleWavyWide="",t.windClosedHole="",t.windFlatEmbouchure="",t.windHalfClosedHole1="",t.windHalfClosedHole2="",t.windHalfClosedHole3="",t.windLessRelaxedEmbouchure="",t.windLessTightEmbouchure="",t.windMouthpiecePop="",t.windMultiphonicsBlackStem="",t.windMultiphonicsBlackWhiteStem="",t.windMultiphonicsWhiteStem="",t.windOpenHole="",t.windReedPositionIn="",t.windReedPositionNormal="",t.windReedPositionOut="",t.windRelaxedEmbouchure="",t.windRimOnly="",t.windSharpEmbouchure="",t.windStrongAirPressure="",t.windThreeQuartersClosedHole="",t.windTightEmbouchure="",t.windTrillKey="",t.windVeryTightEmbouchure="",t.windWeakAirPressure=""}(eO||(eO={}));let C={"1/2":32768,1:16384,2:8192,4:4096,8:2048,16:1024,32:512,64:256,128:128,256:64},k={w:"1",h:"2",q:"4",b:"256"},A={C:{num:0},Am:{num:0},F:{accidental:"b",num:1},Dm:{accidental:"b",num:1},Bb:{accidental:"b",num:2},Gm:{accidental:"b",num:2},Eb:{accidental:"b",num:3},Cm:{accidental:"b",num:3},Ab:{accidental:"b",num:4},Fm:{accidental:"b",num:4},Db:{accidental:"b",num:5},Bbm:{accidental:"b",num:5},Gb:{accidental:"b",num:6},Ebm:{accidental:"b",num:6},Cb:{accidental:"b",num:7},Abm:{accidental:"b",num:7},G:{accidental:"#",num:1},Em:{accidental:"#",num:1},D:{accidental:"#",num:2},Bm:{accidental:"#",num:2},A:{accidental:"#",num:3},"F#m":{accidental:"#",num:3},E:{accidental:"#",num:4},"C#m":{accidental:"#",num:4},B:{accidental:"#",num:5},"G#m":{accidental:"#",num:5},"F#":{accidental:"#",num:6},"D#m":{accidental:"#",num:6},"C#":{accidental:"#",num:7},"A#m":{accidental:"#",num:7}},B={treble:{lineShift:0},bass:{lineShift:6},tenor:{lineShift:4},alto:{lineShift:3},soprano:{lineShift:1},percussion:{lineShift:0},"mezzo-soprano":{lineShift:2},"baritone-c":{lineShift:5},"baritone-f":{lineShift:5},subbass:{lineShift:7},french:{lineShift:-1}},E={C:{index:0,intVal:0},CN:{index:0,intVal:0},"C#":{index:0,intVal:1},"C##":{index:0,intVal:2},CB:{index:0,intVal:11},CBB:{index:0,intVal:10},D:{index:1,intVal:2},DN:{index:1,intVal:2},"D#":{index:1,intVal:3},"D##":{index:1,intVal:4},DB:{index:1,intVal:1},DBB:{index:1,intVal:0},E:{index:2,intVal:4},EN:{index:2,intVal:4},"E#":{index:2,intVal:5},"E##":{index:2,intVal:6},EB:{index:2,intVal:3},EBB:{index:2,intVal:2},F:{index:3,intVal:5},FN:{index:3,intVal:5},"F#":{index:3,intVal:6},"F##":{index:3,intVal:7},FB:{index:3,intVal:4},FBB:{index:3,intVal:3},G:{index:4,intVal:7},GN:{index:4,intVal:7},"G#":{index:4,intVal:8},"G##":{index:4,intVal:9},GB:{index:4,intVal:6},GBB:{index:4,intVal:5},A:{index:5,intVal:9},AN:{index:5,intVal:9},"A#":{index:5,intVal:10},"A##":{index:5,intVal:11},AB:{index:5,intVal:8},ABB:{index:5,intVal:7},B:{index:6,intVal:11},BN:{index:6,intVal:11},"B#":{index:6,intVal:12},"B##":{index:6,intVal:13},BB:{index:6,intVal:10},BBB:{index:6,intVal:9},R:{index:6},X:{index:6}},D={"#":eO.accidentalSharp,"##":eO.accidentalDoubleSharp,b:eO.accidentalFlat,bb:eO.accidentalDoubleFlat,n:eO.accidentalNatural,"{":eO.accidentalParensLeft,"}":eO.accidentalParensRight,db:eO.accidentalThreeQuarterTonesFlatZimmermann,d:eO.accidentalQuarterToneFlatStein,"++":eO.accidentalThreeQuarterTonesSharpStein,"+":eO.accidentalQuarterToneSharpStein,"+-":eO.accidentalKucukMucennebSharp,bs:eO.accidentalBakiyeFlat,bss:eO.accidentalBuyukMucennebFlat,o:eO.accidentalSori,k:eO.accidentalKoron,bbs:eO.accidentalBuyukMucennebSharp,"++-":eO.accidentalBuyukMucennebSharp,ashs:eO.accidentalBuyukMucennebSharp,afhf:eO.accidentalBuyukMucennebSharp},v={"a.":{code:eO.augmentationDot,betweenLines:!0},av:{aboveCode:eO.articStaccatissimoAbove,belowCode:eO.articStaccatissimoBelow,betweenLines:!0},"a>":{aboveCode:eO.articAccentAbove,belowCode:eO.articAccentBelow,betweenLines:!0},"a-":{aboveCode:eO.articTenutoAbove,belowCode:eO.articTenutoBelow,betweenLines:!0},"a^":{aboveCode:eO.articMarcatoAbove,belowCode:eO.articMarcatoBelow,betweenLines:!1},"a+":{code:eO.pluckedLeftHandPizzicato,betweenLines:!1},ao:{aboveCode:eO.pluckedSnapPizzicatoAbove,belowCode:eO.pluckedSnapPizzicatoBelow,betweenLines:!1},ah:{code:eO.stringsHarmonic,betweenLines:!1},"a@":{aboveCode:eO.fermataAbove,belowCode:eO.fermataBelow,betweenLines:!1},"a@a":{code:eO.fermataAbove,betweenLines:!1},"a@u":{code:eO.fermataBelow,betweenLines:!1},"a@s":{aboveCode:eO.fermataShortAbove,belowCode:eO.fermataShortBelow,betweenLines:!1},"a@as":{code:eO.fermataShortAbove,betweenLines:!1},"a@us":{code:eO.fermataShortBelow,betweenLines:!1},"a@l":{aboveCode:eO.fermataLongAbove,belowCode:eO.fermataLongBelow,betweenLines:!1},"a@al":{code:eO.fermataLongAbove,betweenLines:!1},"a@ul":{code:eO.fermataLongBelow,betweenLines:!1},"a@vl":{aboveCode:eO.fermataVeryLongAbove,belowCode:eO.fermataVeryLongBelow,betweenLines:!1},"a@avl":{code:eO.fermataVeryLongAbove,betweenLines:!1},"a@uvl":{code:eO.fermataVeryLongBelow,betweenLines:!1},"a|":{code:eO.stringsUpBow,betweenLines:!1},am:{code:eO.stringsDownBow,betweenLines:!1},"a,":{code:eO.pictChokeCymbal,betweenLines:!1}},L={mordent:eO.ornamentShortTrill,mordentInverted:eO.ornamentMordent,turn:eO.ornamentTurn,turnInverted:eO.ornamentTurnSlash,tr:eO.ornamentTrill,upprall:eO.ornamentPrecompSlideTrillDAnglebert,downprall:eO.ornamentPrecompDoubleCadenceUpperPrefix,prallup:eO.ornamentPrecompTrillSuffixDandrieu,pralldown:eO.ornamentPrecompTrillLowerSuffix,upmordent:eO.ornamentPrecompSlideTrillBach,downmordent:eO.ornamentPrecompDoubleCadenceUpperPrefixTurn,lineprall:eO.ornamentPrecompAppoggTrill,prallprall:eO.ornamentTremblement,scoop:eO.brassScoop,doit:eO.brassDoitMedium,fall:eO.brassFallLipShort,doitLong:eO.brassLiftMedium,fallLong:eO.brassFallRoughMedium,bend:eO.brassBend,plungerClosed:eO.brassMuteClosed,plungerOpen:eO.brassMuteOpen,flip:eO.brassFlip,jazzTurn:eO.brassJazzTurn,smear:eO.brassSmear};class N{static clefProperties(t){if(!t||!(t in B))throw new n("BadArgument","Invalid clef: "+t);return B[t]}static keyProperties(t,e="treble",i="N",s){let a={octaveShift:0,duration:"4"};"object"==typeof s&&(a=Object.assign(Object.assign({},a),s));let r=N.sanitizeDuration(a.duration),o=t.split("/");if(o.length<2)throw new n("BadArguments",`First argument must be note/octave or note/octave/glyph-code: ${t}`);let h=o[0].toUpperCase();i=i.toUpperCase();let l=E[h];if(!l)throw new n("BadArguments","Invalid key name: "+h);let c=parseInt(o[1],10),d=(7*(c-=a.octaveShift)-28+l.index)/2;d+=N.clefProperties(e).lineShift;let u=void 0!==l.intVal?12*c+l.intVal:void 0,g="N";return g=o.length>2&&o[2]?o[2].toUpperCase():"N"!==i?i:h,{key:h,octave:c,line:d,intValue:u,code:this.codeNoteHead(g,r),displaced:!1}}static integerToNote(t){if(void 0===t||t<0||t>11)throw new n("BadArguments",`integerToNote() requires an integer in the range [0, 11]: ${t}`);let e={0:"C",1:"C#",2:"D",3:"D#",4:"E",5:"F",6:"F#",7:"G",8:"G#",9:"A",10:"A#",11:"B"}[t];if(!e)throw new n("BadArguments",`Unknown note value for integer: ${t}`);return e}static textWidth(t){return 7*t.toString().length}static articulationCodes(t){return v[t]}static accidentalCodes(t){var e;return null!=(e=D[t])?e:t}static ornamentCodes(t){var e;return null!=(e=L[t])?e:t}static keySignature(t){let e=A[t];if(!e)throw new n("BadKeySignature",`Bad key signature spec: '${t}'`);if(!e.accidental)return[];let i={b:[2,.5,2.5,1,3,1.5,3.5],"#":[0,1.5,-.5,1,2.5,.5,2]}[e.accidental],s=[];for(let t=0;t<e.num;++t){let n=i[t];s.push({type:e.accidental,line:n})}return s}static getKeySignatures(){return A}static hasKeySignature(t){return t in A}static sanitizeDuration(t){let e=k[t];if(void 0!==e&&(t=e),void 0===C[t])throw new n("BadArguments",`The provided duration is not valid: ${t}`);return t}static durationToFraction(t){return new u().parse(N.sanitizeDuration(t))}static durationToNumber(t){return N.durationToFraction(t).value()}static durationToTicks(t){let e=C[t=N.sanitizeDuration(t)];if(void 0===e)throw new n("InvalidDuration");return e}static codeNoteHead(t,e){switch(t){case"D0":return eO.noteheadDiamondWhole;case"D1":return eO.noteheadDiamondHalf;case"D2":case"D3":case"MI":return eO.noteheadDiamondBlack;case"T0":return eO.noteheadTriangleUpWhole;case"T1":return eO.noteheadTriangleUpHalf;case"T2":case"T3":case"DO":return eO.noteheadTriangleUpBlack;case"X0":return eO.noteheadXWhole;case"X1":return eO.noteheadXHalf;case"X2":return eO.noteheadXBlack;case"X3":return eO.noteheadCircleX;case"S1":case"R1":case"R2":return eO.noteheadSquareWhite;case"S2":case"LA":return eO.noteheadSquareBlack;case"RE":return eO.noteheadMoonBlack;case"FA":return eO.noteheadTriangleLeftBlack;case"FAUP":return eO.noteheadTriangleRightBlack;case"SO":return eO.noteheadBlack;case"TI":return eO.noteheadTriangleRoundDownBlack;case"DI":case"H":switch(e){case"1/2":return eO.noteheadDiamondDoubleWhole;case"1":return eO.noteheadDiamondWhole;case"2":return eO.noteheadDiamondHalf;default:return eO.noteheadDiamondBlack}case"X":case"M":switch(e){case"1/2":return eO.noteheadXDoubleWhole;case"1":return eO.noteheadXWhole;case"2":return eO.noteheadXHalf;default:return eO.noteheadXBlack}case"CX":switch(e){case"1/2":return eO.noteheadCircleXDoubleWhole;case"1":return eO.noteheadCircleXWhole;case"2":return eO.noteheadCircleXHalf;default:return eO.noteheadCircleX}case"CI":switch(e){case"1/2":return eO.noteheadCircledDoubleWhole;case"1":return eO.noteheadCircledWhole;case"2":return eO.noteheadCircledHalf;default:return eO.noteheadCircledBlack}case"SQ":switch(e){case"1/2":return eO.noteheadDoubleWholeSquare;case"1":case"2":return eO.noteheadSquareWhite;default:return eO.noteheadSquareBlack}case"TU":switch(e){case"1/2":return eO.noteheadTriangleUpDoubleWhole;case"1":return eO.noteheadTriangleUpWhole;case"2":return eO.noteheadTriangleUpHalf;default:return eO.noteheadTriangleUpBlack}case"TD":switch(e){case"1/2":return eO.noteheadTriangleDownDoubleWhole;case"1":return eO.noteheadTriangleDownWhole;case"2":return eO.noteheadTriangleDownHalf;default:return eO.noteheadTriangleDownBlack}case"SF":switch(e){case"1/2":return eO.noteheadSlashedDoubleWhole1;case"1":return eO.noteheadSlashedWhole1;case"2":return eO.noteheadSlashedHalf1;default:return eO.noteheadSlashedBlack1}case"SB":switch(e){case"1/2":return eO.noteheadSlashedDoubleWhole2;case"1":return eO.noteheadSlashedWhole2;case"2":return eO.noteheadSlashedHalf2;default:return eO.noteheadSlashedBlack2}case"R":switch(e){case"1/2":return eO.restDoubleWhole;case"1":return eO.restWhole;case"2":return eO.restHalf;case"4":return eO.restQuarter;case"8":return eO.rest8th;case"16":return eO.rest16th;case"32":return eO.rest32nd;case"64":return eO.rest64th;case"128":return eO.rest128th}break;case"S":switch(e){case"1/2":return eO.noteheadSlashWhiteDoubleWhole;case"1":return eO.noteheadSlashWhiteWhole;case"2":return eO.noteheadSlashWhiteHalf;default:return eO.noteheadSlashVerticalEnds}default:switch(e){case"1/2":return eO.noteheadDoubleWhole;case"1":return eO.noteheadWhole;case"2":return eO.noteheadHalf;default:return eO.noteheadBlack}}return eO.null}}function F(t,e,i=!0){if("object"!=typeof t||null===t)return!1;let s=t.constructor;if(!i)return"CATEGORY"in s&&s.CATEGORY===e;for(;null!==t;){if("CATEGORY"in(s=t.constructor)&&s.CATEGORY===e)return!0;t=Object.getPrototypeOf(t)}return!1}N.UNISON=!0,N.SOFTMAX_FACTOR=10,N.STEM_WIDTH=1.5,N.STEM_HEIGHT=35,N.STAVE_LINE_THICKNESS=1,N.RENDER_PRECISION_PLACES=3,N.RESOLUTION=16384,N.durationCodes={"1/2":{stem:!1},1:{stem:!1},2:{stem:!0},4:{stem:!0},8:{stem:!0,beamCount:1,stemBeamExtension:0,codeFlagUp:eO.flag8thUp},16:{beamCount:2,stemBeamExtension:0,stem:!0,codeFlagUp:eO.flag16thUp},32:{beamCount:3,stemBeamExtension:7.5,stem:!0,codeFlagUp:eO.flag32ndUp},64:{beamCount:4,stemBeamExtension:15,stem:!0,codeFlagUp:eO.flag64thUp},128:{beamCount:5,stemBeamExtension:22.5,stem:!0,codeFlagUp:eO.flag128thUp}},N.NOTATION_FONT_SCALE=39,N.TABLATURE_FONT_SCALE=39,N.SLASH_NOTEHEAD_WIDTH=15,N.STAVE_LINE_DISTANCE=10,N.TEXT_HEIGHT_OFFSET_HACK=1,N.accidentalColumnsTable={1:{a:[1],b:[1]},2:{a:[1,2]},3:{a:[1,3,2],b:[1,2,1],secondOnBottom:[1,2,3]},4:{a:[1,3,4,2],b:[1,2,3,1],spacedOutTetrachord:[1,2,1,2]},5:{a:[1,3,5,4,2],b:[1,2,4,3,1],spacedOutPentachord:[1,2,3,2,1],verySpacedOutPentachord:[1,2,1,2,1]},6:{a:[1,3,5,6,4,2],b:[1,2,4,5,3,1],spacedOutHexachord:[1,3,2,1,3,2],verySpacedOutHexachord:[1,2,1,2,1,2]}},N.unicode={sharp:"♯",flat:"♭",natural:"♮",triangle:"△","o-with-slash":"\xf8",degrees:"\xb0",circle:"○"},N.validTypes={n:{name:"note"},r:{name:"rest"},h:{name:"harmonic"},m:{name:"muted"},s:{name:"slash"},g:{name:"ghost"},d:{name:"diamond"},x:{name:"x"},ci:{name:"circled"},cx:{name:"circle x"},sf:{name:"slashed"},sb:{name:"slashed backward"},sq:{name:"square"},tu:{name:"triangle up"},td:{name:"triangle down"}},N.TIME4_4={numBeats:4,beatValue:4,resolution:16384};let R=t=>F(t,"Annotation"),O=t=>F(t,"Barline"),P=t=>F(t,"GraceNote"),M=t=>F(t,"Note"),I=t=>F(t,"StaveNote"),G=t=>F(t,"StemmableNote"),W=t=>F(t,"TabNote");function H(...t){U.DEBUG&&o("VexFlow.Accidental",t)}class U extends b{static get CATEGORY(){return"Accidental"}static format(t,e){let i;if(!t||0===t.length)return;let s=p.get("Accidental.noteheadAccidentalPadding"),n=e.leftShift+s,a=p.get("Accidental.accidentalSpacing"),r=p.get("Accidental.leftPadding"),o=[],h=0;for(let e=0;e<t.length;++e){let s=t[e],n=s.getNote(),a=n.getStave(),r=s.checkIndex(),l=n.getKeyProps()[r];if(n!==i){for(let t=0;t<n.keys.length;++t)h=Math.max(n.getLeftDisplacedHeadPx()-n.getXShift(),h);i=n}if(a){let t=a.getSpacingBetweenLines(),e=a.getYForLine(l.line),i=Math.round(e/t*2)/2;o.push({y:e,line:i,extraXSpaceNeeded:h,accidental:s,spacingBetweenStaveLines:t})}else o.push({line:l.line,extraXSpaceNeeded:h,accidental:s})}o.sort((t,e)=>e.line-t.line);let l=[],c=0;for(let t=0;t<o.length;t++){let e,i=o[t],s=i.accidental.type,n=l[l.length-1];n&&(null==n?void 0:n.line)===i.line?e=n:(e={line:i.line,flatLine:!0,dblSharpLine:!0,numAcc:0,width:0,column:0},l.push(e)),"b"!==s&&"bb"!==s&&(e.flatLine=!1),"##"!==s&&(e.dblSharpLine=!1),e.numAcc++,e.width+=i.accidental.getWidth()+a,c=Math.max(i.extraXSpaceNeeded,c)}let d=0;for(let t=0;t<l.length;t++){let e,i,s=!1,n=t,a=t;for(;a+1<l.length&&!s;)this.checkCollision(l[a],l[a+1])?a++:s=!0;let r=t=>l[n+t],o=t=>t.map(r),h=(t,e)=>{let[i,s]=o([t,e]).map(t=>t.line);return i-s},c=(...t)=>t.map(o).every(([t,e])=>!this.checkCollision(t,e)),u=a-n+1,g=this.checkCollision(l[n],l[a])?"a":"b";switch(u){case 3:"a"===g&&.5===h(1,2)&&.5!==h(0,1)&&(g="secondOnBottom");break;case 4:c([0,2],[1,3])&&(g="spacedOutTetrachord");break;case 5:"b"===g&&c([1,3])&&(g="spacedOutPentachord",c([0,2],[2,4])&&(g="verySpacedOutPentachord"));break;case 6:c([0,3],[1,4],[2,5])&&(g="spacedOutHexachord"),c([0,2],[2,4],[1,3],[3,5])&&(g="verySpacedOutHexachord")}if(u>=7){let s=2,n=!0;for(;!0===n;){n=!1;for(let t=0;t+s<l.length;t++)if(this.checkCollision(l[t],l[t+s])){n=!0,s++;break}}for(e=t;e<=a;e++)i=(e-t)%s+1,l[e].column=i,d=d>i?d:i}else for(e=t;e<=a;e++)i=N.accidentalColumnsTable[u][g][e-t],l[e].column=i,d=d>i?d:i;t=a}let u=[],g=[];for(let t=0;t<=d;t++)u[t]=0,g[t]=0;u[0]=n+c,g[0]=n,l.forEach(t=>{t.width>u[t.column]&&(u[t.column]=t.width)});for(let t=1;t<u.length;t++)g[t]=u[t]+g[t-1];let m=g[g.length-1],f=0;l.forEach(t=>{let e=0,i=f+t.numAcc;for(;f<i;f++){let i=g[t.column-1]+e+c;o[f].accidental.setXShift(i),e+=o[f].accidental.getWidth()+a,H("Line, accCount, shift: ",t.line,f,i)}}),e.leftShift=m+r}static checkCollision(t,e){let i=e.line-t.line,s=3;i>0?(s=e.flatLine||e.dblSharpLine?2.5:3,t.dblSharpLine&&(i-=.5)):(s=t.flatLine||t.dblSharpLine?2.5:3,e.dblSharpLine&&(i-=.5));let n=Math.abs(i)<s;return H("Line1, Line2, Collision: ",t.line,e.line,n),n}static applyAccidentals(t,e){let i=[],s={};t.forEach(t=>{let e=new u(0,1);t.getTickables().forEach(t=>{if(t.shouldIgnoreTicks())return;let n=s[e.value()];n?n.push(t):(i.push(e.value()),s[e.value()]=[t]),e.add(t.getTicks())})});let n=new y;e||(e="C");let a=n.createScaleMap(e),r={};i.forEach(t=>{let e=s[t],i=[],o=t=>{!I(t)||t.isRest()||t.shouldIgnoreTicks()||(t.keys.forEach((e,s)=>{let o=n.getNoteParts(e.split("/")[0]),h=e.split("/")[1],l=o.accidental||"n",c=o.root+l;r[o.root+h]||(r[o.root+h]=a[o.root]);let d=r[o.root+h]===c,u=i.indexOf(e)>-1;if(t.getModifiers().forEach((e,i)=>{F(e,"Accidental")&&e.type==l&&e.getIndex()==s&&t.getModifiers().splice(i,1)}),!d||d&&u){r[o.root+h]=c;let n=new U(l);t.addModifier(n,s),i.push(e)}}),t.getModifiers().forEach(t=>{F(t,"GraceNoteGroup")&&t.getGraceNotes().forEach(o)}))};e.forEach(o)})}constructor(t){super(),H("New accidental: ",t),this.type=t,this.position=b.Position.LEFT,this.cautionary=!1,this.reset()}reset(){this.text="",this.cautionary?(this.text+=N.accidentalCodes("{"),this.text+=N.accidentalCodes(this.type),this.text+=N.accidentalCodes("}"),this.fontInfo.size=p.get("Accidental.cautionary.fontSize")):(this.text+=N.accidentalCodes(this.type),this.fontInfo.size=p.get("Accidental.fontSize")),P(this.note)&&(this.fontInfo.size=p.get("Accidental.grace.fontSize"))}setNote(t){return r(t,"ArgumentError",`Bad note value: ${t}`),this.note=t,this.reset(),this}setAsCautionary(){return this.cautionary=!0,this.reset(),this}draw(){let{type:t,position:e,index:i}=this,s=this.checkContext(),n=this.checkAttachedNote();this.setRendered();let a=n.getModifierStartXY(e,i);this.x=a.x-this.width,this.y=a.y,H("Rendering: ",t,a.x,a.y),this.renderText(s,0,0)}}U.DEBUG=!1;class V extends w{static get CATEGORY(){return"Stem"}static get UP(){return 1}static get DOWN(){return -1}static get WIDTH(){return N.STEM_WIDTH}static get HEIGHT(){return N.STEM_HEIGHT}constructor(t){var e,i,s,n,a,r,o;super(),this.stemUpYOffset=0,this.stemDownYOffset=0,this.stemUpYBaseOffset=0,this.stemDownYBaseOffset=0,this.xBegin=null!=(e=null==t?void 0:t.xBegin)?e:0,this.xEnd=null!=(i=null==t?void 0:t.xEnd)?i:0,this.yTop=null!=(s=null==t?void 0:t.yTop)?s:0,this.yBottom=null!=(n=null==t?void 0:t.yBottom)?n:0,this.stemExtension=null!=(a=null==t?void 0:t.stemExtension)?a:0,this.stemDirection=null!=(r=null==t?void 0:t.stemDirection)?r:0,this.hide=(null==t?void 0:t.hide)||!1,this.isStemlet=(null==t?void 0:t.isStemlet)||!1,this.stemletHeight=null!=(o=null==t?void 0:t.stemletHeight)?o:0,this.renderHeightAdjustment=0,this.setOptions(t)}setOptions(t){var e,i,s,n;this.stemUpYOffset=null!=(e=null==t?void 0:t.stemUpYOffset)?e:0,this.stemDownYOffset=null!=(i=null==t?void 0:t.stemDownYOffset)?i:0,this.stemUpYBaseOffset=null!=(s=null==t?void 0:t.stemUpYBaseOffset)?s:0,this.stemDownYBaseOffset=null!=(n=null==t?void 0:t.stemDownYBaseOffset)?n:0}setNoteHeadXBounds(t,e){return this.xBegin=t,this.xEnd=e,this}setDirection(t){this.stemDirection=t}setExtension(t){this.stemExtension=t}getExtension(){return this.stemExtension}setYBounds(t,e){this.yTop=t,this.yBottom=e}getHeight(){let t=this.stemDirection===V.UP?this.stemUpYOffset:this.stemDownYOffset;return(this.yBottom-this.yTop+(V.HEIGHT-t+this.stemExtension))*this.stemDirection}getBoundingBox(){throw new n("NotImplemented","getBoundingBox() not implemented.")}getExtents(){let t=this.stemDirection===V.UP,e=[this.yTop,this.yBottom],i=V.HEIGHT+this.stemExtension,s=(t?Math.min:Math.max)(...e),n=(t?Math.max:Math.min)(...e);return{topY:s+-(i*this.stemDirection),baseY:n}}setVisibility(t){return this.hide=!t,this}setStemlet(t,e){return this.isStemlet=t,this.stemletHeight=e,this}adjustHeightForFlag(){this.renderHeightAdjustment=p.get("Stem.heightAdjustmentForFlag",-3)}adjustHeightForBeam(){this.renderHeightAdjustment=-V.WIDTH/2}draw(){let t,e;if(this.setRendered(),this.hide)return;let i=this.checkContext(),s=this.stemDirection,n=0;s===V.DOWN?(t=this.xBegin,e=this.yTop+this.stemDownYOffset,n=this.stemDownYBaseOffset):(t=this.xEnd,e=this.yBottom-this.stemUpYOffset,n=this.stemUpYBaseOffset);let a=this.getHeight();!function(...t){V.DEBUG&&o("VexFlow.Stem",t)}("Rendering stem - ","Top Y: ",this.yTop,"Bottom Y: ",this.yBottom);let r=this.isStemlet?a-this.stemletHeight*this.stemDirection:0;i.openGroup("stem",this.getAttribute("id")),i.beginPath(),i.setLineWidth(V.WIDTH),i.moveTo(t,e-r+n),i.lineTo(t,e-a-this.renderHeightAdjustment*s),i.stroke(),i.closeGroup()}}V.DEBUG=!1,!function(t){t[t.LEFT=1]="LEFT",t[t.CENTER=2]="CENTER",t[t.RIGHT=3]="RIGHT",t[t.CENTER_STEM=4]="CENTER_STEM"}(eP||(eP={})),function(t){t[t.TOP=1]="TOP",t[t.CENTER=2]="CENTER",t[t.BOTTOM=3]="BOTTOM",t[t.CENTER_STEM=4]="CENTER_STEM"}(eM||(eM={}));class Y extends b{static get CATEGORY(){return"Annotation"}static get minAnnotationPadding(){return p.get("NoteHead.minPadding")}static format(t,e){if(!t||0===t.length)return!1;let i=0,s=0,n=0,a=0;for(let r=0;r<t.length;++r){let o=t[r],h=(2+S.convertSizeToPixelValue(o.fontInfo.size))/N.STAVE_LINE_DISTANCE,l=o.checkAttachedNote(),c=l.getGlyphWidth(),d=o.getWidth();o.horizontalJustification===eP.RIGHT?(n=Math.max(c,n),i=Math.max(i,d)+Y.minAnnotationPadding):o.horizontalJustification===eP.LEFT?(a=Math.max(c,a),s=Math.max(s,d)):(i=Math.max(i,d/2)+Y.minAnnotationPadding,s=Math.max(s,d/2),n=Math.max(c/2,n),a=Math.max(c/2,a));let u=l.getStave(),g=l.hasStem()?l.getStemDirection():V.UP,p=0,m=5;if(W(l))if(l.renderOptions.drawStem){let t=l.getStem();t&&(p=Math.abs(t.getHeight())/N.STAVE_LINE_DISTANCE)}else p=0;else if(G(l)){let t=l.getStem();t&&"n"===l.getNoteType()&&(p=Math.abs(t.getHeight())/N.STAVE_LINE_DISTANCE)}if(u&&(m=u.getNumLines()),o.verticalJustification===this.VerticalJustify.TOP){let t=l.getLineNumber(!0);W(l)&&(t=m-(l.leastString()-.5)),g===V.UP&&(t+=p),t+e.topTextLine+.5<m?(o.setTextLine(m-t),e.topTextLine=h+=m-t):(o.setTextLine(e.topTextLine),e.topTextLine+=h)}else if(o.verticalJustification===this.VerticalJustify.BOTTOM){let t=m-l.getLineNumber();W(l)&&(t=l.greatestString()-1),g===V.DOWN&&(t+=p);let i=t+e.textLine+1;i<m?(o.setTextLine(m-i),e.textLine=h+=m-i):(o.setTextLine(e.textLine),e.textLine+=h)}else o.setTextLine(e.textLine)}let r=Math.min(Math.max(s-a,0),Math.max(s-e.rightShift,0)),o=Math.min(Math.max(i-n,0),Math.max(i-e.leftShift,0));return e.leftShift+=o,e.rightShift+=r,!0}constructor(t){super(),this.text=t,this.horizontalJustification=eP.CENTER,this.verticalJustification=eM.TOP}setVerticalJustification(t){return this.verticalJustification="string"==typeof t?Y.VerticalJustifyString[t]:t,this}getJustification(){return this.horizontalJustification}setJustification(t){return this.horizontalJustification="string"==typeof t?Y.HorizontalJustifyString[t]:t,this}draw(){let t,e,i=this.checkContext(),s=this.checkAttachedNote(),n=s.hasStem()?s.getStemDirection():V.UP,a=s.getModifierStartXY(eR.ABOVE,this.index);this.setRendered(),i.openGroup("annotation",this.getAttribute("id"));let r=this.getWidth(),h=S.convertSizeToPixelValue(this.fontInfo.size);t=this.horizontalJustification===eP.LEFT?a.x:this.horizontalJustification===eP.RIGHT?a.x-r:this.horizontalJustification===eP.CENTER?a.x-r/2:s.getStemX()-r/2;let l={},c=0,d=s.hasStem(),u=s.checkStave();if(d&&(l=s.checkStem().getExtents(),c=u.getSpacingBetweenLines()),this.verticalJustification===eM.BOTTOM)e=s.getYs().reduce((t,e)=>t>e?t:e)+((this.textLine+1)*N.STAVE_LINE_DISTANCE+h),d&&n===V.DOWN&&(e=Math.max(e,l.topY+h+c*this.textLine));else if(this.verticalJustification===eM.CENTER){let t=s.getYForTopText(this.textLine)-1;e=t+(u.getYForBottomText(this.textLine)-t)/2+h/2}else if(this.verticalJustification===eM.TOP)e=Math.min(...s.getYs())-(this.textLine+1)*N.STAVE_LINE_DISTANCE,d&&n===V.UP&&(c=l.topY<u.getTopLineTopY()?N.STAVE_LINE_DISTANCE:c,e=Math.min(e,l.topY-c*(this.textLine+1)));else{let t=s.getStemExtents();e=t.topY+(t.baseY-t.topY)/2+h/2}!function(...t){Y.DEBUG&&o("VexFlow.Annotation",t)}("Rendering annotation: ",this.text,t,e),this.x=t,this.y=e,this.renderText(i,0,0),i.closeGroup()}}Y.DEBUG=!1,Y.HorizontalJustify=eP,Y.HorizontalJustifyString={left:eP.LEFT,right:eP.RIGHT,center:eP.CENTER,centerStem:eP.CENTER_STEM},Y.VerticalJustify=eM,Y.VerticalJustifyString={above:eM.TOP,top:eM.TOP,below:eM.BOTTOM,bottom:eM.BOTTOM,center:eM.CENTER,centerStem:eM.CENTER_STEM};let{ABOVE:X,BELOW:z}=b.Position;function J(t,e){return e===X?t<=5:t>=1}function Q(t,e){return J(t,e)?e===X?Math.ceil:Math.floor:Math.round}let q=t=>I(t)||P(t);function j(t,e){let i=t.getStemDirection(),{topY:s,baseY:a}=t.getStemExtents();if(q(t))if(!t.hasStem())return Math.min(...t.getYs());else if(i===V.UP)return s;else return a;if(W(t))if(!t.hasStem())return t.checkStave().getYForTopText(e);else if(i===V.UP)return s;else return t.checkStave().getYForTopText(e);throw new n("UnknownCategory","Only can get the top and bottom ys of stavenotes and tabnotes")}function K(t,e){let i=t.getStemDirection(),{topY:s,baseY:a}=t.getStemExtents();if(q(t))if(!t.hasStem())return Math.max(...t.getYs());else if(i===V.UP)return a;else return s;if(W(t))if(!t.hasStem())return t.checkStave().getYForBottomText(e);else if(i===V.UP)return t.checkStave().getYForBottomText(e);else return s;throw new n("UnknownCategory","Only can get the top and bottom ys of stavenotes and tabnotes")}function Z(t,e){let i=e===X&&t.getStemDirection()===V.UP||e===z&&t.getStemDirection()===V.DOWN;if(q(t))if(t.hasStem()&&i)return .5;else return 1;return t.hasStem()&&i?1:0}class _ extends b{static get CATEGORY(){return"Articulation"}static format(t,e){if(!t||0===t.length)return!1;let i=0,s=(t,e,i)=>.5*Q(e,i)((t.height/10+.5)/.5);t.forEach(t=>{let n=t.checkAttachedNote();i=Math.max(n.getGlyphWidth(),i);let a=5,r=n.hasStem()?n.getStemDirection():V.UP,o=0;if(G(n)){let t=n.getStem();t&&(o=Math.abs(t.getHeight())/N.STAVE_LINE_DISTANCE)}let h=n.getStave();if(h&&(a=h.getNumLines()),t.getPosition()===X){let i=n.getLineNumber(!0);r===V.UP&&(i+=o);let h=s(t,e.topTextLine,X),l=i+e.topTextLine+.5;!t.articulation.betweenLines&&l<a&&(h+=a-l),t.setTextLine(e.topTextLine),e.topTextLine+=h,t.setOrigin(.5,1)}else if(t.getPosition()===z){let i=Math.max(a-n.getLineNumber(),0);r===V.DOWN&&(i+=o);let h=s(t,e.textLine,z),l=i+e.textLine+.5;!t.articulation.betweenLines&&l<a&&(h+=a-l),t.setTextLine(e.textLine),e.textLine+=h,t.setOrigin(.5,0)}});let n=t.map(t=>t.getWidth()).reduce((t,e)=>Math.max(e,t)),a=Math.min(Math.max(n-i,0),Math.max(n-(e.leftShift+e.rightShift),0));return e.leftShift+=a/2,e.rightShift+=a/2,!0}static easyScoreHook({articulations:t},e,i){if(!t)return;let s={staccato:"a.",tenuto:"a-",accent:"a>"};t.split(",").map(t=>t.trim().split(".")).map(([t,e])=>{let n={type:s[t]};return e&&(n.position=b.PositionString[e]),i.getFactory().Articulation(n)}).map(t=>e.addModifier(t,0))}constructor(t){var e;super(),this.heightShift=0,this.type=t,this.position=X,N.articulationCodes(this.type)||((null!=(e=this.type.codePointAt(0))?e:0)%2==0?this.position=X:this.position=z),this.articulation={betweenLines:!1},this.reset()}reset(){this.articulation=N.articulationCodes(this.type),this.articulation||(this.articulation={code:this.type,betweenLines:!1});let t=(this.position===X?this.articulation.aboveCode:this.articulation.belowCode)||this.articulation.code||eO.null;this.text=t}setBetweenLines(t=!0){return this.articulation.betweenLines=t,this}draw(){let t=this.checkContext(),e=this.checkAttachedNote();this.setRendered();let i=this.checkIndex(),{position:s,textLine:n}=this,a=this.articulation.betweenLines,r=e.checkStave(),h=r.getSpacingBetweenLines(),l=W(e),{x:c}=e.getModifierStartXY(s,i),d=!a||l,u=Z(e,s),g=({[X]:()=>{let t=j(e,n)-(n+u)*h;return d?Math.min(r.getYForTopText(_.INITIAL_OFFSET),t):t},[z]:()=>{let t=K(e,n)+(n+u)*h;return d?Math.max(r.getYForBottomText(_.INITIAL_OFFSET),t):t}})[s]();if(!l){let t=s===X?-1:1,n=e.getKeyProps()[i].line,r=(e.getYs()[i]-g)/h+Number(n),o=function(t,e,i,s){let n=.5*Q(e,i)(e/.5),a=t&&J(n,i),r=n%1==0;return a&&r?n+-(.5*s):n}(a,r,s,t);J(o,s)&&this.setOrigin(.5,.5),g+=Math.abs(o-r)*h*t}!function(...t){_.DEBUG&&o("VexFlow.Articulation",t)}(`Rendering articulation at (x: ${c}, y: ${g})`),this.x=c,this.y=g,this.renderText(t,0,0)}}_.DEBUG=!1,_.INITIAL_OFFSET=-.5;class ${static get CATEGORY(){return"RenderContext"}set font(t){this.setFont(t)}get font(){return this.getFont()}}class tt extends w{static get CATEGORY(){return"Tickable"}constructor(){super(),this._preFormatted=!1,this._postFormatted=!1,this.ticks=new u(0,1),this.intrinsicTicks=0,this.tickMultiplier=new u(1,1),this.modifiers=[],this.tupletStack=[],this.alignCenter=!1,this.centerXShift=0,this.ignoreTicks=!1,this.formatterMetrics={freedom:{left:0,right:0},duration:"",iterations:0,space:{used:0,mean:0,deviation:0}}}reset(){return this}getTicks(){return this.ticks}shouldIgnoreTicks(){return this.ignoreTicks}setIgnoreTicks(t){return this.ignoreTicks=t,this}getWidth(){if(!this._preFormatted)throw new n("UnformattedNote","Can't call GetWidth on an unformatted note.");return this.width+(this.modifierContext?this.modifierContext.getWidth():0)}getX(){return this.checkTickContext("Can't getX() without a TickContext.").getX()+this.xShift}getFormatterMetrics(){return this.formatterMetrics}getCenterXShift(){return this.isCenterAligned()?this.centerXShift:0}setCenterXShift(t){return this.centerXShift=t,this}isCenterAligned(){return this.alignCenter}setCenterAlignment(t){return this.alignCenter=t,this}getVoice(){return r(this.voice,"NoVoice","Tickable has no voice.")}setVoice(t){this.voice=t}getTuplet(){return this.tuplet}getTupletStack(){return this.tupletStack}resetTuplet(t){let e,i;if(t){let s=this.tupletStack.indexOf(t);return -1!==s&&(this.tupletStack.splice(s,1),e=t.getNoteCount(),i=t.getNotesOccupied(),this.applyTickMultiplier(e,i)),this}for(;this.tupletStack.length;)e=(t=this.tupletStack.pop()).getNoteCount(),i=t.getNotesOccupied(),this.applyTickMultiplier(e,i);return this}setTuplet(t){if(t){this.tupletStack.push(t);let e=t.getNoteCount(),i=t.getNotesOccupied();this.applyTickMultiplier(i,e)}return this.tuplet=t,this}addToModifierContext(t){this.modifierContext=t;for(let t=0;t<this.modifiers.length;++t)this.modifierContext.addMember(this.modifiers[t]);return this.modifierContext.addMember(this),this._preFormatted=!1,this}addModifier(t,e=0){return this.modifiers.push(t),this._preFormatted=!1,this}getModifiers(){return this.modifiers}setTickContext(t){this.tickContext=t,this._preFormatted=!1}checkTickContext(t="Tickable has no tick context."){return r(this.tickContext,"NoTickContext",t)}preFormat(){!this._preFormatted&&(this.width=0,this.modifierContext&&(this.modifierContext.preFormat(),this.width+=this.modifierContext.getWidth()))}set preFormatted(t){this._preFormatted=t}get preFormatted(){return this._preFormatted}postFormat(){return this._postFormatted||(this._postFormatted=!0),this}set postFormatted(t){this._postFormatted=t}get postFormatted(){return this._postFormatted}getIntrinsicTicks(){return this.intrinsicTicks}setIntrinsicTicks(t){this.intrinsicTicks=t,this.ticks=this.tickMultiplier.clone().multiply(this.intrinsicTicks)}getTickMultiplier(){return this.tickMultiplier}applyTickMultiplier(t,e){this.tickMultiplier.multiply(t,e),this.ticks=this.tickMultiplier.clone().multiply(this.intrinsicTicks)}setDuration(t){let e=t.numerator*(N.RESOLUTION/t.denominator);this.ticks=this.tickMultiplier.clone().multiply(e),this.intrinsicTicks=this.ticks.value()}getAbsoluteX(){return this.checkTickContext("Can't getAbsoluteX() without a TickContext.").getX()}setModifierContext(t){return this.modifierContext=t,this}getModifierContext(){return this.modifierContext}checkModifierContext(){return r(this.modifierContext,"NoModifierContext","No modifier context attached to this tickable.")}}class te extends tt{static get CATEGORY(){return"Note"}static getGlyphProps(t,e="n"){t=N.sanitizeDuration(t);let i=N.durationCodes[t];void 0===i&&(i=N.durationCodes["4"]);let s=N.codeNoteHead(e.toUpperCase(),t);return s!==eO.null&&(i=Object.assign(Object.assign({},i),{codeHead:s})),i}static plotMetrics(t,e,i){var s;let n=e.getMetrics(),a=e.getAbsoluteX()-n.modLeftPx-n.leftDisplacedHeadPx,r=e.getAbsoluteX()-n.leftDisplacedHeadPx,o=e.getAbsoluteX(),h=e.getAbsoluteX()+n.notePx,l=e.getAbsoluteX()+n.notePx+n.rightDisplacedHeadPx,c=e.getAbsoluteX()+n.notePx+n.rightDisplacedHeadPx+n.modRightPx,d=c+(null!=(s=e.getFormatterMetrics().freedom.right)?s:0),u=c-a;t.save(),t.setFont(p.get("fontFamily"),8),t.fillText(Math.round(u)+"px",a+e.getXShift(),i);let g=i+7;function m(i,s,n,a=g){t.beginPath(),t.setStrokeStyle(n),t.setFillStyle(n),t.setLineWidth(3),t.moveTo(i+e.getXShift(),a),t.lineTo(s+e.getXShift(),a),t.stroke()}m(a,r,"red"),m(r,o,"#999"),m(o,h,"green"),m(h,l,"#999"),m(l,c,"red"),m(c,d,"#DD0"),m(a-e.getXShift(),a,"#BBB"),function(t,e,i,s="#F55"){t.save(),t.setFillStyle(s),t.beginPath(),t.arc(e,i,3,0,2*Math.PI,!1),t.closePath(),t.fill(),t.restore()}(t,o+e.getXShift(),g,"blue");let f=e.getFormatterMetrics();if(f.iterations>0){let s=f.space.deviation;t.setFillStyle("red"),t.fillText((s>=0?"+":"")+Math.round(s),o+e.getXShift(),i-10)}t.restore()}static parseDuration(t){if(!t)return;let e=/(\d*\/?\d+|[a-z])(d*)([nrhms]|$)/.exec(t);if(!e)return;let i=e[1];return{duration:i,dots:e[2].length,type:e[3]||"n"}}static parseNoteStruct(t){let e=te.parseDuration(t.duration);if(!e)return;let i=t.type;if(i&&!N.validTypes[i])return;let s=[];i||(i=e.type||"n",void 0!==t.keys&&t.keys.forEach((t,e)=>{let n=t.split("/");s[e]=n&&3===n.length?n[2]:i}));let n=N.durationToTicks(e.duration);if(!n)return;let a=t.dots?t.dots:e.dots;if("number"!=typeof a)return;let r=n;for(let t=0;t<a;t++){if(r<=1)return;r/=2,n+=r}return{duration:e.duration,type:i,customTypes:s,dots:a,ticks:n}}constructor(t){if(super(),!t)throw new n("BadArguments","Note must have valid initialization data to identify duration and type.");let e=te.parseNoteStruct(t);if(!e)throw new n("BadArguments",`Invalid note initialization object: ${JSON.stringify(t)}`);this.keys=t.keys||[],this.keyProps=[],this.duration=e.duration,this.noteType=e.type,this.customTypes=e.customTypes,t.durationOverride?this.setDuration(t.durationOverride):this.setIntrinsicTicks(e.ticks),this.modifiers=[],this.glyphProps=te.getGlyphProps(this.duration,this.noteType),this.customGlyphs=this.customTypes.map(t=>te.getGlyphProps(this.duration,t)),this.playNote=void 0,this.ignoreTicks=!1,this.width=0,this.leftDisplacedHeadPx=0,this.rightDisplacedHeadPx=0,this.xShift=0,this.ys=[],t.alignCenter&&this.setCenterAlignment(t.alignCenter),this.renderOptions={annotationSpacing:5,strokePx:1,yShift:0}}getPlayNote(){return this.playNote}setPlayNote(t){return this.playNote=t,this}isRest(){return!1}addStroke(t,e){return e.setNote(this),e.setIndex(t),this.modifiers.push(e),this.preFormatted=!1,this}getStave(){return this.stave}checkStave(){return r(this.stave,"NoStave","No stave attached to instance.")}setStave(t){return this.stave=t,this.setYs([t.getYForLine(0)]),this.setContext(this.stave.getContext()),this}getLeftDisplacedHeadPx(){return this.leftDisplacedHeadPx}getRightDisplacedHeadPx(){return this.rightDisplacedHeadPx}setLeftDisplacedHeadPx(t){return this.leftDisplacedHeadPx=t,this}setRightDisplacedHeadPx(t){return this.rightDisplacedHeadPx=t,this}shouldIgnoreTicks(){return this.ignoreTicks}getLineNumber(t){return 0}getLineForRest(){return 0}getGlyphProps(){return this.glyphProps}getGlyphWidth(){return 0}setYs(t){return this.ys=t,this}getYs(){if(0===this.ys.length)throw new n("NoYValues","No Y-values calculated for this note.");return this.ys}getYForTopText(t){return this.checkStave().getYForTopText(t)}getVoice(){if(!this.voice)throw new n("NoVoice","Note has no voice.");return this.voice}setVoice(t){return this.voice=t,this.preFormatted=!1,this}getTickContext(){return this.checkTickContext()}setTickContext(t){return this.tickContext=t,this.preFormatted=!1,this}getDuration(){return this.duration}isDotted(){return this.getModifiersByType("Dot").length>0}hasStem(){return!1}getNoteType(){return this.noteType}getBeam(){return this.beam}checkBeam(){return r(this.beam,"NoBeam","No beam attached to instance")}hasBeam(){return void 0!==this.beam}setBeam(t){return this.beam=t,this}addModifier(t,e=0){let i="Note.addModifier(modifier: Modifier, index: number=0)";if("string"==typeof e&&(e=parseInt(e),console.warn(i+" expected a number for `index`, but received a string.")),"object"!=typeof t||"number"!=typeof e)throw new n("WrongParams","Incorrect call signature. Use "+i+" instead.");return t.setNote(this),t.setIndex(e),super.addModifier(t),this}getModifiersByType(t){return this.modifiers.filter(e=>e.getCategory()===t)}getModifierStartXY(t,e,i){if(!this.preFormatted)throw new n("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");return{x:this.getAbsoluteX(),y:this.ys[0]}}getRightParenthesisPx(t){return this.getKeyProps()[t].displaced?this.getRightDisplacedHeadPx():0}getLeftParenthesisPx(t){return this.getKeyProps()[t].displaced?this.getLeftDisplacedHeadPx()-this.xShift:-this.xShift}getFirstDotPx(){let t=this.getRightDisplacedHeadPx(),e=this.checkModifierContext().getMembers("Parenthesis");return 0!==e.length&&(t+=e[0].getWidth()+1),t}getMetrics(){if(!this.preFormatted)throw new n("UnformattedNote","Can't call getMetrics on an unformatted note.");let t=this.modifierContext?this.modifierContext.getState().leftShift:0,e=this.modifierContext?this.modifierContext.getState().rightShift:0,i=this.getWidth(),s=this.getGlyphWidth(),a=i-t-e-this.leftDisplacedHeadPx-this.rightDisplacedHeadPx;return{width:i,glyphWidth:s,notePx:a,modLeftPx:t,modRightPx:e,leftDisplacedHeadPx:this.leftDisplacedHeadPx,rightDisplacedHeadPx:this.rightDisplacedHeadPx,glyphPx:0}}getAbsoluteX(){let t=this.checkTickContext("Can't getAbsoluteX() without a TickContext.").getX();return this.stave&&(t+=this.stave.getNoteStartX()+p.get("Stave.padding",0)),this.isCenterAligned()&&(t+=this.getCenterXShift()),t}getStemDirection(){throw new n("NoStem","No stem attached to this note.")}getStemExtents(){throw new n("NoStem","No stem attached to this note.")}getTieRightX(){let t=this.getAbsoluteX();return t+=this.getGlyphWidth()/2,t+=-this.width/2+this.width+2}getTieLeftX(){let t=this.getAbsoluteX();return t+=this.getGlyphWidth()/2,t-=this.width/2+2}getKeys(){return this.keys}getKeyProps(){return this.keyProps}getBoundingBox(){let t=super.getBoundingBox();for(let e=0;e<this.modifiers.length;e++)t.mergeWith(this.modifiers[e].getBoundingBox());return t}}!function(t){t[t.CENTER=0]="CENTER",t[t.LEFT=1]="LEFT",t[t.RIGHT=2]="RIGHT",t[t.ABOVE=3]="ABOVE",t[t.BELOW=4]="BELOW",t[t.BEGIN=5]="BEGIN",t[t.END=6]="END"}(eI||(eI={}));class ti extends w{static get CATEGORY(){return"StaveModifier"}static get Position(){return eI}constructor(){super(),this.padding=10,this.position=eI.ABOVE}getPosition(){return this.position}setPosition(t){return this.position=t,this}getStave(){return this.stave}checkStave(){return r(this.stave,"NoStave","No stave attached to instance.")}setStave(t){return this.stave=t,this}getPadding(t){return void 0!==t&&t<2?0:this.padding}setPadding(t){return this.padding=t,this}setLayoutMetrics(t){return this.layoutMetrics=t,this}getLayoutMetrics(){return this.layoutMetrics}}!function(t){t[t.SINGLE=1]="SINGLE",t[t.DOUBLE=2]="DOUBLE",t[t.END=3]="END",t[t.REPEAT_BEGIN=4]="REPEAT_BEGIN",t[t.REPEAT_END=5]="REPEAT_END",t[t.REPEAT_BOTH=6]="REPEAT_BOTH",t[t.NONE=7]="NONE"}(eG||(eG={}));class ts extends ti{static get CATEGORY(){return"Barline"}static get type(){return eG}static get typeString(){return{single:eG.SINGLE,double:eG.DOUBLE,end:eG.END,repeatBegin:eG.REPEAT_BEGIN,repeatEnd:eG.REPEAT_END,repeatBoth:eG.REPEAT_BOTH,none:eG.NONE}}constructor(t){super(),this.thickness=N.STAVE_LINE_THICKNESS;let e=eG;this.widths={},this.widths[e.SINGLE]=5,this.widths[e.DOUBLE]=5,this.widths[e.END]=5,this.widths[e.REPEAT_BEGIN]=5,this.widths[e.REPEAT_END]=5,this.widths[e.REPEAT_BOTH]=5,this.widths[e.NONE]=5,this.paddings={},this.paddings[e.SINGLE]=0,this.paddings[e.DOUBLE]=0,this.paddings[e.END]=0,this.paddings[e.REPEAT_BEGIN]=15,this.paddings[e.REPEAT_END]=15,this.paddings[e.REPEAT_BOTH]=15,this.paddings[e.NONE]=0,this.layoutMetricsMap={},this.layoutMetricsMap[e.SINGLE]={xMin:0,xMax:1,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[e.DOUBLE]={xMin:-3,xMax:1,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[e.END]={xMin:-5,xMax:1,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[e.REPEAT_END]={xMin:-10,xMax:1,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[e.REPEAT_BEGIN]={xMin:-2,xMax:10,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[e.REPEAT_BOTH]={xMin:-10,xMax:10,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[e.NONE]={xMin:0,xMax:0,paddingLeft:5,paddingRight:5},this.setPosition(eI.BEGIN),this.setType(t)}getType(){return this.type}setType(t){return this.type="string"==typeof t?ts.typeString[t]:t,this.setWidth(this.widths[this.type]),this.setPadding(this.paddings[this.type]),this.setLayoutMetrics(this.layoutMetricsMap[this.type]),this}draw(){let t=this.checkStave(),e=t.checkContext();switch(this.setRendered(),e.openGroup("stavebarline",this.getAttribute("id")),this.type){case eG.SINGLE:this.drawVerticalBar(t,this.x,!1);break;case eG.DOUBLE:this.drawVerticalBar(t,this.x,!0);break;case eG.END:this.drawVerticalEndBar(t,this.x);break;case eG.REPEAT_BEGIN:this.drawRepeatBar(t,this.x,!0),t.getX()!==this.x&&this.drawVerticalBar(t,t.getX());break;case eG.REPEAT_END:this.drawRepeatBar(t,this.x,!1);break;case eG.REPEAT_BOTH:this.drawRepeatBar(t,this.x,!1),this.drawRepeatBar(t,this.x,!0)}e.closeGroup()}drawVerticalBar(t,e,i){let s=t.checkContext(),n=t.getTopLineTopY(),a=t.getBottomLineBottomY();i&&s.fillRect(e-3,n,1,a-n),s.fillRect(e,n,1,a-n)}drawVerticalEndBar(t,e){let i=t.checkContext(),s=t.getTopLineTopY(),n=t.getBottomLineBottomY();i.fillRect(e-5,s,1,n-s),i.fillRect(e-2,s,3,n-s)}drawRepeatBar(t,e,i){let s=t.checkContext(),n=t.getTopLineTopY(),a=t.getBottomLineBottomY(),r=3;i||(r=-5),s.fillRect(e+r,n,1,a-n),s.fillRect(e-2,n,3,a-n),i?r+=4:r-=4;let o=e+r+1,h=(t.getNumLines()-1)*t.getSpacingBetweenLines(),l=n+(h=h/2-t.getSpacingBetweenLines()/2)+1;s.beginPath(),s.arc(o,l,2,0,2*Math.PI,!1),s.fill(),l+=t.getSpacingBetweenLines(),s.beginPath(),s.arc(o,l,2,0,2*Math.PI,!1),s.fill()}}class tn extends te{static get CATEGORY(){return"BarNote"}constructor(t=eG.SINGLE){super({duration:"b"}),this.metrics={widths:{}};let e=eG;this.metrics.widths={[e.SINGLE]:8,[e.DOUBLE]:12,[e.END]:15,[e.REPEAT_BEGIN]:14,[e.REPEAT_END]:14,[e.REPEAT_BOTH]:18,[e.NONE]:0},this.ignoreTicks=!0,this.setType(t)}getType(){return this.type}setType(t){return this.type="string"==typeof t?ts.typeString[t]:t,this.setWidth(this.metrics.widths[this.type]),this}addToModifierContext(t){return this}preFormat(){return this.preFormatted=!0,this}draw(){let t=this.checkContext();!function(...t){tn.DEBUG&&o("VexFlow.BarNote",t)}("Rendering bar line at: ",this.getAbsoluteX());let e=new ts(this.type);e.setX(this.getAbsoluteX()),e.setStave(this.checkStave()),e.setContext(t),e.drawWithStyle(),this.setRendered()}}function ta(t){let e=0;return(t.forEach(t=>{t.keyProps&&t.keyProps.forEach(t=>{e+=t.line-3})}),e>=0)?V.DOWN:V.UP}tn.DEBUG=!1;class tr extends w{static get CATEGORY(){return"Beam"}getStemDirection(){return this._stemDirection}static getDefaultBeamGroups(t){t&&"c"!==t||(t="4/4");let e={"1/2":["1/2"],"2/2":["1/2"],"3/2":["1/2"],"4/2":["1/2"],"1/4":["1/4"],"2/4":["1/4"],"3/4":["1/4"],"4/4":["1/4"],"1/8":["1/8"],"2/8":["2/8"],"3/8":["3/8"],"4/8":["2/8"],"1/16":["1/16"],"2/16":["2/16"],"3/16":["3/16"],"4/16":["2/16"]}[t];if(void 0!==e)return e.map(t=>new u().parse(t));{let e=parseInt(t.split("/")[0],10),i=parseInt(t.split("/")[1],10);if(e%3==0)return[new u(3,i)];if(i>4)return[new u(2,i)];if(i<=4)return[new u(1,i)]}return[new u(1,4)]}static applyAndGetBeams(t,e,i){return tr.generateBeams(t.getTickables(),{groups:i,stemDirection:e})}static generateBeams(t,e={}){let i,s;e.groups&&e.groups.length||(e.groups=[new u(2,8)]);let a=e.groups.map(t=>{if(!t.multiply)throw new n("InvalidBeamGroups","The beam groups must be an array of VexFlow.Fractions");return t.clone().multiply(N.RESOLUTION,1)}),r=0,o=[],h=[];function l(){a.length-1>r?r+=1:r=0}i=[],s=new u(0,1),t.forEach(t=>{if(i=[],t.shouldIgnoreTicks()){o.push(h),h=i;return}h.push(t);let e=a[r].clone(),n=h.reduce((t,e)=>e.getTicks().clone().add(t),new u(0,1)).add(s),c=8>N.durationToNumber(t.getDuration());if(c&&t.getTuplet()&&(e.numerator*=2),n.greaterThan(e)){if(!c){let t=h.pop();t&&i.push(t)}o.push(h);do s=n.subtract(a[r]),l();while(s.greaterThanEquals(a[r]));h=i}else n.equals(e)&&(o.push(h),s=new u(0,1),h=i,l())}),h.length>0&&o.push(h);let c=[];o.forEach(t=>{let i=[];t.forEach((t,s,n)=>{let a=0===s||s===n.length-1,r=n[s-1],o=!e.beamRests&&t.isRest(),h=e.beamRests&&e.beamMiddleOnly&&t.isRest()&&a,l=!1;if(e.maintainStemDirections&&r&&!t.isRest()&&!r.isRest()){let e=r.getStemDirection();l=t.getStemDirection()!==e}let d=8>parseInt(t.getDuration(),10);o||h||l||d?(i.length>0&&c.push(i),i=l?[t]:[]):i.push(t)}),i.length>0&&c.push(i)}),(o=c).forEach(t=>{var i,s;let n;if(e.maintainStemDirections){let e=function(t){for(let e=0;e<t.length;e++){let i=t[e];if(!i.isRest())return i}return!1}(t);n=e?e.getStemDirection():V.UP}else n=e.stemDirection?e.stemDirection:ta(t);i=t,s=n,i.forEach(t=>{t.setStemDirection(s)})});let d=o.filter(t=>{if(t.length>1){let e=!0;return t.forEach(t=>{t.getIntrinsicTicks()>=N.durationToTicks("4")&&(e=!1)}),e}return!1}),g=function(){let t=[];return o.forEach(e=>{let i;e.forEach(e=>{let s=e.getTuplet();s&&i!==s&&(i=s,t.push(i))})}),t}(),p=[];return d.forEach(t=>{let i=new tr(t);e.showStemlets&&(i.renderOptions.showStemlets=!0),e.secondaryBreaks&&(i.renderOptions.secondaryBreakTicks=N.durationToTicks(e.secondaryBreaks)),!0===e.flatBeams&&(i.renderOptions.flatBeams=!0,i.renderOptions.flatBeamOffset=e.flatBeamOffset),p.push(i)}),g.forEach(t=>{let e=t.notes[0].stemDirection===V.DOWN?-1:1;t.setTupletLocation(e);let i=!1;for(let e=0;e<t.notes.length;e++)if(!t.notes[e].hasBeam()){i=!0;break}t.setBracketed(i)}),p}constructor(t,e=!1){let i,s;if(super(),this.slope=0,this.yShift=0,this.forcedPartialDirections={},!t||0===t.length)throw new n("BadArguments","No notes provided for beam.");if(1===t.length)throw new n("BadArguments","Too few notes for beam.");if(this._ticks=t[0].getIntrinsicTicks(),this._ticks>=N.durationToTicks("4"))throw new n("BadArguments","Beams can only be applied to notes shorter than a quarter note.");this._stemDirection=t[0].getStemDirection();let a=this._stemDirection;for(e&&I(t[0])?a=ta(t):e&&W(t[0])&&(a=t.reduce((t,e)=>t+e.getStemDirection(),0)>-1?V.UP:V.DOWN),i=0;i<t.length;++i)s=t[i],e&&(s.setStemDirection(a),this._stemDirection=a),s.setBeam(this);this.postFormatted=!1,this.notes=t,this._beamCount=this.getBeamCount(),this.breakOnIndexes=[],this.renderOptions={beamWidth:5,maxSlope:.25,minSlope:-.25,slopeIterations:20,slopeCost:100,showStemlets:!1,stemletExtension:7,partialBeamLength:10,flatBeams:!1,minFlatBeamOffset:15}}getNotes(){return this.notes}getBeamCount(){return this.notes.map(t=>t.getGlyphProps().beamCount).reduce((t,e)=>e>t?e:t)}breakSecondaryAt(t){return this.breakOnIndexes=t,this}setPartialBeamSideAt(t,e){return this.forcedPartialDirections[t]=e,this}unsetPartialBeamSideAt(t){return delete this.forcedPartialDirections[t],this}getSlopeY(t,e,i,s){return i+(t-e)*s}calculateSlope(){let{notes:t,renderOptions:{maxSlope:e,minSlope:i,slopeIterations:s,slopeCost:n}}=this,a=this._stemDirection,r=t[0],o=function(t,e){let i=t.getStemExtents().topY,s=t.getStemX();return(e.getStemExtents().topY-i)/(e.getStemX()-s)}(r,t[t.length-1]),h=(e-i)/s,l=Number.MAX_VALUE,c=0,d=0;for(let s=i;s<=e;s+=h){let e=0,i=0;for(let n=1;n<t.length;++n){let o=t[n];if(o.hasStem()||o.isRest()){let t=this.getSlopeY(o.getStemX(),r.getStemX(),r.getStemExtents().topY,s)+i,h=o.getStemExtents().topY;if(h*a<t*a){let s=Math.abs(h-t);i+=-(s*a),e+=s*n}else e+=(h-t)*a}}let h=n*Math.abs(o/2-s)+Math.abs(e);h<l&&(l=h,c=s,d=i)}this.slope=c,this.yShift=d}calculateFlatSlope(){let{notes:t,renderOptions:{beamWidth:e,minFlatBeamOffset:i,flatBeamOffset:s}}=this,n=this._stemDirection,a=0,r=0,o=0,h=0;for(let e=0;e<t.length;e++){let i=t[e],s=i.getStemExtents().topY;a+=s,n===V.DOWN&&h<s?(h=s,r=Math.max(...i.getYs()),o=i.getBeamCount()):n===V.UP&&(0===h||h>s)&&(h=s,r=Math.min(...i.getYs()),o=i.getBeamCount())}let l=a/t.length,c=i+o*e*1.5,d=r+-(c*n);n===V.DOWN&&l<d?l=r+c:n===V.UP&&l>d&&(l=r-c),s?n===V.DOWN&&l>s?this.renderOptions.flatBeamOffset=l:n===V.UP&&l<s&&(this.renderOptions.flatBeamOffset=l):this.renderOptions.flatBeamOffset=l,this.slope=0,this.yShift=0}getBeamYToDraw(){let t=this.notes[0].getStemExtents().topY;return this.renderOptions.flatBeams&&this.renderOptions.flatBeamOffset&&(t=this.renderOptions.flatBeamOffset),t}applyStemExtensions(){let{notes:t,slope:e,renderOptions:{showStemlets:i,stemletExtension:s,beamWidth:n}}=this,a=this.yShift,r=this._beamCount,o=t[0],h=this.getBeamYToDraw(),l=o.getStemX();for(let o=0;o<t.length;++o){let c=t[o],d=c.getStem();if(d){let t=c.getStemX(),{topY:o}=c.getStemExtents(),u=this.getSlopeY(t,l,h,e)+a,g=d.getExtension(),p=c.getStemDirection()===V.UP?o-u:u-o,m=0;if(c.getStemDirection()!==this._stemDirection&&(m=(1+(c.getGlyphProps().beamCount-1)*1.5)*this.renderOptions.beamWidth),d.setExtension(g+p+m),d.adjustHeightForBeam(),c.isRest()&&i){let t=(r-1)*n*1.5+n;d.setVisibility(!0).setStemlet(!0,t+s)}}}}lookupBeamDirection(t,e,i,s,n){if("4"===t)return"L";let a=this.forcedPartialDirections[n];if(a)return a;let r=`${N.durationToNumber(t)/2}`,o=e<N.durationToTicks(r),h=s<N.durationToTicks(r),l=i<N.durationToTicks(r);return o&&h&&l?"B":o&&!h&&l?"L":!o&&h&&l?"R":this.lookupBeamDirection(r,e,i,s,n)}getBeamLines(t){let e,i=N.durationToTicks(t),s=!1,n=[],a=this.renderOptions.partialBeamLength,r=!1,o=0;for(let h=0;h<this.notes.length;++h){let l=this.notes[h];o+=l.getTicks().value();let c=!1;parseInt(t,10)>=8&&(c=-1!==this.breakOnIndexes.indexOf(h),this.renderOptions.secondaryBreakTicks&&o>=this.renderOptions.secondaryBreakTicks&&(o=0,c=!0));let d=l.getIntrinsicTicks()<i,u=l.getStemX()-V.WIDTH/2,g=this.notes[h-1],p=this.notes[h+1],m=p&&p.getIntrinsicTicks()<i,f=g&&g.getIntrinsicTicks()<i,S=g&&p&&d&&!f&&!m;if(d)if(s)(e=n[n.length-1]).end=u,c&&(s=!1,p&&!m&&void 0===e.end&&(e.end=e.start-a));else{if(e={start:u,end:void 0},s=!0,S){let i=g.getIntrinsicTicks(),s=p.getIntrinsicTicks(),n=l.getIntrinsicTicks();["L","B"].includes(this.lookupBeamDirection(t,i,n,s,h))?e.end=e.start-a:e.end=e.start+a}else m?c&&(e.end=e.start-a,s=!1):(r||0===h)&&p?e.end=e.start+a:e.end=e.start-a;n.push(e)}else s=!1;r=c}let h=n[n.length-1];return h&&void 0===h.end&&(h.end=h.start-a),n}drawStems(t){this.notes.forEach(e=>{let i=e.getStem();if(i){let s=e.getStemX();i.setNoteHeadXBounds(s,s),i.setContext(t).drawWithStyle()}},this)}drawBeamLines(t){let e=["4","8","16","32","64"],i=this.notes[0],s=this.getBeamYToDraw(),a=i.getStemX(),r=this.renderOptions.beamWidth*this._stemDirection;for(let i=0;i<e.length;++i){let o=e[i],h=this.getBeamLines(o);for(let e=0;e<h.length;++e){let i=h[e],o=i.start,l=this.getSlopeY(o,a,s,this.slope),c=i.end;if(c){let e=this.getSlopeY(c,a,s,this.slope);t.beginPath(),t.moveTo(o,l),t.lineTo(o,l+r),t.lineTo(c+1,e+r),t.lineTo(c+1,e),t.closePath(),t.fill()}else throw new n("NoLastBeamX","lastBeamX undefined.")}s+=1.5*r}}preFormat(){return this}postFormat(){this.postFormatted||(W(this.notes[0])||this.renderOptions.flatBeams?this.calculateFlatSlope():this.calculateSlope(),this.applyStemExtensions(),this.postFormatted=!0)}draw(){let t=this.checkContext();this.setRendered(),this.unbeamable||(this.postFormatted||this.postFormat(),t.openGroup("beam",this.getAttribute("id")),this.drawStems(t),this.drawBeamLines(t),t.closeGroup())}}class to extends b{static get CATEGORY(){return"Bend"}static get UP(){return 0}static get DOWN(){return 1}static format(t,e){if(!t||0===t.length)return!1;let i=0;for(let s=0;s<t.length;++s){let n=t[s],a=n.checkAttachedNote();if(W(a)){let t=a.leastString()-1;e.topTextLine<t&&(e.topTextLine=t)}n.setXShift(i),i=n.getWidth(),n.setTextLine(e.topTextLine)}return e.rightShift+=i,e.topTextLine+=1,!0}setStyleLine(t){return this.styleLine=t,this}getStyleLine(){return this.styleLine}constructor(t){super(),this.styleLine=p.getStyle("Bend.line"),this.xShift=0,this.tap="",this.renderOptions={bendWidth:8,releaseWidth:8},this.phrase=t,this.updateWidth()}setXShift(t){return this.xShift=t,this.updateWidth(),this}setTap(t){return this.tap=t,this}getTextHeight(){let t=new w("Bend");return t.setText(this.phrase[0].text),t.getHeight()}updateWidth(){let t=t=>{let e=new w("Bend");return e.setText(t),e.getWidth()},e=0;for(let i=0;i<this.phrase.length;++i){let s=this.phrase[i];if(void 0!==s.width)e+=s.width;else{let i=s.type===to.UP?this.renderOptions.bendWidth:this.renderOptions.releaseWidth;s.width=Math.max(i,t(s.text))+3,s.drawWidth=s.width/2,e+=s.width}}return this.setWidth(e+this.xShift),this}draw(){var t;let e,i=this.checkContext(),s=this.checkAttachedNote();this.setRendered();let a=s.getModifierStartXY(b.Position.RIGHT,this.index);a.x+=3,a.y+=.5;let r=this.xShift,o=s.checkStave().getSpacingBetweenLines(),h=s.getYs().reduce((t,e)=>t<e?t:e),l=a.y-((this.textLine+1)*o+a.y-h)+3,c=a.y-((this.textLine+1)*o+a.y-h)-1,d=(t,e,s,n)=>{this.applyStyle(i,this.styleLine),i.beginPath(),i.moveTo(t,e),i.quadraticCurveTo(t+s,e,t+s,n),i.stroke()},u=(t,e,s,n)=>{this.applyStyle(i,this.styleLine),i.beginPath(),i.moveTo(t,n),i.quadraticCurveTo(t+s,n,t+s,e),i.stroke()},g=(t,e,s)=>{let n=e+4*s;i.beginPath(),i.moveTo(t,e),i.lineTo(t-4,n),i.lineTo(t+4,n),i.closePath(),i.fill()},p=(t,e)=>{i.setFont(this.fontInfo);let s=t-i.measureText(e).width/2;i.fillText(e,s,c)},m=0,f=0;(null==(t=this.tap)?void 0:t.length)&&p(s.getModifierStartXY(b.Position.CENTER,this.index).x,this.tap);for(let t=0;t<this.phrase.length;++t){let i=this.phrase[t];i.drawWidth||(i.drawWidth=0),0===t&&(i.drawWidth+=r),f=i.drawWidth+m-(1===t?r:0),i.type===to.UP&&(e&&e.type===to.UP&&g(a.x,l,1),d(a.x,a.y,f,l)),i.type===to.DOWN&&(e&&e.type===to.UP&&u(a.x,a.y,f,l),e&&e.type===to.DOWN&&(g(a.x,a.y,-1),u(a.x,a.y,f,l)),e||(f=i.drawWidth,u(a.x,a.y,f,l))),p(a.x+f,i.text),e=i,m=i.drawWidth,e.x=a.x,a.x+=f}if(!e||void 0===e.x)throw new n("NoLastBendForBend","Internal error.");e.type===to.UP?g(e.x+f,l,1):e.type===to.DOWN&&g(e.x+f,a.y,-1)}}function th(t){if(!t)return!1;let e=a();return"function"==typeof e.HTMLCanvasElement&&t instanceof e.HTMLCanvasElement||"function"==typeof t.getContext&&"function"==typeof t.toDataURL}class tl extends ${static get WIDTH(){return 600}static get HEIGHT(){return 400}static get CANVAS_BROWSER_SIZE_LIMIT(){return 32767}static sanitizeCanvasDims(t,e){let i=this.CANVAS_BROWSER_SIZE_LIMIT;return Math.max(t,e)>i&&(!function(...t){let e=t.join(" "),i=Error();a().console.log("Warning: ",e,i.stack)}("Canvas dimensions exceed browser limit. Cropping to "+i),t>i&&(t=i),e>i&&(e=i)),[t,e]}constructor(t){super(),this.textHeight=0,this.context2D=t,this.curTransfrom=t.getTransform(),t.canvas?this.canvas=t.canvas:this.canvas={width:tl.WIDTH,height:tl.HEIGHT}}clear(){this.context2D.clearRect(0,0,this.canvas.width,this.canvas.height)}openGroup(t,e){}closeGroup(){}openRotation(t,e,i){this.curTransfrom=this.context2D.getTransform(),this.context2D.translate(e,i),this.context2D.rotate(t*Math.PI/180),this.context2D.translate(-e,-i)}closeRotation(){this.context2D.setTransform(this.curTransfrom)}add(t){}setFillStyle(t){return this.context2D.fillStyle=t,this}setBackgroundFillStyle(t){return this}setStrokeStyle(t){return this.context2D.strokeStyle=t,this}setShadowColor(t){return this.context2D.shadowColor=t,this}setShadowBlur(t){let e=this.context2D.getTransform(),i=Math.sqrt(e.a*e.a+e.b*e.b+e.c*e.c+e.d*e.d);return this.context2D.shadowBlur=i*t,this}setLineWidth(t){return this.context2D.lineWidth=t,this}setLineCap(t){return this.context2D.lineCap=t,this}setLineDash(t){return this.context2D.setLineDash(t),this}scale(t,e){return this.context2D.scale(t,e),this}resize(t,e,i){var s;let n=this.context2D.canvas,r=null!=(s=null!=i?i:a().devicePixelRatio)?s:1;return[t,e]=tl.sanitizeCanvasDims(t*r,e*r),t=t/r|0,e=e/r|0,n.width=t*r,n.height=e*r,th(n)&&(n.style.width=t+"px",n.style.height=e+"px"),this.scale(r,r)}rect(t,e,i,s){return this.context2D.rect(t,e,i,s),this}fillRect(t,e,i,s){return this.context2D.fillRect(t,e,i,s),this}pointerRect(t,e,i,s){return this}clearRect(t,e,i,s){return this.context2D.clearRect(t,e,i,s),this}beginPath(){return this.context2D.beginPath(),this}moveTo(t,e){return this.context2D.moveTo(t,e),this}lineTo(t,e){return this.context2D.lineTo(t,e),this}bezierCurveTo(t,e,i,s,n,a){return this.context2D.bezierCurveTo(t,e,i,s,n,a),this}quadraticCurveTo(t,e,i,s){return this.context2D.quadraticCurveTo(t,e,i,s),this}arc(t,e,i,s,n,a){return this.context2D.arc(t,e,i,s,n,a),this}fill(){return this.context2D.fill(),this}stroke(){return this.context2D.stroke(),this}closePath(){return this.context2D.closePath(),this}measureText(t){let e=this.context2D.measureText(t),i=0,s=0;return e.fontBoundingBoxAscent?(i=-e.fontBoundingBoxAscent,s=e.fontBoundingBoxDescent+e.fontBoundingBoxAscent):(i=-e.actualBoundingBoxAscent,s=e.actualBoundingBoxDescent+e.actualBoundingBoxAscent),{x:0,y:i,width:e.width,height:s}}fillText(t,e,i){return this.context2D.fillText(t,e,i),this}save(){return this.context2D.save(),this}restore(){return this.context2D.restore(),this}set fillStyle(t){this.context2D.fillStyle=t}get fillStyle(){return this.context2D.fillStyle}set strokeStyle(t){this.context2D.strokeStyle=t}get strokeStyle(){return this.context2D.strokeStyle}setFont(t,e,i,s){let n=S.validate(t,e,i,s);return this.context2D.font=S.toCSSString(n),this.textHeight=S.convertSizeToPixelValue(n.size),this}getFont(){return this.context2D.font}}function tc(...t){tu.DEBUG&&o("VexFlow.ChordSymbol",t)}class td extends w{constructor(t,e,i,s,n){super(),this.text=t,this.symbolModifier=e,this.xShift=i,this.yShift=s,this.vAlign=n}isSuperscript(){return this.symbolModifier===eU.SUPERSCRIPT}isSubscript(){return this.symbolModifier===eU.SUBSCRIPT}}!function(t){t[t.LEFT=1]="LEFT",t[t.CENTER=2]="CENTER",t[t.RIGHT=3]="RIGHT",t[t.CENTER_STEM=4]="CENTER_STEM"}(eW||(eW={})),function(t){t[t.TOP=1]="TOP",t[t.BOTTOM=2]="BOTTOM"}(eH||(eH={})),function(t){t[t.NONE=1]="NONE",t[t.SUBSCRIPT=2]="SUBSCRIPT",t[t.SUPERSCRIPT=3]="SUPERSCRIPT"}(eU||(eU={}));class tu extends b{static get CATEGORY(){return"ChordSymbol"}static get superSubRatio(){return p.get("ChordSymbol.superSubRatio")}static get spacingBetweenBlocks(){return p.get("ChordSymbol.spacing")}static get superscriptOffset(){return p.get("ChordSymbol.superscriptOffset")}static get subscriptOffset(){return p.get("ChordSymbol.subscriptOffset")}static get minPadding(){return p.get("NoteHead.minPadding")}static format(t,e){if(!t||0===t.length)return!1;let i=0,s=0,n=0,a=0,r=0;for(let o of t){let t=o.checkAttachedNote(),h=1;for(let t=0;t<o.symbolBlocks.length;++t){let e=o.symbolBlocks[t],s=e.isSuperscript(),n=e.isSubscript();if(e.setXShift(i),(s||n)&&(h=2),n&&t>0){let s=o.symbolBlocks[t-1];s.isSuperscript()&&(e.setXShift(i-s.getWidth()-tu.minPadding),e.vAlign=!0,i+=-s.getWidth()-tu.minPadding+(s.getWidth()>e.getWidth()?s.getWidth()-e.getWidth():0))}i+=e.getWidth()+tu.minPadding}if(o.getVertical()===eH.TOP?(o.setTextLine(e.topTextLine),e.topTextLine+=h):(o.setTextLine(e.textLine+1),e.textLine+=h+1),o.getReportWidth()){if(G(t)){let e=t.getGlyphWidth();o.getHorizontal()===eW.RIGHT?(a=Math.max(e,a),s=Math.max(s,i)+tu.minPadding):o.getHorizontal()===eW.LEFT?(r=Math.max(e,r),n=Math.max(n,i)):(s=Math.max(s,i/2)+tu.minPadding,n=Math.max(n,i/2),a=Math.max(e/2,a),r=Math.max(e/2,r))}o.width=i}i=0}let o=Math.min(Math.max(n-r,0),Math.max(n-e.rightShift,0)),h=Math.min(Math.max(s-a,0),Math.max(s-e.leftShift,0));return e.leftShift+=h,e.rightShift+=o,!0}constructor(){super(),this.symbolBlocks=[],this.horizontal=eW.LEFT,this.vertical=eH.TOP,this.reportWidth=!0}get superscriptOffset(){return tu.superscriptOffset*S.convertSizeToPixelValue(this.fontInfo.size)}get subscriptOffset(){return tu.subscriptOffset*S.convertSizeToPixelValue(this.fontInfo.size)}setReportWidth(t){return this.reportWidth=t,this}getReportWidth(){return this.reportWidth}getSymbolBlock(t={}){var e,i;let s=new td(null!=(e=t.text)?e:"",null!=(i=t.symbolModifier)?i:eU.NONE,0,0,!1);if(s.isSubscript()&&s.setYShift(this.subscriptOffset),s.isSuperscript()&&s.setYShift(this.superscriptOffset),s.isSubscript()||s.isSuperscript()){let{family:t,size:e,weight:i,style:n}=this.fontInfo,a=S.scaleSize(e,tu.superSubRatio);s.setFont(t,a,i,n)}else s.setFont(this.fontInfo);return s}addSymbolBlock(t){return this.symbolBlocks.push(this.getSymbolBlock(t)),this}addText(t,e={}){return this.addSymbolBlock(Object.assign(Object.assign({},e),{text:t}))}addTextSuperscript(t){let e=eU.SUPERSCRIPT;return this.addSymbolBlock({text:t,symbolModifier:e})}addTextSubscript(t){let e=eU.SUBSCRIPT;return this.addSymbolBlock({text:t,symbolModifier:e})}addGlyphSuperscript(t){return this.addTextSuperscript(tu.glyphs[t])}addGlyph(t,e={}){return this.addText(tu.glyphs[t],e)}addGlyphOrText(t,e={}){let i="";for(let e=0;e<t.length;++e){let s=t[e],n=tu.glyphs[s];n?i+=n:i+=s}return i.length>0&&this.addText(i,e),this}addLine(t={}){return this.addText("",t)}setVertical(t){return this.vertical="string"==typeof t?tu.VerticalJustifyString[t]:t,this}getVertical(){return this.vertical}setHorizontal(t){return this.horizontal="string"==typeof t?tu.HorizontalJustifyString[t]:t,this}getHorizontal(){return this.horizontal}draw(){let t,e=this.checkContext(),i=this.checkAttachedNote();this.setRendered(),e.openGroup("chordsymbol",this.getAttribute("id"));let s=i.getModifierStartXY(b.Position.ABOVE,this.index);e.setFont(this.fontInfo);let n=i.hasStem(),a=i.checkStave();if(this.vertical===eH.BOTTOM){if(t=a.getYForBottomText(this.textLine+N.TEXT_HEIGHT_OFFSET_HACK),n){let e=i.checkStem().getExtents(),s=a.getSpacingBetweenLines(),n=1===i.getStemDirection()?e.baseY:e.topY;t=Math.max(t,n+s*(this.textLine+2))}}else{let e=Math.min(...i.getYs());if(t=Math.min(a.getYForTopText(this.textLine),e-10),n){let e=i.checkStem().getExtents(),s=a.getSpacingBetweenLines();t=Math.min(t,e.topY-5-s*this.textLine)}}let r=s.x;tc("Rendering ChordSymbol: ",r=this.horizontal===eW.LEFT?s.x:this.horizontal===eW.RIGHT?s.x+this.getWidth():this.horizontal===eW.CENTER?s.x-this.getWidth()/2:i.getStemX()-this.getWidth()/2,t),this.symbolBlocks.forEach(i=>{tc("Rendering Text: ",i.getText(),r+i.getXShift(),t+i.getYShift()),i.setX(r),i.setY(t),i.renderText(e,0,0)}),e.closeGroup()}getBoundingBox(){let t=this.symbolBlocks[0].getBoundingBox();for(let e=1;e<this.symbolBlocks.length;e++)t.mergeWith(this.symbolBlocks[e].getBoundingBox());return t}}tu.DEBUG=!1,tu.HorizontalJustify=eW,tu.HorizontalJustifyString={left:eW.LEFT,right:eW.RIGHT,center:eW.CENTER,centerStem:eW.CENTER_STEM},tu.VerticalJustify=eH,tu.VerticalJustifyString={top:eH.TOP,above:eH.TOP,below:eH.BOTTOM,bottom:eH.BOTTOM},tu.glyphs={diminished:eO.csymDiminished,dim:eO.csymDiminished,halfDiminished:eO.csymHalfDiminished,"+":eO.csymAugmented,augmented:eO.csymAugmented,majorSeventh:eO.csymMajorSeventh,minor:eO.csymMinor,"-":eO.csymMinor,"(":"(",leftParen:"(",")":")",rightParen:")",leftBracket:eO.csymBracketLeftTall,rightBracket:eO.csymBracketRightTall,leftParenTall:"(",rightParenTall:")","/":eO.csymDiagonalArrangementSlash,over:eO.csymDiagonalArrangementSlash,"#":eO.csymAccidentalSharp,b:eO.csymAccidentalFlat},tu.symbolModifiers=eU;class tg extends ti{static get CATEGORY(){return"Clef"}static get types(){let{gClef:t,fClef:e,cClef:i,unpitchedPercussionClef1:s,sixStringTabClef:n}=eO;return{treble:{code:t,line:3},bass:{code:e,line:1},alto:{code:i,line:2},tenor:{code:i,line:1},percussion:{code:s,line:2},soprano:{code:i,line:4},"mezzo-soprano":{code:i,line:3},"baritone-c":{code:i,line:0},"baritone-f":{code:e,line:2},subbass:{code:e,line:0},french:{code:t,line:4},tab:{code:n,line:2.5}}}constructor(t,e,i){super(),this.code=tg.types.treble.code,this.line=tg.types.treble.line,this.size="default",this.type="treble",this.setPosition(eI.BEGIN),this.setType(t,e,i),function(...t){tg.DEBUG&&o("VexFlow.Clef",t)}("Creating clef:",t)}setType(t,e="default",i){return this.type=t,this.code=tg.types[t].code,this.line=tg.types[t].line,this.size=null!=e?e:"default","8va"===i&&(this.code===eO.gClef&&(this.code=eO.gClef8va),this.code===eO.fClef&&(this.code=eO.fClef8va)),"8vb"===i&&(this.code===eO.gClef&&(this.code=eO.gClef8vb),this.code===eO.fClef&&(this.code=eO.fClef8vb)),this.text=this.code,this.fontInfo.size=Math.floor(tg.getPoint(this.size)),this}static getPoint(t){return"default"===t?p.get("fontSize"):2*p.get("fontSize")/3}setStave(t){return this.stave=t,this}draw(){let t=this.checkStave(),e=t.checkContext();this.setRendered(),e.openGroup("clef",this.getAttribute("id")),this.y=t.getYForLine(this.line),this.renderText(e,0,0),e.closeGroup()}}tg.DEBUG=!1;class tp extends te{static get CATEGORY(){return"ClefNote"}constructor(t,e="default",i){super({duration:"b"}),this.setType(t,e,i),this.ignoreTicks=!0}setType(t,e,i){return this.clef=new tg(t,e,i),this.setWidth(this.clef.getWidth()),this}getClef(){return this.clef}preFormat(){return this.preFormatted=!0,this}draw(){let t=this.checkStave(),e=this.checkContext();this.setRendered(),this.clef.setX(this.getAbsoluteX()),this.clef.setY(t.getYForLine(this.clef.line)),this.clef.renderText(e,0,0)}getBoundingBox(){return this.clef.getBoundingBox()}}class tm{static getNextContext(t){let e=t.tContexts,i=e.indexOf(t);if(i+1<e.length)return e[i+1]}constructor(t){var e;this.preFormatted=!1,this.postFormatted=!1,this.tickID=null!=(e=null==t?void 0:t.tickID)?e:0,this.currentTick=new u(0,1),this.maxTicks=new u(0,1),this.maxTickable=void 0,this.minTicks=void 0,this.minTickable=void 0,this.padding=1,this.x=0,this.xBase=0,this.xOffset=0,this.tickables=[],this.tickablesByVoice={},this.notePx=0,this.glyphPx=0,this.leftDisplacedHeadPx=0,this.rightDisplacedHeadPx=0,this.modLeftPx=0,this.modRightPx=0,this.totalLeftPx=0,this.totalRightPx=0,this.tContexts=[],this.width=0,this.formatterMetrics={freedom:{left:0,right:0}}}getTickID(){return this.tickID}getX(){return this.x}setX(t){return this.x=t,this.xBase=t,this.xOffset=0,this}getXBase(){return this.xBase}setXBase(t){this.xBase=t,this.x=t+this.xOffset}getXOffset(){return this.xOffset}setXOffset(t){this.xOffset=t,this.x=this.xBase+t}getWidth(){return this.width+2*this.padding}setPadding(t){return this.padding=t,this}getMaxTicks(){return this.maxTicks}getMinTicks(){return this.minTicks}getMaxTickable(){return this.maxTickable}getMinTickable(){return this.minTickable}getTickables(){return this.tickables}getTickableForVoice(t){return this.tickablesByVoice[t]}getTickablesByVoice(){return this.tickablesByVoice}getCenterAlignedTickables(){return this.tickables.filter(t=>t.isCenterAligned())}getMetrics(){let{width:t,glyphPx:e,notePx:i,leftDisplacedHeadPx:s,rightDisplacedHeadPx:n,modLeftPx:a,modRightPx:r,totalLeftPx:o,totalRightPx:h}=this;return{width:t,glyphPx:e,notePx:i,leftDisplacedHeadPx:s,rightDisplacedHeadPx:n,modLeftPx:a,modRightPx:r,totalLeftPx:o,totalRightPx:h}}getCurrentTick(){return this.currentTick}setCurrentTick(t){this.currentTick=t,this.preFormatted=!1}addTickable(t,e){if(!t)throw new n("BadArgument","Invalid tickable added.");if(!t.shouldIgnoreTicks()){let e=t.getTicks();e.greaterThan(this.maxTicks)&&(this.maxTicks=e.clone(),this.maxTickable=t),void 0===this.minTicks?(this.minTicks=e.clone(),this.minTickable=t):e.lessThan(this.minTicks)&&(this.minTicks=e.clone(),this.minTickable=t)}return t.setTickContext(this),this.tickables.push(t),this.tickablesByVoice[null!=e?e:0]=t,this.preFormatted=!1,this}preFormat(){var t;if(this.preFormatted)return this;for(let e=0;e<this.tickables.length;++e){let i=this.tickables[e];i.preFormat();let s=i.getMetrics();this.leftDisplacedHeadPx=Math.max(this.leftDisplacedHeadPx,s.leftDisplacedHeadPx),this.rightDisplacedHeadPx=Math.max(this.rightDisplacedHeadPx,s.rightDisplacedHeadPx),this.notePx=Math.max(this.notePx,s.notePx),this.glyphPx=Math.max(this.glyphPx,null!=(t=s.glyphWidth)?t:0),this.modLeftPx=Math.max(this.modLeftPx,s.modLeftPx),this.modRightPx=Math.max(this.modRightPx,s.modRightPx),this.totalLeftPx=Math.max(this.totalLeftPx,s.modLeftPx+s.leftDisplacedHeadPx),this.totalRightPx=Math.max(this.totalRightPx,s.modRightPx+s.rightDisplacedHeadPx),this.width=this.notePx+this.totalLeftPx+this.totalRightPx}return this}postFormat(){return this.postFormatted||(this.postFormatted=!0),this}getFormatterMetrics(){return this.formatterMetrics}move(t,e,i){this.setX(this.getX()+t),this.getFormatterMetrics().freedom.left+=t,this.getFormatterMetrics().freedom.right-=t,e&&(e.getFormatterMetrics().freedom.right+=t),i&&(i.getFormatterMetrics().freedom.left-=t)}getDeviationCost(){return d(this.tickables.map(t=>t.getFormatterMetrics().space.deviation))}getAverageDeviationCost(){return this.tickables.length?this.getDeviationCost()/this.tickables.length:0}}class tf extends te{static get CATEGORY(){return"Crescendo"}constructor(t){var e;super(t),this.options={extendLeft:0,extendRight:0,yShift:0},this.decrescendo=!1,this.line=null!=(e=t.line)?e:0,this.height=15}setLine(t){return this.line=t,this}setHeight(t){return this.height=t,this}setDecrescendo(t){return this.decrescendo=t,this}preFormat(){return this.preFormatted=!0,this}draw(){let t=this.checkContext(),e=this.checkStave();this.setRendered();let i=this.getTickContext(),s=tm.getNextContext(i),n=this.getAbsoluteX(),a=s?s.getX():e.getX()+e.getWidth(),r=e.getYForLine(this.line+-3)+1;!function(...t){tf.DEBUG&&o("VexFlow.Crescendo",t)}("Drawing ",this.decrescendo?"decrescendo ":"crescendo ",this.height,"x",n-a),function(t,e){let i=e.beginX,s=e.endX,n=e.y,a=e.height/2;t.beginPath(),e.reverse?(t.moveTo(i,n-a),t.lineTo(s,n),t.lineTo(i,n+a)):(t.moveTo(s,n-a),t.lineTo(i,n),t.lineTo(s,n+a)),t.stroke(),t.closePath()}(t,{beginX:n-this.options.extendLeft,endX:a+this.options.extendRight,y:r+this.options.yShift,height:this.height,reverse:this.decrescendo})}}tf.DEBUG=!1,function(t){t[t.NEAR_HEAD=1]="NEAR_HEAD",t[t.NEAR_TOP=2]="NEAR_TOP"}(eV||(eV={}));class tS extends w{static get CATEGORY(){return"Curve"}static get Position(){return eV}static get PositionString(){return{nearHead:eV.NEAR_HEAD,nearTop:eV.NEAR_TOP}}constructor(t,e,i){super(),this.renderOptions=Object.assign({thickness:2,xShift:0,yShift:10,position:eV.NEAR_HEAD,positionEnd:eV.NEAR_HEAD,invert:!1,cps:[{x:0,y:10},{x:0,y:10}],openingDirection:"auto"},i),this.setNotes(t,e)}setNotes(t,e){if(!t&&!e)throw new n("BadArguments","Curve needs to have either `from` or `to` set.");return this.from=t,this.to=e,this}isPartial(){return!this.from||!this.to}renderCurve(t){var e,i;let s=this.checkContext(),n=this.renderOptions.xShift,a=this.renderOptions.yShift*t.direction,r=t.firstX+n,o=t.firstY+a,h=t.lastX-n,l=t.lastY+a,c=this.renderOptions.thickness,d=this.renderOptions.cps,{x:u,y:g}=d[0],{x:p,y:m}=d[1],f=(h-r)/(d.length+2);s.beginPath(),s.moveTo(r,o),s.bezierCurveTo(r+f+u,o+g*t.direction,h-f+p,l+m*t.direction,h,l),(null==(e=this.style)?void 0:e.lineDash)||s.bezierCurveTo(h-f+p,l+(m+c)*t.direction,r+f+u,o+(g+c)*t.direction,r,o),s.stroke(),s.closePath(),(null==(i=this.style)?void 0:i.lineDash)||s.fill()}draw(){let t,e,i,s;this.checkContext(),this.setRendered();let n=this.from,a=this.to,r=0,o="baseY",h="baseY";function l(t){return"string"==typeof t?tS.PositionString[t]:t}let c=l(this.renderOptions.position),d=l(this.renderOptions.positionEnd);return c===eV.NEAR_TOP&&(o="topY",h="topY"),d===eV.NEAR_HEAD?h="baseY":d===eV.NEAR_TOP&&(h="topY"),n?(t=n.getTieRightX(),r=n.getStemDirection(),i=n.getStemExtents()[o]):(t=a.checkStave().getTieStartX(),i=a.getStemExtents()[o]),a?(e=a.getTieLeftX(),r=a.getStemDirection(),s=a.getStemExtents()[h]):(e=n.checkStave().getTieEndX(),s=n.getStemExtents()[h]),"up"===this.renderOptions.openingDirection&&(r=1),"down"===this.renderOptions.openingDirection&&(r=-1),this.renderCurve({firstX:t,lastX:e,firstY:i,lastY:s,direction:r*(!0===this.renderOptions.invert?-1:1)}),!0}}class tT extends b{static get CATEGORY(){return"Dot"}static getDots(t){return t.getModifiersByType(tT.CATEGORY)}static buildAndAttach(t,e){for(let i of t)if(null==e?void 0:e.all)for(let t=0;t<i.keys.length;t++){let e=new tT;i.addModifier(e,t)}else if((null==e?void 0:e.index)!==void 0){let t=new tT;i.addModifier(t,null==e?void 0:e.index)}else{let t=new tT;i.addModifier(t,0)}}static format(t,e){let i=e.rightShift;if(!t||0===t.length)return!1;let s=[],a={};for(let e=0;e<t.length;++e){let r,o,h=t[e],l=h.getNote();if(I(l)){let t=h.checkIndex();r=l.getKeyProps()[t],o=l.getFirstDotPx()}else if(W(l))r={line:.5},o=i;else throw new n("Internal","Unexpected instance.");let c=l.getAttribute("id");s.push({line:r.line,note:l,noteId:c,dot:h}),a[c]=Math.max(a[c]||o,o)}s.sort((t,e)=>e.line-t.line);let r=i,o=0,h=null,l=null,c=null,d=0;for(let t=0;t<s.length;++t){let{dot:e,note:i,noteId:n,line:u}=s[t];(u!==h||i!==l)&&(r=a[n]),i.isRest()||u===h||(.5===Math.abs(u%1)?d=0:(d=.5,null===l||l.isRest()||null===h||h-u!=.5?u+d===c&&(d=-.5):d=-.5)),i.isRest()?e.dotShiftY+=-d:e.dotShiftY=-d,c=u+d,e.setXShift(r),r+=e.getWidth()+1,o=r>o?r:o,h=u,l=i}return e.rightShift+=o,!0}constructor(){super(),this.position=b.Position.RIGHT,this.setText(eO.augmentationDot),this.dotShiftY=0}setNote(t){return this.note=t,this.font=t.font,this}setDotShiftY(t){return this.dotShiftY=t,this}draw(){let t=this.checkContext(),e=this.checkAttachedNote();this.setRendered();let i=e.checkStave().getSpacingBetweenLines(),s=e.getModifierStartXY(this.position,this.index,{forceFlagRight:!0});W(e)&&(s.y=e.getStemExtents().baseY),this.x=s.x,this.y=s.y+this.dotShiftY*i,this.renderText(t,0,0)}}class tx extends b{static get CATEGORY(){return"FretHandFinger"}static format(t,e){let{leftShift:i,rightShift:s}=e;if(!t||0===t.length)return!1;let n=[],a=null,r=0,o=0;for(let h=0;h<t.length;++h){let l=t[h],c=l.getNote(),d=l.getPosition(),u=l.checkIndex(),g=c.getKeyProps()[u],m=p.get("FretHandFinger.fontSize");if(l.position===eR.ABOVE&&(e.topTextLine+=m/N.STAVE_LINE_DISTANCE+.5),l.position===eR.BELOW&&(e.textLine+=m/N.STAVE_LINE_DISTANCE+.5),c!==a){for(let t=0;t<c.keys.length;++t)0===i&&(r=Math.max(c.getLeftDisplacedHeadPx(),r)),0===s&&(o=Math.max(c.getRightDisplacedHeadPx(),o));a=c}n.push({note:c,num:l,pos:d,line:g.line,shiftL:r,shiftR:o})}n.sort((t,e)=>e.line-t.line);let h=0,l=0,c=0,d=0,u=null,g=null;for(let t=0;t<n.length;++t){let e=0,{note:a,pos:r,num:p,line:m,shiftL:f,shiftR:S}=n[t];(m!==u||a!==g)&&(h=i+f,l=s+S);let T=p.getWidth()+1;r===b.Position.LEFT?(p.setXShift(i+h),c=(e=i+T)>c?e:c):r===b.Position.RIGHT&&(p.setXShift(l),d=(e=o+T)>d?e:d),u=m,g=a}return e.leftShift+=c,e.rightShift+=d,!0}static easyScoreHook({fingerings:t}={},e,i){null==t||t.split(",").map(t=>{let e=t.trim().split("."),s={number:e[0]};return e[1]&&(s.position=e[1]),i.getFactory().Fingering(s)}).map((t,i)=>e.addModifier(t,i))}constructor(t){super(),this.setFretHandFinger(t),this.position=b.Position.LEFT,this.xOffset=0,this.yOffset=0}setFretHandFinger(t){return this.text=t,this}getFretHandFinger(){return this.text}setOffsetX(t){return this.xOffset=t,this}setOffsetY(t){return this.yOffset=t,this}draw(){let t=this.checkContext(),e=this.checkAttachedNote();this.setRendered();let i=e.getModifierStartXY(this.position,this.index),s=i.x+this.xOffset,a=i.y+this.yOffset+5;switch(this.position){case b.Position.ABOVE:s-=4,a-=12;break;case b.Position.BELOW:s-=2,a+=10;break;case b.Position.LEFT:s-=this.width;break;case b.Position.RIGHT:s+=1;break;default:throw new n("InvalidPosition",`The position ${this.position} does not exist`)}this.renderText(t,s,a)}}function tw(...t){tb.DEBUG&&o("VexFlow.Parser",t)}class tb{constructor(t){this.grammar=t,this.line="",this.pos=0,this.errorPos=-1}parse(t){this.line=t,this.pos=0,this.errorPos=-1;let e=this.expect(this.grammar.begin());return e.errorPos=this.errorPos,e}matchFail(t){-1===this.errorPos&&(this.errorPos=this.pos),this.pos=t}matchSuccess(){this.errorPos=-1}matchToken(t,e=!1){let i=e?RegExp("^(("+t+"))"):RegExp("^(("+t+")\\s*)"),s=this.line.slice(this.pos).match(i);return null!==s?{success:!0,matchedString:s[2],incrementPos:s[1].length,pos:this.pos}:{success:!1,pos:this.pos}}expectOne(t,e=!1){let i=[],s=this.pos,n=!0,a=!1;if(e=!0===e||!0===t.maybe,t.expect)for(let e of t.expect){let s=this.pos,r=this.expect(e);if(r.success){if(i.push(r),a=!0,t.or)break}else if(n=!1,!t.or){this.pos=s;break}}let r=t.or&&a||n,o=r||!0===e;return e&&!r&&(this.pos=s),o?this.matchSuccess():this.matchFail(s),{success:o,results:i,numMatches:+!!r}}expectOneOrMore(t,e=!1){let i=[],s=this.pos,n=0,a=!0;do{let e=this.expectOne(t);e.success&&e.results?(n++,i.push(e.results)):a=!1}while(a);let r=n>0||!0===e;return e&&!(n>0)&&(this.pos=s),r?this.matchSuccess():this.matchFail(s),{success:r,results:i,numMatches:n}}expectZeroOrMore(t){return this.expectOneOrMore(t,!0)}expect(t){let e;if(tw("Evaluating rule function:",t),!t)throw new n("Invalid rule function");let i=t.bind(this.grammar)();if(i.token)(e=this.matchToken(i.token,!0===i.noSpace)).success&&(this.pos+=e.incrementPos);else if(i.expect)e=i.oneOrMore?this.expectOneOrMore(i):i.zeroOrMore?this.expectZeroOrMore(i):this.expectOne(i);else throw tw(i),new n("Bad grammar! No `token` or `expect` property "+i);let s=[];return e.matches=s,e.results&&e.results.forEach(t=>s.push(function t(e){return"matchedString"in e?e.matchedString:"results"in e?t(e.results):1===e.length?t(e[0]):0===e.length?null:e.map(t)}(t))),i.run&&e.success&&i.run({matches:s}),e}}function ty(...t){tv.DEBUG&&o("VexFlow.EasyScore",t)}tb.DEBUG=!1;class tC{constructor(t){this.builder=t}begin(){return this.LINE}LINE(){return{expect:[this.PIECE,this.PIECES,this.EOL]}}PIECE(){return{expect:[this.CHORDORNOTE,this.PARAMS],run:()=>this.builder.commitPiece()}}PIECES(){return{expect:[this.COMMA,this.PIECE],zeroOrMore:!0}}PARAMS(){return{expect:[this.DURATION,this.TYPE,this.DOTS,this.OPTS]}}CHORDORNOTE(){return{expect:[this.CHORD,this.SINGLENOTE],or:!0}}CHORD(){return{expect:[this.LPAREN,this.NOTES,this.RPAREN],run:t=>this.builder.addChord(t.matches[1])}}NOTES(){return{expect:[this.NOTE],oneOrMore:!0}}NOTE(){return{expect:[this.NOTENAME,this.ACCIDENTAL,this.OCTAVE]}}SINGLENOTE(){return{expect:[this.NOTENAME,this.ACCIDENTAL,this.OCTAVE],run:t=>{this.builder.addSingleNote(t.matches[0],t.matches[1],t.matches[2])}}}ACCIDENTAL(){return{expect:[this.MICROTONES,this.ACCIDENTALS],maybe:!0,or:!0}}DOTS(){return{expect:[this.DOT],zeroOrMore:!0,run:t=>this.builder.setNoteDots(t.matches)}}TYPE(){return{expect:[this.SLASH,this.MAYBESLASH,this.TYPES],maybe:!0,run:t=>this.builder.setNoteType(t.matches[2])}}DURATION(){return{expect:[this.SLASH,this.DURATIONS],maybe:!0,run:t=>this.builder.setNoteDuration(t.matches[1])}}OPTS(){return{expect:[this.LBRACKET,this.KEYVAL,this.KEYVALS,this.RBRACKET],maybe:!0}}KEYVALS(){return{expect:[this.COMMA,this.KEYVAL],zeroOrMore:!0}}KEYVAL(){return{expect:[this.KEY,this.EQUALS,this.VAL],run:t=>this.builder.addNoteOption(t.matches[0],t.matches[2].slice(1,-1))}}VAL(){return{expect:[this.SVAL,this.DVAL],or:!0}}KEY(){return{token:"[a-zA-Z][a-zA-Z0-9]*"}}DVAL(){return{token:'["][^"]*["]'}}SVAL(){return{token:"['][^']*[']"}}NOTENAME(){return{token:"[a-gA-G]"}}OCTAVE(){return{token:"[0-9]+"}}ACCIDENTALS(){return{token:"bb|b|##|#|n"}}MICROTONES(){return{token:"bbs|bss|bs|db|d|\\+\\+-|\\+-|\\+\\+|\\+|k|o"}}DURATIONS(){return{token:"[0-9whq]+"}}TYPES(){return{token:"[rRsSmMhHgG]"}}LPAREN(){return{token:"[(]"}}RPAREN(){return{token:"[)]"}}COMMA(){return{token:"[,]"}}DOT(){return{token:"[.]"}}SLASH(){return{token:"[/]"}}MAYBESLASH(){return{token:"[/]?"}}EQUALS(){return{token:"[=]"}}LBRACKET(){return{token:"\\["}}RBRACKET(){return{token:"\\]"}}EOL(){return{token:"$"}}}class tk{constructor(t){this.chord=[],this.dots=0,this.options={},this.duration=t}}class tA{constructor(t){this.commitHooks=[],this.factory=t,this.reset()}reset(t){this.options=Object.assign({stem:"auto",clef:"treble"},t),this.elements={notes:[],accidentals:[]},this.rollingDuration="8",this.resetPiece()}getFactory(){return this.factory}getElements(){return this.elements}addCommitHook(t){this.commitHooks.push(t)}resetPiece(){ty("resetPiece"),this.piece=new tk(this.rollingDuration)}setNoteDots(t){ty("setNoteDots:",t),t&&(this.piece.dots=t.length)}setNoteDuration(t){ty("setNoteDuration:",t),this.rollingDuration=this.piece.duration=t||this.rollingDuration}setNoteType(t){ty("setNoteType:",t),t&&(this.piece.type=t)}addNoteOption(t,e){ty("addNoteOption: key:",t,"value:",e),this.piece.options[t]=e}addNote(t,e,i){ty("addNote:",t,e,i),this.piece.chord.push({key:t,accid:e,octave:i})}addSingleNote(t,e,i){ty("addSingleNote:",t,e,i),this.addNote(t,e,i)}addChord(t){ty("startChord"),"object"!=typeof t[0]?this.addSingleNote(t[0]):t.forEach(t=>{t&&this.addNote(...t)}),ty("endChord")}commitPiece(){ty("commitPiece");let{factory:t}=this;if(!t)return;let e=Object.assign(Object.assign({},this.options),this.piece.options),i=r(e.stem,"BadArguments","options.stem is not defined").toLowerCase(),s=r(e.clef,"BadArguments","options.clef is not defined").toLowerCase(),{chord:n,duration:a,dots:o,type:h}=this.piece,l=y.accidentals,c=n.map(t=>{var e;return t.key+(l.includes(null!=(e=t.accid)?e:"")?t.accid:"")+"/"+t.octave}),d="auto"===i,u=(null==h?void 0:h.toLowerCase())==="g"?t.GhostNote({duration:a,dots:o}):t.StaveNote({keys:c,duration:a,dots:o,type:h,clef:s,autoStem:d});d||u.setStemDirection("up"===i?V.UP:V.DOWN);let g=[];n.forEach((e,i)=>{let s=e.accid;if("string"==typeof s){let e=t.Accidental({type:s});u.addModifier(e,i),g.push(e)}else g.push(void 0)});for(let t=0;t<o;t++)tT.buildAndAttach([u],{all:!0});this.commitHooks.forEach(t=>t(e,u,this)),this.elements.notes.push(u),this.elements.accidentals.push(g),this.resetPiece()}}function tB(t,e){void 0!==t.id&&e.setAttribute("id",t.id)}let tE=/\s*,\s*/;function tD(t,e){void 0!==t.class&&t.class.split(tE).forEach(t=>e.addClass(t))}class tv{constructor(t={}){this.defaults={clef:"treble",time:"4/4",stem:"auto"},this.setOptions(t)}set(t){return this.defaults=Object.assign(Object.assign({},this.defaults),t),this}setOptions(t){var e,i;let s=t.factory,n=null!=(e=t.builder)?e:new tA(s);return this.options=Object.assign(Object.assign({commitHooks:[tB,tD,_.easyScoreHook,tx.easyScoreHook],throwOnError:!1},t),{factory:s,builder:n}),this.factory=s,this.builder=n,this.grammar=new tC(this.builder),this.parser=new tb(this.grammar),null==(i=this.options.commitHooks)||i.forEach(t=>this.addCommitHook(t)),this}setContext(t){return this.factory.setContext(t),this}parse(t,e={}){this.builder.reset(e);let i=this.parser.parse(t);if(!i.success&&this.options.throwOnError)throw ty(i),new n("Error parsing line: "+t);return i}beam(t,e){return this.factory.Beam({notes:t,options:e}),t}tuplet(t,e){return this.factory.Tuplet({notes:t,options:e}),t}notes(t,e={}){return e=Object.assign({clef:this.defaults.clef,stem:this.defaults.stem},e),this.parse(t,e),this.builder.getElements().notes}voice(t,e={}){return e=Object.assign({time:this.defaults.time},e),this.factory.Voice(e).addTickables(t)}addCommitHook(t){this.builder.addCommitHook(t)}}tv.DEBUG=!1;class tL extends te{static get CATEGORY(){return"NoteHead"}constructor(t){var e;super(t),this.customGlyph=!1,this.ledger={"":"","":""},this.index=t.index,this.x=t.x||0,this.y=t.y||0,t.noteType&&(this.noteType=t.noteType),this.displaced=t.displaced||!1,this.stemDirection=t.stemDirection||V.UP,this.line=t.line||0,this.glyphProps=te.getGlyphProps(this.duration,this.noteType),r(this.glyphProps,"BadArguments",`No glyph found for duration '${this.duration}' and type '${this.noteType}'`),(this.line>5||this.line<0)&&this.ledger[this.glyphProps.codeHead]&&(this.glyphProps.codeHead=this.ledger[this.glyphProps.codeHead]),this.text=this.glyphProps.codeHead,t.customGlyphCode&&(this.customGlyph=!0,this.text=t.customGlyphCode),this.setStyle(null!=(e=t.style)?e:{}),this.slashed=t.slashed||!1,this.renderOptions=Object.assign({},this.renderOptions)}getWidth(){return this.width}isDisplaced(){return!0===this.displaced}getLine(){return this.line}setLine(t){return this.line=t,this}getAbsoluteX(){let t=this.preFormatted?super.getAbsoluteX():this.x,e=V.WIDTH/2;return t+(this.displaced?(this.width-e)*this.stemDirection:0)}setStave(t){let e=this.getLine();return this.stave=t,this.stave&&(this.setY(this.stave.getYForNote(e)),this.setContext(this.stave.getContext())),this}preFormat(){return this.preFormatted||(this.preFormatted=!0),this}draw(){var t;let e=this.checkContext();this.setRendered(),e.openGroup("notehead",this.getAttribute("id")),function(...t){tL.DEBUG&&o("VexFlow.NoteHead",t)}("Drawing note head '",this.noteType,this.duration,"' at",this.x,this.y),this.x=this.getAbsoluteX(),this.renderText(e,0,0),null==(t=this.parent)||t.drawModifiers(this),e.closeGroup()}}tL.DEBUG=!1;class tN extends w{static get CATEGORY(){return"Flag"}draw(){let t=this.checkContext();this.setRendered(),t.openGroup("flag",this.getAttribute("id")),function(...t){tN.DEBUG&&o("VexFlow.Flag",t)}("Drawing flag '",this.text,"' at",this.x,this.y),this.renderText(t,0,0),t.closeGroup()}}tN.DEBUG=!1;class tF extends te{static get CATEGORY(){return"StemmableNote"}constructor(t){super(t),this.flag=new tN}getStem(){return this.stem}checkStem(){if(!this.stem)throw new n("NoStem","No stem attached to instance");return this.stem}setStem(t){return this.stem=t,this.addChild(t),this}buildStem(){let t=new V;return this.setStem(t),this}buildFlag(){var t,e,i;let{glyphProps:s}=this;if(this.hasFlag()){let n=this.getStemDirection()===V.DOWN?String.fromCodePoint((null!=(e=null==(t=s.codeFlagUp)?void 0:t.codePointAt(0))?e:-1)+1):null!=(i=s.codeFlagUp)?i:eO.null;this.flag.setText(n),this.flag.fontInfo=this.fontInfo}}getBaseCustomNoteHeadGlyphProps(){return this.getStemDirection()===V.DOWN?this.customGlyphs[this.customGlyphs.length-1]:this.customGlyphs[0]}getStemLength(){return V.HEIGHT+this.getStemExtension()}getBeamCount(){let t=this.getGlyphProps();return t?t.beamCount:0}getStemMinimumLength(){let t=N.durationToFraction(this.duration),e=void 0===this.beam,i=1>=t.value()?0:20;switch(this.duration){case"8":case"16":i=e?35:25;break;case"32":i=e?45:35;break;case"64":i=e?50:40;break;case"128":i=e?55:45}return i}getStemDirection(){if(!this.stemDirection)throw new n("NoStem","No stem attached to this note.");return this.stemDirection}setStemDirection(t){if(t||(t=V.UP),t!==V.UP&&t!==V.DOWN)throw new n("BadArgument",`Invalid stem direction: ${t}`);return this.stemDirection=t,this.reset(),this.hasFlag()&&this.buildFlag(),this.beam=void 0,this.stem&&(this.stem.setDirection(t),this.stem.setExtension(this.getStemExtension())),this.preFormatted&&this.preFormat(),this}getStemX(){let t=this.getAbsoluteX()+this.xShift,e=this.getAbsoluteX()+this.xShift+this.getGlyphWidth();return this.stemDirection===V.DOWN?t:e}getCenterGlyphX(){return this.getAbsoluteX()+this.xShift+this.getGlyphWidth()/2}getStemExtension(){let t=this.getGlyphProps(),e=this.flag.getHeight(),i=this.getFontScale();return void 0!==this.stemExtensionOverride?this.stemExtensionOverride:this.beam?t.stemBeamExtension*i:e>V.HEIGHT*i?e-V.HEIGHT*i:0}setStemLength(t){return this.stemExtensionOverride=t-V.HEIGHT,this}getStemExtents(){if(!this.stem)throw new n("NoStem","No stem attached to this note.");return this.stem.getExtents()}getYForTopText(t){let e=this.checkStave();if(!this.hasStem())return e.getYForTopText(t);{let i=this.getStemExtents();if(!i)throw new n("InvalidState","Stem does not have extents.");return Math.min(e.getYForTopText(t),i.topY-this.renderOptions.annotationSpacing*(t+1))}}getYForBottomText(t){let e=this.checkStave();if(!this.hasStem())return e.getYForBottomText(t);{let i=this.getStemExtents();if(!i)throw new n("InvalidState","Stem does not have extents.");return Math.max(e.getYForTopText(t),i.baseY+this.renderOptions.annotationSpacing*t)}}hasFlag(){return void 0!==this.glyphProps.codeFlagUp&&!this.beam&&!this.isRest()}postFormat(){var t;return null==(t=this.beam)||t.postFormat(),this.postFormatted=!0,this}drawStem(t){var e;this.checkContext(),this.setRendered(),this.setStem(new V(t)),null==(e=this.stem)||e.setContext(this.getContext()).drawWithStyle()}}function tR(t,e,i){t.line+=i,t.maxLine+=i,t.minLine+=i,t.note.setKeyLine(0,t.note.getKeyLine(0)+i)}class tO extends tF{static get CATEGORY(){return"StaveNote"}static get LEDGER_LINE_OFFSET(){return 3}static get minNoteheadPadding(){return p.get("NoteHead.minPadding")}static format(t,e){let i,s,a;if(!t||t.length<2)return!1;let r=[];for(let e=0;e<t.length;e++){let i,s=t[e].sortedKeyProps,n=s[0].keyProps.line,a=s[s.length-1].keyProps.line,o=t[e].getStemDirection(),h=t[e].getStemLength()/10,l=t[e].getStemMinimumLength()/10;t[e].isRest()?(i=n+Math.ceil(t[e]._noteHeads[0].getTextMetrics().actualBoundingBoxAscent/N.STAVE_LINE_DISTANCE),a=n-Math.ceil(t[e]._noteHeads[0].getTextMetrics().actualBoundingBoxDescent/N.STAVE_LINE_DISTANCE)):(i=1===o?s[s.length-1].keyProps.line+h:s[s.length-1].keyProps.line,a=1===o?s[0].keyProps.line:s[0].keyProps.line-h),r.push({line:s[0].keyProps.line,maxLine:i,minLine:a,isrest:t[e].isRest(),stemDirection:o,stemMax:h,stemMin:l,voiceShift:t[e].getVoiceShiftWidth(),isDisplaced:t[e].isDisplaced(),note:t[e]})}let o=0,l=[!1,!1,!1];for(let t=0;t<r.length;t++)l[t]=!1!==r[t].note.renderOptions.draw;if(l[0]&&l[1]&&l[2])o=3,i=r[0],s=r[1],a=r[2];else if(l[0]&&l[1])o=2,i=r[0],a=r[1];else if(l[0]&&l[2])o=2,i=r[0],a=r[2];else{if(!l[1]||!l[2])return!0;o=2,i=r[1],a=r[2]}2===o&&-1===i.stemDirection&&1===a.stemDirection&&(i=r[1],a=r[0]);let c=Math.max(i.voiceShift,a.voiceShift),d=0;if(2===o){let t=i.note.hasStem()&&a.note.hasStem()&&i.stemDirection===a.stemDirection?0:.5;if(a.isrest&&i.isrest&&i.note.duration===a.note.duration)a.note.renderOptions.draw=!1;else if(i.minLine<=a.maxLine+t)if(i.isrest)tR(i,a,1);else if(a.isrest)tR(a,i,-1);else{let t=Math.abs(i.line-a.line);if(i.note.hasStem()&&a.note.hasStem()){let e=i.note.sortedKeyProps[0].keyProps.code,s=a.note.sortedKeyProps[a.note.sortedKeyProps.length-1].keyProps.code;!N.UNISON||e!==s||i.note.getModifiers().filter(t=>"Dot"===t.getCategory()&&0===t.getIndex()).length!==a.note.getModifiers().filter(t=>"Dot"===t.getCategory()&&0===t.getIndex()).length||t<1&&t>0||JSON.stringify(i.note.getStyle())!==JSON.stringify(a.note.getStyle())?(d=c+2,i.stemDirection===a.stemDirection?i.note.setXShift(d):a.note.setXShift(d)):i.note.voice!==a.note.voice&&i.stemDirection===a.stemDirection&&(i.line!==a.line?(d=c+2,i.note.setXShift(d)):1===a.stemDirection&&(a.stemDirection=-1,a.note.setStemDirection(-1)))}else t<1?(d=c+2,i.note.duration<a.note.duration?i.note.setXShift(d):a.note.setXShift(d)):i.note.hasStem()?(i.stemDirection=-i.note.getStemDirection(),i.note.setStemDirection(i.stemDirection)):a.note.hasStem()&&(a.stemDirection=-a.note.getStemDirection(),a.note.setStemDirection(a.stemDirection))}return e.rightShift+=d,!0}if(!s)throw new n("InvalidState","noteM not defined.");if(s.isrest&&!i.isrest&&!a.isrest&&(i.minLine<=s.maxLine||s.minLine<=a.maxLine)){if(s.maxLine-s.minLine<i.minLine-a.maxLine){var u=s,g=i,p=a;let t=u.line-h(g.minLine,p.maxLine);u.note.setKeyLine(0,u.note.getKeyLine(0)-t),u.line-=t,u.maxLine-=t,u.minLine-=t}else d=c+2,s.note.setXShift(d),!1===a.note.hasBeam()&&(a.stemDirection=-1,a.note.setStemDirection(-1)),i.minLine<=a.maxLine&&!1===i.note.hasBeam()&&(i.stemDirection=1,i.note.setStemDirection(1));return e.rightShift+=d,!0}return i.isrest&&s.isrest&&a.isrest?(i.note.renderOptions.draw=!1,a.note.renderOptions.draw=!1):(s.isrest&&i.isrest&&s.minLine<=a.maxLine&&(s.note.renderOptions.draw=!1),s.isrest&&a.isrest&&i.minLine<=s.maxLine&&(s.note.renderOptions.draw=!1),i.isrest&&i.minLine<=s.maxLine&&tR(i,s,1),a.isrest&&s.minLine<=a.maxLine&&tR(a,s,-1),(i.minLine<=s.maxLine+.5||s.minLine<=a.maxLine)&&(d=c+2,s.note.setXShift(d),!1===a.note.hasBeam()&&(a.stemDirection=-1,a.note.setStemDirection(-1)),i.minLine<=a.maxLine&&!1===i.note.hasBeam()&&(i.stemDirection=1,i.note.setStemDirection(1)))),e.rightShift+=d,!0}static postFormat(t){return!!t&&(t.forEach(t=>t.postFormat()),!0)}constructor(t){var e,i,s;super(t),this.minLine=0,this.maxLine=0,this.sortedKeyProps=[],this.ledgerLineStyle={},this.clef=null!=(e=t.clef)?e:"treble",this.octaveShift=null!=(i=t.octaveShift)?i:0,this.glyphProps=te.getGlyphProps(this.duration,this.noteType),r(this.glyphProps,"BadArguments",`No glyph found for duration '${this.duration}' and type '${this.noteType}'`),this.displaced=!1,this.dotShiftY=0,this.useDefaultHeadX=!1,this._noteHeads=[],this.modifiers=[],this.renderOptions=Object.assign(Object.assign({},this.renderOptions),{strokePx:t.strokePx||tO.LEDGER_LINE_OFFSET}),this.calculateKeyProps(),this.buildStem(),t.autoStem?this.autoStem():this.setStemDirection(null!=(s=t.stemDirection)?s:V.UP),this.reset(),this.buildFlag()}reset(){super.reset();let t=this._noteHeads.map(t=>t.getStyle());this.buildNoteHeads(),this._noteHeads.forEach((e,i)=>{let s=t[i];s&&e.setStyle(s)});let e=this.stave;return e&&this.setStave(e),this.calcNoteDisplacements(),this}setBeam(t){return this.beam=t,this.calcNoteDisplacements(),this.stem&&this.stem.setExtension(this.getStemExtension()),this}buildStem(){return this.setStem(new V({hide:this.isRest()})),this}buildNoteHeads(){let t,e,i,s,n;this._noteHeads=[];let a=this.getStemDirection(),r=this.getKeys(),o=!1;a===V.UP?(t=0,e=r.length,i=1):(t=r.length-1,e=-1,i=-1);for(let r=t;r!==e;r+=i){let t=this.sortedKeyProps[r].keyProps,e=t.line;void 0===s?s=e:0===(n=Math.abs(s-e))||.5===n?o=!o:(o=!1,this.useDefaultHeadX=!0),s=e;let i=new tL({duration:this.duration,noteType:this.noteType,displaced:o,stemDirection:a,customGlyphCode:t.code,line:t.line});i.fontInfo=this.fontInfo,this.addChild(i),this._noteHeads[this.sortedKeyProps[r].index]=i}return this._noteHeads}autoStem(){this.setStemDirection(this.calculateOptimalStemDirection())}calculateOptimalStemDirection(){return this.minLine=this.sortedKeyProps[0].keyProps.line,this.maxLine=this.sortedKeyProps[this.keyProps.length-1].keyProps.line,(this.minLine+this.maxLine)/2<3?V.UP:V.DOWN}calculateKeyProps(){var t;let e;for(let i=0;i<this.keys.length;++i){let s=this.keys[i],a={octaveShift:null!=(t=this.octaveShift)?t:0,duration:this.duration},r=N.keyProperties(s,this.clef,this.noteType,a);if(!r)throw new n("BadArguments",`Invalid key for note properties: ${s}`);"R"===r.key&&("1"===this.duration||"w"===this.duration?r.line=4:r.line=3);let o=r.line;void 0===e?e=o:1>Math.abs(e-o)&&(this.displaced=!0,r.displaced=!0,this.keyProps.length>0&&(this.keyProps[i-1].displaced=!0)),e=o,this.keyProps.push(r)}this.keyProps.forEach((t,e)=>{this.sortedKeyProps.push({keyProps:t,index:e})}),this.sortedKeyProps.sort((t,e)=>t.keyProps.line-e.keyProps.line)}getBoundingBox(){let t=new f(this.getAbsoluteX(),this.ys[0],0,0);this._noteHeads.forEach(e=>{t.mergeWith(e.getBoundingBox())});let{yTop:e,yBottom:i}=this.getNoteHeadBounds();if(!this.isRest()&&this.hasStem()){let s=this.stem.getHeight(),n=this.getStemDirection()===V.DOWN?e-s-this.flag.getTextMetrics().actualBoundingBoxDescent:i-s+this.flag.getTextMetrics().actualBoundingBoxAscent;t.mergeWith(new f(this.getAbsoluteX(),n,0,0))}if(this.hasFlag()){let e=this.flag.getBoundingBox();t.mergeWith(e)}for(let e=0;e<this.modifiers.length;e++)t.mergeWith(this.modifiers[e].getBoundingBox());return t}getLineNumber(t){if(!this.keyProps.length)throw new n("NoKeyProps","Can't get bottom note line, because note is not initialized properly.");let e=this.keyProps[0].line;for(let i=0;i<this.keyProps.length;i++){let s=this.keyProps[i].line;t?s>e&&(e=s):s<e&&(e=s)}return e}isRest(){let t=this.glyphProps.codeHead;return t>=""&&t<=""}isChord(){return!this.isRest()&&this.keys.length>1}hasStem(){return this.glyphProps.stem}hasFlag(){return super.hasFlag()&&!this.isRest()}getStemX(){return"r"===this.noteType?this.getCenterGlyphX():super.getStemX()+(this.stemDirection?-(V.WIDTH/(2*this.stemDirection)):0)}getYForTopText(t){let e=this.getStemExtents();return Math.min(this.checkStave().getYForTopText(t),e.topY-this.renderOptions.annotationSpacing*(t+1))}getYForBottomText(t){let e=this.getStemExtents();return Math.max(this.checkStave().getYForTopText(t),e.baseY+this.renderOptions.annotationSpacing*t)}setStave(t){super.setStave(t);let e=this._noteHeads.map(e=>(e.setStave(t),e.getY()));if(this.setYs(e),this.stem){let{yTop:t,yBottom:e}=this.getNoteHeadBounds();this.stem.setYBounds(t,e)}return this}isDisplaced(){return this.displaced}setNoteDisplaced(t){return this.displaced=t,this}getTieRightX(){let t=this.getAbsoluteX();return t+=this.getGlyphWidth()+this.xShift+this.rightDisplacedHeadPx,this.modifierContext&&(t+=this.modifierContext.getRightShift()),t}getTieLeftX(){let t=this.getAbsoluteX();return t+(this.xShift-this.leftDisplacedHeadPx)}getLineForRest(){let t=this.keyProps[0].line;if(this.keyProps.length>1){let e=this.keyProps[this.keyProps.length-1].line;t=h(Math.max(t,e),Math.min(t,e))}return t}getModifierStartXY(t,e,i={}){if(!this.preFormatted)throw new n("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");if(0===this.ys.length)throw new n("NoYValues","No Y-Values calculated for this note.");let{ABOVE:s,BELOW:a,LEFT:r,RIGHT:o}=b.Position,h=0;if(t===r)h=-2;else if(t===o)h=this.getGlyphWidth()+this.xShift+2,this.stemDirection===V.UP&&this.hasFlag()&&(i.forceFlagRight||e===(this.getStemDirection()===V.UP?this.keyProps.length-1:0))&&(h+=this.flag.getWidth());else(t===a||t===s)&&(h=this.getGlyphWidth()/2);let l=0;switch(this._noteHeads[e].getText()){case eO.restDoubleWhole:case eO.restWhole:l+=.5;break;case eO.restHalf:case eO.restQuarter:case eO.rest8th:case eO.rest16th:l-=.5;break;case eO.rest32nd:case eO.rest64th:l-=1.5;break;case eO.rest128th:l-=2.5}return{x:this.getAbsoluteX()+h,y:this.ys[e]+l*this.checkStave().getSpacingBetweenLines()}}setStyle(t){return super.setGroupStyle(t)}setStemStyle(t){let e=this.getStem();return e&&e.setStyle(t),this}getStemStyle(){var t;return null==(t=this.stem)?void 0:t.getStyle()}setLedgerLineStyle(t){this.ledgerLineStyle=t}getLedgerLineStyle(){return this.ledgerLineStyle}setFlagStyle(t){this.flag.setStyle(t)}getFlagStyle(){return this.flag.getStyle()}getGlyphWidth(){return this.noteHeads[0].getWidth()}setKeyStyle(t,e){return this._noteHeads[t].setStyle(e),this}setKeyLine(t,e){return this.keyProps[t].line=e,this.reset(),this}getKeyLine(t){return this.keyProps[t].line}getVoiceShiftWidth(){return this.getGlyphWidth()*(this.displaced?2:1)}calcNoteDisplacements(){this.setLeftDisplacedHeadPx(this.displaced&&this.stemDirection===V.DOWN?this.getGlyphWidth():0),this.setRightDisplacedHeadPx(!this.hasFlag()&&this.displaced&&this.stemDirection===V.UP?this.getGlyphWidth():0)}preFormat(){if(this.preFormatted)return;let t=0;this.modifierContext&&(this.modifierContext.preFormat(),0===this.modifierContext.getWidth()&&(t=tO.minNoteheadPadding));let e=this.getGlyphWidth()+this.leftDisplacedHeadPx+this.rightDisplacedHeadPx+t;this.shouldDrawFlag()&&this.stemDirection===V.UP&&(e+=this.getGlyphWidth()),this.setWidth(e),this.preFormatted=!0}getNoteHeadBounds(){let t,e,i,s,n=Infinity,a=-1/0,r=this.checkStave().getNumLines(),o=1,h=r,l=1;return this._noteHeads.forEach(c=>{let d=c.getLine(),u=c.getY();n=Math.min(u,n),a=Math.max(u,a),void 0===e&&c.isDisplaced()&&(e=c.getAbsoluteX()),void 0!==t||c.isDisplaced()||(t=c.getAbsoluteX()),r=Math.max(d,r),o=Math.min(d,o),c.isDisplaced()?(i=void 0===i?d:Math.max(d,i),s=void 0===s?d:Math.min(d,s)):(h=Math.max(d,h),l=Math.min(d,l))},this),{yTop:n,yBottom:a,displacedX:e,nonDisplacedX:t,highestLine:r,lowestLine:o,highestDisplacedLine:i,lowestDisplacedLine:s,highestNonDisplacedLine:h,lowestNonDisplacedLine:l}}getNoteHeadBeginX(){return this.getAbsoluteX()+this.xShift}getNoteHeadEndX(){return this.getNoteHeadBeginX()+this.getGlyphWidth()}get noteHeads(){return this._noteHeads.slice()}drawLedgerLines(){let t=this.checkStave(),{renderOptions:{strokePx:e}}=this,i=this.checkContext(),s=this.getGlyphWidth()+2*e,a=2*(this.getGlyphWidth()+e)-V.WIDTH/2;if(this.isRest())return;if(!i)throw new n("NoCanvasContext","Can't draw without a canvas context.");let{highestLine:r,lowestLine:o,highestDisplacedLine:h,highestNonDisplacedLine:l,lowestDisplacedLine:c,lowestNonDisplacedLine:d,displacedX:u,nonDisplacedX:g}=this.getNoteHeadBounds();if(r<6&&o>0)return;let p=Math.min(null!=u?u:0,null!=g?g:0),m=(t,n,r)=>{let o;o=r&&n?p-e:n?(null!=g?g:0)-e:(null!=u?u:0)-e,i.beginPath(),i.moveTo(o,t),i.lineTo(o+(n&&r?a:s),t),i.stroke()},f=Object.assign(Object.assign({},t.getDefaultLedgerLineStyle()),this.getLedgerLineStyle());i.save(),this.applyStyle(i,f);for(let e=6;e<=r;++e){let i=void 0!==g&&e<=l,s=void 0!==h&&e<=h;m(t.getYForNote(e),i,s)}for(let e=0;e>=o;--e){let i=void 0!==g&&e>=d,s=void 0!==c&&e>=c;m(t.getYForNote(e),i,s)}i.restore()}drawModifiers(t){let e=this.checkContext();for(let i=0;i<this.modifiers.length;i++){let s=this.modifiers[i],n=s.checkIndex();this._noteHeads[n]===t&&(s.setContext(e),s.drawWithStyle())}}shouldDrawFlag(){let t=void 0!==this.stem,e=void 0!==this.glyphProps.codeFlagUp,i=void 0===this.beam;return t&&e&&i&&!this.isRest()}drawFlag(){let t=this.checkContext();if(!t)throw new n("NoCanvasContext","Can't draw without a canvas context.");if(this.shouldDrawFlag()){let{yTop:e,yBottom:i}=this.getNoteHeadBounds(),s=this.stem.getHeight(),n=this.getStemX()-N.STEM_WIDTH/2,a=this.getStemDirection()===V.DOWN?e-s-this.flag.getTextMetrics().actualBoundingBoxDescent:i-s+this.flag.getTextMetrics().actualBoundingBoxAscent;this.flag.setContext(t).setX(n).setY(a).drawWithStyle()}}drawNoteHeads(){let t=this.checkContext();this._noteHeads.forEach(e=>{e.setContext(t).drawWithStyle()})}drawStem(t){let e=this.checkContext();t&&this.setStem(new V(t)),this.shouldDrawFlag()&&this.stem&&this.stem.adjustHeightForFlag(),this.stem&&this.stem.setContext(e).drawWithStyle()}getStemExtension(){let t=super.getStemExtension();if(!this.glyphProps.stem)return t;let e=this.getStemDirection();if(e!==this.calculateOptimalStemDirection())return t;let i=(e===V.UP?3-this.maxLine:this.minLine-3)-3.5;if(i<=0)return t;let s=this.getStave(),n=10;return void 0!==s&&(n=s.getSpacingBetweenLines()),t+i*n}draw(){if(!1===this.renderOptions.draw)return;if(0===this.ys.length)throw new n("NoYValues","Can't draw note without Y values.");let t=this.checkContext(),e=this.getNoteHeadBeginX(),i=this.hasStem()&&!this.beam;if(this._noteHeads.forEach(t=>t.setX(e)),this.stem){let t=this.getStemX();this.stem.setNoteHeadXBounds(t,t)}!function(...t){tO.DEBUG&&o("VexFlow.StaveNote",t)}("Rendering ",this.isChord()?"chord :":"note :",this.keys),t.openGroup("stavenote",this.getAttribute("id")),this.drawLedgerLines(),i&&this.drawStem(),this.drawNoteHeads(),this.drawFlag();let s=this.getBoundingBox();t.pointerRect(s.getX(),s.getY(),s.getW(),s.getH()),t.closeGroup(),this.setRendered()}}tO.DEBUG=!1;class tP extends w{static get CATEGORY(){return"StaveTie"}constructor(t,e=""){super(),this.setNotes(t),this.text=e,this.renderOptions={cp1:8,cp2:12,shortTieCutoff:10,cp1Short:2,cp2Short:8,textShiftX:0,firstXShift:0,lastXShift:0,yShift:7,tieSpacing:0}}getDirection(){return void 0!==this.direction&&null!==this.direction?this.direction:this.notes.lastNote?this.notes.lastNote.getStemDirection():this.notes.firstNote?this.notes.firstNote.getStemDirection():0}setDirection(t){return this.direction=t,this}setNotes(t){if(!t.firstNote&&!t.lastNote)throw new n("BadArguments","Tie needs to have either firstNote or lastNote set.");if(t.firstIndexes||(t.firstIndexes=[0]),t.lastIndexes||(t.lastIndexes=[0]),t.firstIndexes.length!==t.lastIndexes.length)throw new n("BadArguments","Tied notes must have same number of indexes.");return this.notes=t,this}isPartial(){return!this.notes.firstNote||!this.notes.lastNote}renderTie(t){if(0===t.firstYs.length||0===t.lastYs.length)throw new n("BadArguments","No Y-values to render");let e=this.checkContext(),i=this.renderOptions.cp1,s=this.renderOptions.cp2;Math.abs(t.lastX-t.firstX)<this.renderOptions.shortTieCutoff&&(i=this.renderOptions.cp1Short,s=this.renderOptions.cp2Short);let a=this.renderOptions.firstXShift,r=this.renderOptions.lastXShift,o=this.renderOptions.yShift*t.direction,h=this.notes.firstIndexes,l=this.notes.lastIndexes;e.openGroup("stavetie",this.getAttribute("id"));for(let c=0;c<h.length;++c){let d=(t.lastX+r+(t.firstX+a))/2,u=t.firstYs[h[c]]+o,g=t.lastYs[l[c]]+o;if(isNaN(u)||isNaN(g))throw new n("BadArguments","Bad indexes for tie rendering.");let p=(u+g)/2+i*t.direction,m=(u+g)/2+s*t.direction;e.beginPath(),e.moveTo(t.firstX+a,u),e.quadraticCurveTo(d,p,t.lastX+r,g),e.quadraticCurveTo(d,m,t.firstX+a,u),e.closePath(),e.fill()}e.closeGroup()}renderTieText(t,e){var i,s,n;let a=this.checkContext(),r=(t+e)/2;r-=a.measureText(this.text).width/2;let o=null!=(s=null==(i=this.notes.firstNote)?void 0:i.checkStave())?s:null==(n=this.notes.lastNote)?void 0:n.checkStave();o&&(a.setFont(this.fontInfo),a.fillText(this.text,r+this.renderOptions.textShiftX,o.getYForTopText()-1))}getNotes(){return this.notes}getFirstX(){return this.notes.firstNote?this.notes.firstNote.getTieRightX()+this.renderOptions.tieSpacing:this.notes.lastNote?this.notes.lastNote.checkStave().getTieStartX():0}getLastX(){return this.notes.lastNote?this.notes.lastNote.getTieLeftX()+this.renderOptions.tieSpacing:this.notes.firstNote?this.notes.firstNote.checkStave().getTieEndX():0}getFirstYs(){return this.notes.firstNote?this.notes.firstNote.getYs():this.notes.lastNote?this.notes.lastNote.getYs():[0]}getLastYs(){return this.notes.lastNote?this.notes.lastNote.getYs():this.notes.firstNote?this.notes.firstNote.getYs():[0]}synchronizeIndexes(){return this.notes.firstNote&&this.notes.lastNote?void 0:this.notes.firstNote||this.notes.lastNote?void(this.notes.firstNote?this.notes.lastIndexes=this.notes.firstIndexes:this.notes.firstIndexes=this.notes.lastIndexes):void 0}draw(){this.checkContext(),this.setRendered(),this.synchronizeIndexes();let t=this.getFirstX(),e=this.getLastX();return this.renderTie({firstX:t,lastX:e,firstYs:this.getFirstYs(),lastYs:this.getLastYs(),direction:this.getDirection()}),this.renderTieText(t,e),!0}}class tM extends tP{static get CATEGORY(){return"TabTie"}static createHammeron(t){return new tM(t,"H")}static createPulloff(t){return new tM(t,"P")}constructor(t,e){super(t,e),this.renderOptions.cp1=9,this.renderOptions.cp2=11,this.renderOptions.yShift=3,this.direction=-1}}!function(t){t[t.STRICT=1]="STRICT",t[t.SOFT=2]="SOFT",t[t.FULL=3]="FULL"}(eY||(eY={}));class tI extends w{static get CATEGORY(){return"Voice"}static get Mode(){return eY}constructor(t){let e;if(super(),this.resolutionMultiplier=1,this.mode=eY.STRICT,this.preFormatted=!1,this.ticksUsed=new u(0,1),this.largestTickWidth=0,this.tickables=[],this.options={softmaxFactor:N.SOFTMAX_FACTOR},"string"==typeof t){let i=t.match(/(\d+)\/(\d+)/);i&&(e={numBeats:parseInt(i[1]),beatValue:parseInt(i[2])})}else e=t;this.time=Object.assign({numBeats:4,beatValue:4,resolution:N.RESOLUTION},e),this.totalTicks=new u(this.time.numBeats*(this.time.resolution/this.time.beatValue),1),this.smallestTickCount=this.totalTicks.clone()}getTotalTicks(){return this.totalTicks}getTicksUsed(){return this.ticksUsed}getLargestTickWidth(){return this.largestTickWidth}getSmallestTickCount(){return this.smallestTickCount}getTickables(){return this.tickables}getMode(){return this.mode}setMode(t){return this.mode=t,this}getResolutionMultiplier(){return this.resolutionMultiplier}getActualResolution(){return this.resolutionMultiplier*this.time.resolution}setStave(t){return this.stave=t,this}getStave(){return this.stave}getBoundingBox(){let t=this.tickables[0].getBoundingBox();for(let e=1;e<this.tickables.length;++e){let i=this.tickables[e];!i.getStave()&&this.stave&&i.setStave(this.stave);let s=i.getBoundingBox();t.mergeWith(s)}return t}setStrict(t){return this.mode=t?eY.STRICT:eY.SOFT,this}isComplete(){return this.mode!==eY.STRICT&&this.mode!==eY.FULL||this.ticksUsed.equals(this.totalTicks)}setSoftmaxFactor(t){return this.options.softmaxFactor=t,this.expTicksUsed=0,this}reCalculateExpTicksUsed(){let t=this.ticksUsed.value(),e=e=>Math.pow(this.options.softmaxFactor,e.getTicks().value()/t);return this.expTicksUsed=d(this.tickables.map(e)),this.expTicksUsed}softmax(t){let e;this.expTicksUsed||(this.expTicksUsed=this.reCalculateExpTicksUsed());let i=this.ticksUsed.value();return e=t,Math.pow(this.options.softmaxFactor,e/i)/this.expTicksUsed}addTickable(t){if(!t.shouldIgnoreTicks()){let e=t.getTicks();if(this.ticksUsed.add(e),this.expTicksUsed=0,(this.mode===eY.STRICT||this.mode===eY.FULL)&&this.ticksUsed.greaterThan(this.totalTicks))throw this.ticksUsed.subtract(e),new n("BadArgument","Too many ticks.");e.lessThan(this.smallestTickCount)&&(this.smallestTickCount=e.clone()),this.resolutionMultiplier=this.ticksUsed.denominator,this.totalTicks.add(0,this.ticksUsed.denominator)}return this.tickables.push(t),t.setVoice(this),this}addTickables(t){for(let e=0;e<t.length;++e)this.addTickable(t[e]);return this}preFormat(){if(this.preFormatted)return this;let t=this.checkStave();return this.tickables.forEach(e=>{e.getStave()||e.setStave(t)}),this.preFormatted=!0,this}checkStave(){return r(this.stave,"NoStave","No stave attached to instance.")}draw(t=this.checkContext(),e){e=null!=e?e:this.stave,this.setRendered();for(let i=0;i<this.tickables.length;++i){let s=this.tickables[i];e&&s.setStave(e),r(s.getStave(),"MissingStave","The voice cannot draw tickables without staves."),s.setContext(t),s.drawWithStyle()}}}class tG extends b{static get CATEGORY(){return"GraceNoteGroup"}static format(t,e){let i;if(!t||0===t.length)return!1;let s=[],n=null,a=0;for(let e=0;e<t.length;++e){let i=t[e],r=i.getNote(),o=I(r),h=4*!!o;if(o&&r!==n){for(let t=0;t<r.keys.length;++t)a=Math.max(r.getLeftDisplacedHeadPx(),a);n=r}s.push({shift:a,gracenoteGroup:i,spacing:h})}let r=s[0].shift,o=!1,h=!1;for(let t=0;t<s.length;++t){let e=s[t].gracenoteGroup;e.position===b.Position.RIGHT?o=!0:h=!0,e.preFormat(),r=Math.max(i=e.getWidth()+s[t].spacing,r)}for(let t=0;t<s.length;++t){let e=s[t].gracenoteGroup;i=e.getWidth()+s[t].spacing,e.setSpacingFromNextModifier(r-Math.min(i,r)+tO.minNoteheadPadding)}return o&&(e.rightShift+=r),h&&(e.leftShift+=r),!0}constructor(t,e){return super(),this.preFormatted=!1,this.position=b.Position.LEFT,this.graceNotes=t,this.width=0,this.showSlur=e,this.slur=void 0,this.voice=new tI({numBeats:4,beatValue:4,resolution:N.RESOLUTION}).setStrict(!1),this.renderOptions={slurYShift:0},this.beams=[],this.voice.addTickables(this.graceNotes),this}preFormat(){this.preFormatted||(this.formatter||(this.formatter=new ee),this.formatter.joinVoices([this.voice]).format([this.voice],0,{}),this.setWidth(this.formatter.getMinTotalWidth()),this.preFormatted=!0)}beamNotes(t){if((t=t||this.graceNotes).length>1){let e=new tr(t);e.renderOptions.beamWidth=3,e.renderOptions.partialBeamLength=4,this.beams.push(e)}return this}setWidth(t){return this.width=t,this}getWidth(){return this.width+tO.minNoteheadPadding}getGraceNotes(){return this.graceNotes}draw(){let t=this.checkContext(),e=this.checkAttachedNote();if(this.setRendered(),!function(...t){tG.DEBUG&&o("VexFlow.GraceNoteGroup",t)}("Drawing grace note group for:",e),this.alignSubNotesWithNote(this.getGraceNotes(),e,this.position),this.graceNotes.forEach(e=>e.setContext(t).drawWithStyle()),this.beams.forEach(e=>e.setContext(t).drawWithStyle()),this.showSlur){let i=I(e),s=i?tP:tM;this.slur=new s({lastNote:this.graceNotes[0],firstNote:e,firstIndexes:[0],lastIndexes:[0]}),this.slur.renderOptions.cp2=12,this.slur.renderOptions.yShift=(i?7:5)+this.renderOptions.slurYShift,this.slur.setContext(t).drawWithStyle()}}}tG.DEBUG=!1;class tW extends b{static get CATEGORY(){return"NoteSubGroup"}static format(t,e){if(!t||0===t.length)return!1;let i=0;for(let e=0;e<t.length;++e){let s=t[e];s.preFormat(),i+=s.getWidth()}return e.leftShift+=i,!0}constructor(t){super(),this.preFormatted=!1,this.position=b.Position.LEFT,this.subNotes=t,this.subNotes.forEach(t=>{t.setIgnoreTicks(!1)}),this.width=0,this.formatter=new ee,this.voice=new tI({numBeats:4,beatValue:4,resolution:N.RESOLUTION}).setStrict(!1),this.voice.addTickables(this.subNotes)}preFormat(){this.preFormatted||(this.formatter.joinVoices([this.voice]).format([this.voice],0),this.setWidth(this.formatter.getMinTotalWidth()),this.preFormatted=!0)}setWidth(t){return this.width=t,this}getWidth(){return this.width}draw(){let t=this.checkContext(),e=this.checkAttachedNote();this.setRendered(),this.alignSubNotesWithNote(this.subNotes,e),this.subNotes.forEach(e=>e.setContext(t).drawWithStyle())}}class tH extends b{static get CATEGORY(){return"Ornament"}static get minPadding(){return p.get("NoteHead.minPadding")}static format(t,e){var i,s;if(!t||0===t.length)return!1;let n=0,a=e.rightShift,r=e.leftShift;for(let o=0;o<t.length;++o){let h=t[o];if(h.position===eR.RIGHT)h.xShift+=a+2,a+=h.width+tH.minPadding;else if(h.position===eR.LEFT)h.xShift-=r+h.width+2,r+=h.width+tH.minPadding;else if(h.position===eR.ABOVE){n=Math.max(h.getWidth(),n);let t=h.getNote(),a=t.getLineNumber(!0)+e.topTextLine,r=t.getStem();r&&t.getStemDirection()===V.UP&&(a+=Math.abs(r.getHeight())/N.STAVE_LINE_DISTANCE);let o=null!=(s=null==(i=t.getStave())?void 0:i.getNumLines())?s:0;a<o&&(e.topTextLine+=o-a),h.setTextLine(e.topTextLine),e.topTextLine+=2}else n=Math.max(h.getWidth(),n),h.setTextLine(e.textLine),e.textLine+=2}return e.leftShift=r+n/2,e.rightShift=a+n/2,!0}static get ornamentNoteTransition(){return["flip","jazzTurn","smear"]}static get ornamentAttack(){return["scoop"]}static get ornamentAlignWithNoteHead(){return["doit","fall","fallLong","doitLong","scoop"]}static get ornamentRelease(){return["doit","fall","fallLong","doitLong","jazzTurn","smear","flip"]}static get ornamentLeft(){return["scoop"]}static get ornamentRight(){return["doit","fall","fallLong","doitLong"]}static get ornamentYShift(){return["fallLong"]}static get ornamentArticulation(){return["bend","plungerClosed","plungerOpen"]}constructor(t){super(),this.position=eR.ABOVE,tH.ornamentRight.indexOf(t)>=0&&(this.position=eR.RIGHT),tH.ornamentLeft.indexOf(t)>=0&&(this.position=eR.LEFT),this.type=t,this.delayed=!1,this.renderOptions={accidentalLowerPadding:3,accidentalUpperPadding:3},this.adjustForStemDirection=!1,this.ornamentAlignWithNoteHead=tH.ornamentAlignWithNoteHead.indexOf(this.type)>=0,tH.ornamentNoteTransition.indexOf(this.type)>=0&&(this.delayed=!0),this.text=N.ornamentCodes(this.type)}setNote(t){return super.setNote(t),tH.ornamentArticulation.indexOf(this.type)>=0&&(t.getLineNumber()>=3?this.position=b.Position.ABOVE:this.position=b.Position.BELOW),this}setDelayed(t){return this.delayed=t,this}setUpperAccidental(t){return this.accidentalUpper=new w,this.accidentalUpper.setText(N.accidentalCodes(t)),this}setLowerAccidental(t){return this.accidentalLower=new w,this.accidentalLower.setText(N.accidentalCodes(t)),this}draw(){let t=this.checkContext(),e=this.checkAttachedNote();this.setRendered();let i=e.checkStave();t.openGroup("ornament",this.getAttribute("id"));let s=e.getModifierStartXY(this.position,this.index),n=s.x,a=i.getSpacingBetweenLines(),r=Z(e,this.position),h=this.ornamentAlignWithNoteHead?s.y:0;if(this.position===eR.ABOVE&&(h=j(e,this.textLine)-(this.textLine+r)*a),this.position===eR.BELOW&&(h=K(e,this.textLine)+(this.textLine+r+1.5)*a),this.delayed){let t=0,s=e.getTickContext().getX();if(void 0!==this.delayXShift)t=this.delayXShift;else{let a=e.getVoice().getTickables(),r=a.indexOf(e),o=r+1<a.length?a[r+1].checkTickContext():void 0;o?t+=(o.getX()-s)*.5:t+=(i.getX()+i.getWidth()-n)*.5,this.delayXShift=t}n+=t}!function(...t){tH.DEBUG&&o("VexFlow.Ornament",t)}("Rendering ornament: ",this.text.charCodeAt(0),n,h),this.accidentalLower&&(this.accidentalLower.renderText(t,n+this.xShift-.5*this.accidentalLower.getWidth(),h+this.yShift-this.accidentalLower.getTextMetrics().actualBoundingBoxDescent),h-=this.accidentalLower.getHeight()+this.renderOptions.accidentalLowerPadding),tH.ornamentYShift.indexOf(this.type)>=0&&(this.yShift+=this.getHeight()),this.x=n-(this.position===eR.ABOVE||this.position===eR.BELOW?.5*this.width:0),this.y=h,this.renderText(t,0,0),this.accidentalUpper&&(h-=this.getHeight()+this.renderOptions.accidentalUpperPadding,this.accidentalUpper.renderText(t,n+this.xShift-.5*this.accidentalUpper.getWidth(),h+this.yShift-this.accidentalUpper.getTextMetrics().actualBoundingBoxDescent)),t.closeGroup()}}tH.DEBUG=!1;class tU extends b{static get CATEGORY(){return"Parenthesis"}static buildAndAttach(t){for(let e of t)for(let t=0;t<e.keys.length;t++)e.addModifier(new tU(eR.LEFT),t),e.addModifier(new tU(eR.RIGHT),t)}static format(t,e){if(!t||0===t.length)return!1;let i=0,s=0;for(let e=0;e<t.length;++e){let n=t[e],a=n.getNote(),r=n.getPosition(),o=n.checkIndex(),h=0;r===eR.RIGHT&&(s=s>(h=a.getRightParenthesisPx(o))+n.width?s:h+n.width),r===eR.LEFT&&(i=i>(h=a.getLeftParenthesisPx(o)+n.width)+n.width?i:h+n.width),n.setXShift(h)}return e.leftShift+=i,e.rightShift+=s,!0}constructor(t){super(),this.position=null!=t?t:b.Position.LEFT,this.position===b.Position.RIGHT?this.text="":this.position===b.Position.LEFT&&(this.text="")}setNote(t){return this.note=t,this.setFont(t.getFont()),this}draw(){let t=this.checkContext(),e=this.checkAttachedNote();this.setRendered();let i=e.getModifierStartXY(this.position,this.index,{forceFlagRight:!0});this.renderText(t,i.x,i.y)}}let tV={path:{x:!0,y:!0,width:!0,height:!0,"font-family":!0,"font-weight":!0,"font-style":!0,"font-size":!0},rect:{"font-family":!0,"font-weight":!0,"font-style":!0,"font-size":!0},text:{width:!0,height:!0}},tY=2*Math.PI;class tX extends ${constructor(t){super(),this.width=0,this.height=0,this.precision=1,this.backgroundFillStyle="white",this.fontCSSString="",this.element=t,this.precision=Math.pow(10,N.RENDER_PRECISION_PLACES);let e=this.create("svg");e.setAttribute("pointer-events","none"),this.element.appendChild(e),this.svg=e,this.parent=this.svg,this.groups=[this.svg],this.path="",this.pen={x:NaN,y:NaN};let i={"font-family":p.get("fontFamily"),"font-size":"10pt","font-weight":eN.NORMAL,"font-style":eF.NORMAL};this.state=Object.assign({scaleX:1,scaleY:1},i),this.attributes=Object.assign({"stroke-width":1,"stroke-dasharray":"none",fill:"black",stroke:"black",shadowBlur:0,shadowColor:"black"},i),this.groupAttributes=[],this.applyAttributes(e,this.attributes),this.groupAttributes.push(Object.assign({},this.attributes)),this.stateStack=[]}round(t){return Math.round(t*this.precision)/this.precision}create(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}openGroup(t,e){let i=this.create("g");return this.groups.push(i),this.parent.appendChild(i),this.parent=i,t&&i.setAttribute("class",l(t)),e&&i.setAttribute("id",l(e)),this.applyAttributes(i,this.attributes),this.groupAttributes.push(Object.assign(Object.assign({},this.groupAttributes[this.groupAttributes.length-1]),this.attributes)),i}closeGroup(){this.groups.pop(),this.groupAttributes.pop(),this.parent=this.groups[this.groups.length-1]}openRotation(t,e,i){this.openGroup().setAttribute("transform",`translate(${e},${i}) rotate(${t}) translate(-${e},-${i})`)}closeRotation(){this.closeGroup()}add(t){this.parent.appendChild(t)}setFillStyle(t){return this.attributes.fill=t,this}setBackgroundFillStyle(t){return this.backgroundFillStyle=t,this}setStrokeStyle(t){return this.attributes.stroke=t,this}setShadowColor(t){return this.attributes.shadowColor=t,this}setShadowBlur(t){return this.attributes.shadowBlur=t,this}setLineWidth(t){return this.attributes["stroke-width"]=t,this}setLineDash(t){if("[object Array]"===Object.prototype.toString.call(t))return this.attributes["stroke-dasharray"]=t.join(","),this;throw new n("ArgumentError","lineDash must be an array of integers.")}setLineCap(t){return this.attributes["stroke-linecap"]=t,this}resize(t,e){return this.width=t,this.height=e,this.element.style.width=t.toString(),this.svg.style.width=t.toString(),this.svg.style.height=e.toString(),this.applyAttributes(this.svg,{width:t,height:e}),this.scale(this.state.scaleX,this.state.scaleY),this}scale(t,e){this.state.scaleX=this.state.scaleX?this.state.scaleX*t:t,this.state.scaleY=this.state.scaleY?this.state.scaleY*e:e;let i=this.width/this.state.scaleX,s=this.height/this.state.scaleY;return this.setViewBox(0,0,i,s),this}setViewBox(t,e,i,s){if("string"==typeof t)this.svg.setAttribute("viewBox",t);else{let n=t+" "+e+" "+i+" "+s;this.svg.setAttribute("viewBox",n)}}applyAttributes(t,e){let i=tV[t.nodeName];for(let s in e)i&&i[s]||e[s]&&(0===this.groupAttributes.length||e[s]!=this.groupAttributes[this.groupAttributes.length-1][s])&&t.setAttributeNS(null,s,e[s]);return t}clear(){for(;this.svg.lastChild;)this.svg.removeChild(this.svg.lastChild)}rect(t,e,i,s,n){s<0&&(e+=s,s*=-1);let a=this.create("rect");return n=null!=n?n:{fill:"none","stroke-width":this.attributes["stroke-width"],stroke:"black"},t=this.round(t),e=this.round(e),i=this.round(i),s=this.round(s),this.applyAttributes(a,Object.assign({x:t,y:e,width:i,height:s},n)),this.add(a),this}fillRect(t,e,i,s){let n={fill:this.attributes.fill,stroke:"none"};return this.rect(t,e,i,s,n),this}pointerRect(t,e,i,s){return this.rect(t,e,i,s,{opacity:"0","pointer-events":"auto"}),this}clearRect(t,e,i,s){return this.rect(t,e,i,s,{fill:this.backgroundFillStyle,stroke:"none"}),this}beginPath(){return this.path="",this.pen.x=NaN,this.pen.y=NaN,this}moveTo(t,e){return t=this.round(t),e=this.round(e),this.path+="M"+t+" "+e,this.pen.x=t,this.pen.y=e,this}lineTo(t,e){return t=this.round(t),e=this.round(e),this.path+="L"+t+" "+e,this.pen.x=t,this.pen.y=e,this}bezierCurveTo(t,e,i,s,n,a){return n=this.round(n),a=this.round(a),t=this.round(t),e=this.round(e),i=this.round(i),s=this.round(s),this.path+="C"+t+" "+e+","+i+" "+s+","+n+" "+a,this.pen.x=n,this.pen.y=a,this}quadraticCurveTo(t,e,i,s){return i=this.round(i),s=this.round(s),t=this.round(t),e=this.round(e),this.path+="Q"+t+" "+e+","+i+" "+s,this.pen.x=i,this.pen.y=s,this}arc(t,e,i,s,n,a){let r=t+i*Math.cos(s),o=e+i*Math.sin(s);r=this.round(r),o=this.round(o);let h=c(s),l=c(n);if(!a&&n-s>=tY||a&&s-n>=tY||h===l){let n=t+i*Math.cos(s+Math.PI),a=e+i*Math.sin(s+Math.PI);n=this.round(n),a=this.round(a),i=this.round(i),this.path+=`M${r} ${o} A${i} ${i} 0 0 0 ${n} ${a} `,this.path+=`A${i} ${i} 0 0 0 ${r} ${o}`,this.pen.x=r,this.pen.y=o}else{let c,d=t+i*Math.cos(n),u=e+i*Math.sin(n);s=h,c=Math.abs((n=l)-s)<Math.PI?a:!a,s>n&&(c=!c),d=this.round(d),u=this.round(u),i=this.round(i),this.path+=`M${r} ${o} A${i} ${i} 0 ${+c} ${+!a} ${d} ${u}`,this.pen.x=d,this.pen.y=u}return this}closePath(){return this.path+="Z",this}getShadowStyle(){return`filter: drop-shadow(0 0 ${this.attributes.shadowBlur/1.5}px ${this.attributes.shadowColor})`}fill(t){let e=this.create("path");return void 0===t&&(t=Object.assign(Object.assign({},this.attributes),{stroke:"none"})),t.d=this.path,this.attributes.shadowBlur>0&&(t.style=this.getShadowStyle()),this.applyAttributes(e,t),this.add(e),this}stroke(){let t=this.create("path"),e=Object.assign(Object.assign({},this.attributes),{fill:"none",d:this.path});return this.attributes.shadowBlur>0&&(e.style=this.getShadowStyle()),this.applyAttributes(t,e),this.add(t),this}measureText(t){tX.measureTextElement.setText(t),tX.measureTextElement.setFont(this.attributes["font-family"],this.attributes["font-size"],this.attributes["font-weight"],this.attributes["font-style"]);let e=tX.measureTextElement.getBoundingBox();return{x:e.x,y:e.y,width:e.w,height:e.h}}fillText(t,e,i){if(!t||t.length<=0)return this;e=this.round(e),i=this.round(i);let s=Object.assign(Object.assign({},this.attributes),{stroke:"none",x:e,y:i}),n=this.create("text");return n.textContent=t,this.applyAttributes(n,s),this.add(n),this}save(){return this.stateStack.push({state:structuredClone(this.state),attributes:structuredClone(this.attributes)}),this}restore(){let t=this.stateStack.pop();return t&&(this.state=structuredClone(t.state),this.attributes=structuredClone(t.attributes)),this}set fillStyle(t){this.setFillStyle(t)}get fillStyle(){return this.attributes.fill}set strokeStyle(t){this.setStrokeStyle(t)}get strokeStyle(){return this.attributes.stroke}setFont(t,e,i,s){let n=S.validate(t,e,i,s);this.fontCSSString=S.toCSSString(n);let a={"font-family":n.family,"font-size":n.size,"font-weight":n.weight,"font-style":n.style};return this.attributes=Object.assign(Object.assign({},this.attributes),a),this.state=Object.assign(Object.assign({},this.state),a),this}getFont(){return this.fontCSSString}}tX.measureTextElement=new w,function(t){t[t.CANVAS=1]="CANVAS",t[t.SVG=2]="SVG"}(eX||(eX={})),function(t){t[t.NONE=1]="NONE",t[t.UP=2]="UP",t[t.DOWN=3]="DOWN"}(ez||(ez={}));class tz{static buildContext(t,e,i,s,n="#FFF"){let a=new tz(t,e);i&&s&&a.resize(i,s);let r=a.getContext();return r.setBackgroundFillStyle(n),tz.lastContext=r,r}static getCanvasContext(t,e,i,s){return tz.buildContext(t,tz.Backends.CANVAS,e,i,s)}static getSVGContext(t,e,i,s){return tz.buildContext(t,tz.Backends.SVG,e,i,s)}static drawDashedLine(t,e,i,s,n,a){t.beginPath();let r=s-e,o=n-i,h=Math.atan2(o,r),l=e,c=i;t.moveTo(e,i);let d=0,u=!0;for(;!((r<0?l<=s:l>=s)&&(o<0?c<=n:c>=n));){let e=a[d++%a.length],i=l+Math.cos(h)*e;l=r<0?Math.max(s,i):Math.min(s,i);let g=c+Math.sin(h)*e;c=o<0?Math.max(n,g):Math.min(n,g),u?t.lineTo(l,c):t.moveTo(l,c),u=!u}t.closePath(),t.stroke()}constructor(t,e){if(F(t,"RenderContext"))this.ctx=t;else{let i;if(void 0===e)throw new n("InvalidArgument","Missing backend argument");if("string"==typeof t){let e=document.getElementById(t);if(!e)throw new n("BadElementId",`Can't find element with ID "${e}"`);i=e}else i=t;if(e===tz.Backends.CANVAS){if(!th(i))throw new n("BadElement","CANVAS context requires an HTMLCanvasElement.");let t=i.getContext("2d",{willReadFrequently:!0});if(!t)throw new n("BadElement","Can't get canvas context");this.ctx=new tl(t)}else if(e===tz.Backends.SVG){if(!function(t){if(!t)return!1;let e=a();return"function"==typeof e.HTMLDivElement&&t instanceof e.HTMLDivElement||"function"==typeof t.appendChild&&"object"==typeof t.style}(i))throw new n("BadElement","SVG context requires an HTMLDivElement.");this.ctx=new tX(i)}else throw new n("InvalidBackend",`No support for backend: ${e}`)}}resize(t,e){return this.ctx.resize(t,e),this}getContext(){return this.ctx}}tz.Backends=eX,tz.LineEndType=ez,tz.lastContext=void 0;class tJ extends b{static get CATEGORY(){return"StringNumber"}static format(t,e){let i=e.leftShift,s=e.rightShift;if(!t||0===t.length)return!1;let a=[],r=null,o=0,h=0;for(let i=0;i<t.length;++i){let l=t[i],c=l.getNote(),d=l.getPosition();if(!I(c))throw new n("NoStaveNote");let u=l.checkIndex(),g=c.getKeyProps()[u],p=c.getModifierContext(),m=2*l.radius/N.STAVE_LINE_DISTANCE+.5;if(p&&(d===eR.ABOVE?(l.textLine=p.getState().topTextLine,e.topTextLine+=m):d===eR.BELOW&&(l.textLine=p.getState().textLine,e.textLine+=m)),c!==r){for(let t=0;t<c.keys.length;++t)d===b.Position.LEFT&&(o=Math.max(c.getLeftDisplacedHeadPx(),o)),0===s&&(h=Math.max(c.getRightDisplacedHeadPx(),h));r=c}let f=g.line;a.push({pos:d,note:c,num:l,line:f,shiftL:o,shiftR:h})}a.sort((t,e)=>e.line-t.line);let l=0,c=0,d=0,u=null,g=null;for(let t=0;t<a.length;++t){let e=a[t].note,n=a[t].pos,r=a[t].num,h=a[t].line,p=a[t].shiftR;(h!==u||e!==g)&&(l=s+p);let m=r.getWidth()+1,f=0;n===b.Position.LEFT?(r.setXShift(i+o),c=Math.max(f=m,c)):n===b.Position.RIGHT&&(r.setXShift(l),f+=m,d=f>d?f:d),u=h,g=e}return e.leftShift+=c,e.rightShift+=d,!0}constructor(t){super(),this.stringNumber=t,this.position=b.Position.ABOVE,this.xShift=0,this.yShift=0,this.textLine=0,this.stemOffset=0,this.xOffset=0,this.yOffset=0,this.dashed=!0,this.leg=tz.LineEndType.NONE,this.radius=8,this.drawCircle=!0,this.setWidth(2*this.radius+4)}setLineEndType(t){return t>=tz.LineEndType.NONE&&t<=tz.LineEndType.DOWN&&(this.leg=t),this}setStringNumber(t){return this.stringNumber=t,this}setOffsetX(t){return this.xOffset=t,this}setOffsetY(t){return this.yOffset=t,this}setLastNote(t){return this.lastNote=t,this}setDashed(t){return this.dashed=t,this}setDrawCircle(t){return this.drawCircle=t,this}draw(){let t=this.checkContext(),e=this.checkAttachedNote();this.setRendered();let i=e.getModifierStartXY(this.position,this.index),s=e.hasStem()?e.getStemDirection():V.UP,a=i.x+this.xShift+this.xOffset,r={};e.hasStem()&&(r=e.checkStem().getExtents());let o=i.y+this.yShift+this.yOffset;switch(this.position){case b.Position.ABOVE:o=e.getYs().reduce((t,e)=>t<e?t:e),e.hasStem()&&s===V.UP&&(o=r.topY+p.get("StringNumber.stemPadding")),o-=this.radius+p.get("StringNumber.verticalPadding")+this.textLine*N.STAVE_LINE_DISTANCE;break;case b.Position.BELOW:o=e.getYs().reduce((t,e)=>t>e?t:e),e.hasStem()&&s===V.DOWN&&(o=r.topY-p.get("StringNumber.stemPadding")),o+=this.radius+p.get("StringNumber.verticalPadding")+this.textLine*N.STAVE_LINE_DISTANCE;break;case b.Position.LEFT:a-=this.radius/2+p.get("StringNumber.leftPadding");break;case b.Position.RIGHT:a+=this.radius/2+p.get("StringNumber.rightPadding");break;default:throw new n("InvalidPosition",`The position ${this.position} is invalid`)}this.drawCircle&&(t.beginPath(),t.arc(a,o,this.radius,0,2*Math.PI,!1),t.setLineWidth(1.5),t.stroke()),t.setFont(this.fontInfo);let h=a-t.measureText(this.stringNumber).width/2;t.fillText(""+this.stringNumber,h,o+4.5);let l=this.lastNote;if(G(l)){let i,s,n=l.getStemX()-e.getX()+5;switch(t.setStrokeStyle("#000000"),t.setLineCap("round"),t.setLineWidth(.6),this.dashed?tz.drawDashedLine(t,a+10,o,a+n,o,[3,3]):tz.drawDashedLine(t,a+10,o,a+n,o,[3,0]),this.leg){case tz.LineEndType.UP:i=-10,s=this.dashed?[3,3]:[3,0],tz.drawDashedLine(t,a+n,o,a+n,o+i,s);break;case tz.LineEndType.DOWN:i=10,s=this.dashed?[3,3]:[3,0],tz.drawDashedLine(t,a+n,o,a+n,o+i,s)}}}}class tQ extends b{static get CATEGORY(){return"Stroke"}static format(t,e){let i=e.leftShift;if(!t||0===t.length)return!1;let s=t.map(t=>{let e=t.getNote(),i=t.checkIndex();if(I(e)){let{line:s}=e.getKeyProps()[i];return{line:s,shift:e.getLeftDisplacedHeadPx(),stroke:t}}if(W(e)){let{str:s}=e.getPositions()[i];return{line:s,shift:0,stroke:t}}throw new n("Internal","Unexpected instance.")}).reduce((t,{stroke:e,shift:s})=>(e.setXShift(i+s),Math.max(e.getWidth()+5,t)),0);return e.leftShift+=s,!0}constructor(t,e){super(),this.options=Object.assign({allVoices:!0},e),this.allVoices=this.options.allVoices,this.type=t,this.position=b.Position.LEFT,this.renderOptions={fontScale:p.get("Stroke.fontSize")},this.setXShift(0),this.setWidth(10)}getPosition(){return this.position}addEndNote(t){return this.noteEnd=t,this}draw(){let t=this.checkContext(),e=this.checkAttachedNote();this.setRendered();let i=e.getModifierStartXY(this.position,this.index),s=e.getYs(),a=i.y,r=i.y,o=i.x-5,h=e.checkStave().getSpacingBetweenLines(),l=this.checkModifierContext().getMembers(e.getCategory());for(let t=0;t<l.length;t++){let e=l[t];if(M(e)){s=e.getYs();for(let e=0;e<s.length;e++)(this.note===l[t]||this.allVoices)&&(a=Math.min(a,s[e]),r=Math.max(r,s[e]))}}let c="",d=0,u=0;switch(this.type){case tQ.Type.BRUSH_DOWN:case tQ.Type.ROLL_DOWN:case tQ.Type.RASGUEADO_DOWN:c=eO.arrowheadBlackUp,d=a,a-=h/2,r+=h/2;break;case tQ.Type.BRUSH_UP:case tQ.Type.ROLL_UP:case tQ.Type.RASGUEADO_UP:c=eO.arrowheadBlackDown,d=r+h,a-=h/2;break;case tQ.Type.ARPEGGIO_DIRECTIONLESS:a-=h/2,r+=h/2;break;default:throw new n("InvalidType",`The stroke type ${this.type} does not exist`)}if(this.type===tQ.Type.BRUSH_DOWN||this.type===tQ.Type.BRUSH_UP)t.fillRect(o+this.xShift,a,1,r-a);else{let e=c===eO.arrowheadBlackDown?eO.wiggleArpeggiatoDown:eO.wiggleArpeggiatoUp,i="",s=new w;for(;s.getWidth()<r-a;)i+=e,s.setText(i);this.type===tQ.Type.RASGUEADO_DOWN||this.type===tQ.Type.ROLL_DOWN||this.type===tQ.Type.ARPEGGIO_DIRECTIONLESS?(t.openRotation(90,o+this.xShift,a),s.renderText(t,o+this.xShift,a-s.getTextMetrics().actualBoundingBoxDescent+s.getHeight()/2),t.closeRotation(),u=a+s.getWidth()+5):(t.openRotation(-90,o+this.xShift,r),s.renderText(t,o+this.xShift,r-s.getTextMetrics().actualBoundingBoxDescent+s.getHeight()/2),t.closeRotation(),u=r-s.getWidth()-5)}if(0!==d){let e=new w;e.setText(c),e.renderText(t,o+this.xShift-e.getWidth()/2,d)}if(this.type===tQ.Type.RASGUEADO_DOWN||this.type===tQ.Type.RASGUEADO_UP){let e=new w("Stroke.text");e.setText("R"),e.renderText(t,o+this.xShift-e.getWidth()/2,u+(this.type===tQ.Type.RASGUEADO_DOWN?e.getHeight():0))}}}tQ.Type={BRUSH_DOWN:1,BRUSH_UP:2,ROLL_DOWN:3,ROLL_UP:4,RASGUEADO_DOWN:5,RASGUEADO_UP:6,ARPEGGIO_DIRECTIONLESS:7};class tq extends b{static get CATEGORY(){return"Vibrato"}static format(t,e,i){if(!t||0===t.length)return!1;let s=e.topTextLine,n=0,a=e.rightShift-7,r=i.getMembers(to.CATEGORY);r&&r.length>0?s-=r.map(t=>t.getTextHeight()).reduce((t,e)=>t>e?t:e)/N.STAVE_LINE_DISTANCE+1:e.topTextLine+=1;for(let e=0;e<t.length;++e){let i=t[e];i.setXShift(a),i.setTextLine(s),n+=i.getWidth(),a+=n}return e.rightShift+=n,!0}constructor(){super(),this.position=b.Position.RIGHT,this.renderOptions={code:60080,width:20},this.setVibratoWidth(this.renderOptions.width)}setVibratoWidth(t){this.renderOptions.width=t,this.text=String.fromCodePoint(this.renderOptions.code);let e=this.getWidth();if(!e)throw new n("Cannot set vibrato width if width is 0");let i=Math.round(this.renderOptions.width/e);for(let t=1;t<i;t++)this.text+=String.fromCodePoint(this.renderOptions.code);return this}setVibratoCode(t){return this.renderOptions.code=t,this.setVibratoWidth(this.renderOptions.width)}draw(){let t=this.checkContext(),e=this.checkAttachedNote();this.setRendered();let i=e.getModifierStartXY(b.Position.RIGHT,this.index).x,s=e.getYForTopText(this.textLine)+5;this.renderText(t,i,s)}}function tj(...t){tK.DEBUG&&o("VexFlow.ModifierContext",t)}class tK{constructor(){this.state={leftShift:0,rightShift:0,textLine:0,topTextLine:0},this.members={},this.preFormatted=!1,this.postFormatted=!1,this.formatted=!1,this.width=0,this.spacing=0}addModifier(t){return tj("addModifier is deprecated, use addMember instead."),this.addMember(t)}addMember(t){let e=t.getCategory();return this.members[e]||(this.members[e]=[]),this.members[e].push(t),t.setModifierContext(this),this.preFormatted=!1,this}getModifiers(t){return tj("getModifiers is deprecated, use getMembers instead."),this.getMembers(t)}getMembers(t){var e;return null!=(e=this.members[t])?e:[]}getWidth(){return this.width}getLeftShift(){return this.state.leftShift}getRightShift(){return this.state.rightShift}getState(){return this.state}getMetrics(){if(!this.formatted)throw new n("UnformattedMember","Unformatted member has no metrics.");return{width:this.state.leftShift+this.state.rightShift+this.spacing,spacing:this.spacing}}preFormat(){if(this.preFormatted)return;tj("Preformatting ModifierContext");let t=this.state,e=this.members;tO.format(e.StaveNote,t),tU.format(e.Parenthesis,t),tT.format(e.Dot,t),tx.format(e.FretHandFinger,t),U.format(e.Accidental,t),tQ.format(e.Stroke,t),tG.format(e.GraceNoteGroup,t),tW.format(e.NoteSubGroup,t),tJ.format(e.StringNumber,t),_.format(e.Articulation,t),tH.format(e.Ornament,t),Y.format(e.Annotation,t),tu.format(e.ChordSymbol,t),to.format(e.Bend,t),tq.format(e.Vibrato,t,this),this.width=t.leftShift+t.rightShift,this.preFormatted=!0}postFormat(){this.postFormatted||(tj("Postformatting ModifierContext"),tO.postFormat(this.getMembers("StaveNote")))}}tK.DEBUG=!1;class tZ extends ti{static get CATEGORY(){return"KeySignature"}constructor(t,e,i){super(),this.accList=[],this.setKeySig(t,e,i),this.setPosition(eI.BEGIN),this.children=[],this.paddingForced=!1}convertToGlyph(t,e,i){let s=N.accidentalCodes(t.type),n=new w("KeySignature");n.setText(s);let a=1;if(n.setYShift(i.getYForLine(t.line)),this.children.length>0){let t=this.children[this.children.length-1],e=t=>t.getText()===eO.accidentalNatural;(e(t)||e(n))&&10>Math.abs(n.getYShift()-t.getYShift())&&(a=2),n.setXShift(t.getXShift()+t.getWidth()+a)}this.children.push(n),this.width+=n.getWidth()+a}cancelKey(t){return this.formatted=!1,this.cancelKeySpec=t,this}convertToCancelAccList(t){let e=N.keySignature(t),i=this.accList.length>0&&e.length>0&&e[0].type!==this.accList[0].type,s=i?e.length:e.length-this.accList.length;if(s<1)return;let n=[];for(let t=0;t<s;t++){let a=t;i||(a=e.length-s+t);let r=e[a];n.push({type:"n",line:r.line})}return this.accList=n.concat(this.accList),{accList:n,type:e[0].type}}addToStave(t){return this.paddingForced=!0,t.addModifier(this),this}setStave(t){return this.formatted=!1,super.setStave(t)}getBoundingBox(){return this.formatted||this.format(),super.getBoundingBox()}calculateDimensions(){let t;t=this.children.length>0?this.children[0].getBoundingBox():new f(this.x+this.xShift,this.y+this.yShift,0,0),this.children.forEach(e=>{t.mergeWith(e.getBoundingBox())}),this.width=t.getW(),this.height=t.getH(),this.y=t.getY()}convertAccLines(t,e,i=this.accList){let s,n,a=0;switch(t){case"soprano":"#"===e?s=[2.5,.5,2,0,1.5,-.5,1]:a=-1;break;case"mezzo-soprano":"b"===e?s=[0,2,.5,2.5,1,3,1.5]:a=1.5;break;case"alto":a=.5;break;case"tenor":"#"===e?s=[3,1,2.5,.5,2,0,1.5]:a=-.5;break;case"baritone-f":case"baritone-c":"b"===e?s=[.5,2.5,1,3,1.5,3.5,2]:a=2;break;case"bass":case"french":a=1}if(void 0!==s)for(n=0;n<i.length;++n)i[n].line=s[n];else if(0!==a)for(n=0;n<i.length;++n)i[n].line+=a}getPadding(t){return this.formatted||this.format(),0===this.children.length||!this.paddingForced&&t<2?0:this.padding}getWidth(){return this.formatted||this.format(),this.width}setKeySig(t,e,i){return this.formatted=!1,this.keySpec=t,this.cancelKeySpec=e,this.alterKeySpec=i,this}alterKey(t){return this.formatted=!1,this.alterKeySpec=t,this}convertToAlterAccList(t){let e=Math.min(t.length,this.accList.length);for(let i=0;i<e;++i)t[i]&&(this.accList[i].type=t[i])}format(){let t,e=this.getStave();e||(e=new t8(0,0,100),this.setStave(e)),this.width=0,this.children=[],this.accList=N.keySignature(r(this.keySpec));let i=this.accList,s=i.length>0?i[0].type:void 0;if(this.cancelKeySpec&&(t=this.convertToCancelAccList(this.cancelKeySpec)),this.alterKeySpec&&this.convertToAlterAccList(this.alterKeySpec),this.accList.length>0){let n=(this.position===eI.END?e.getEndClef():e.getClef())||e.getClef();t&&this.convertAccLines(n,t.type,t.accList),this.convertAccLines(n,s,i);for(let t=0;t<this.accList.length;++t)this.convertToGlyph(this.accList[t],this.accList[t+1],e)}this.calculateDimensions(),this.formatted=!0}draw(){let t=this.checkStave().checkContext();this.formatted||this.format(),this.setRendered(),t.openGroup("keysignature",this.getAttribute("id"));for(let e=0;e<this.children.length;e++)this.children[e].renderText(t,this.x,0);t.closeGroup()}}class t_ extends ti{static get CATEGORY(){return"Repetition"}constructor(t,e,i){super(),this.symbolType=t,this.x=e,this.xShift=0,this.yShift=i}setShiftX(t){return this.xShift=t,this}setShiftY(t){return this.yShift=t,this}draw(){let t=this.checkStave(),e=t.getModifierXShift(this.getPosition());switch(this.setRendered(),this.symbolType){case t_.type.CODA_RIGHT:this.drawCodaFixed(t,e+t.getWidth());break;case t_.type.CODA_LEFT:this.drawSymbolText(t,e,"Coda",!0);break;case t_.type.SEGNO_LEFT:this.drawSegnoFixed(t,e);break;case t_.type.SEGNO_RIGHT:this.drawSegnoFixed(t,e+t.getWidth());break;case t_.type.DC:this.drawSymbolText(t,e,"D.C.",!1);break;case t_.type.DC_AL_CODA:this.drawSymbolText(t,e,"D.C. al",!0);break;case t_.type.DC_AL_FINE:this.drawSymbolText(t,e,"D.C. al Fine",!1);break;case t_.type.DS:this.drawSymbolText(t,e,"D.S.",!1);break;case t_.type.DS_AL_CODA:this.drawSymbolText(t,e,"D.S. al",!0);break;case t_.type.DS_AL_FINE:this.drawSymbolText(t,e,"D.S. al Fine",!1);break;case t_.type.FINE:this.drawSymbolText(t,e,"Fine",!1);break;case t_.type.TO_CODA:this.drawSymbolText(t,e,"To",!0)}}drawCodaFixed(t,e){let i=t.getYForTopText(t.getNumLines());return this.text=eO.coda,this.renderText(t.checkContext(),e,i+p.get("Repetition.coda.offsetY")),this}drawSegnoFixed(t,e){let i=t.getYForTopText(t.getNumLines());return this.text=eO.segno,this.renderText(t.checkContext(),e,i+p.get("Repetition.segno.offsetY")),this}drawSymbolText(t,e,i,s){let n=t.checkContext(),a=0;switch(this.text=i,s&&(this.text+=" "),this.setFont(p.getFontInfo("Repetition.text")),this.symbolType){case t_.type.CODA_LEFT:a=t.getVerticalBarWidth();break;case t_.type.DC:case t_.type.DC_AL_FINE:case t_.type.DS:case t_.type.DS_AL_FINE:case t_.type.FINE:default:a=e-(t.getNoteStartX()-this.x)+t.getWidth()-this.width-p.get("Repetition.text.offsetX")}let r=t.getYForTopText(t.getNumLines())+p.get("Repetition.text.offsetY");return this.renderText(n,a,r),this}}t_.type={NONE:1,CODA_LEFT:2,CODA_RIGHT:3,SEGNO_LEFT:4,SEGNO_RIGHT:5,DC:6,DC_AL_CODA:7,DC_AL_FINE:8,DS:9,DS_AL_CODA:10,DS_AL_FINE:11,FINE:12,TO_CODA:13};class t$ extends ti{static get CATEGORY(){return"StaveSection"}constructor(t,e=0,i=0,s=!0){super(),this.setText(t),this.x=e,this.yShift=i,this.drawRect=s,this.padding=p.get("StaveSection.padding")}setDrawRect(t){return this.drawRect=t,this}draw(){let t=this.checkStave(),e=t.checkContext();this.setRendered(),this.x=t.getX()+t.getModifierXShift(this.getPosition());let i=-1*this.textMetrics.actualBoundingBoxDescent,s=this.width+2*this.padding,n=this.height+2*this.padding,a=t.getYForTopText(1.5)+this.yShift,r=this.x+this.xShift;this.drawRect&&(e.beginPath(),e.rect(r,a-n+i,s,n),e.stroke()),this.renderText(e,this.xShift+this.padding,a-this.padding)}}class t0 extends ti{static get CATEGORY(){return"StaveTempo"}constructor(t,e,i){super(),this.durationToCode={"1/4":eO.metNoteDoubleWholeSquare,long:eO.metNoteDoubleWholeSquare,"1/2":eO.metNoteDoubleWhole,breve:eO.metNoteDoubleWhole,1:eO.metNoteWhole,whole:eO.metNoteWhole,w:eO.metNoteWhole,2:eO.metNoteHalfUp,half:eO.metNoteHalfUp,h:eO.metNoteHalfUp,4:eO.metNoteQuarterUp,quarter:eO.metNoteQuarterUp,q:eO.metNoteQuarterUp,8:eO.metNote8thUp,eighth:eO.metNote8thUp,16:eO.metNote16thUp,"16th":eO.metNote16thUp,32:eO.metNote32ndUp,"32nd":eO.metNote32ndUp,64:eO.metNote64thUp,"64th":eO.metNote64thUp,128:eO.metNote128thUp,"128th":eO.metNote128thUp,256:eO.metNote256thUp,"256th":eO.metNote256thUp,512:eO.metNote512thUp,"512th":eO.metNote512thUp,1024:eO.metNote1024thUp,"1024th":eO.metNote1024thUp},this.tempo=t,this.position=eI.ABOVE,this.x=e,this.setXShift(10),this.setYShift(i)}setTempo(t){return this.tempo=t,this}draw(){let t=this.checkStave(),e=t.getModifierXShift(this.getPosition()),i=t.checkContext();this.setRendered();let{name:s,duration:n,dots:a,bpm:r,duration2:o,dots2:h,parenthesis:l}=this.tempo,c=this.x+e,d=t.getYForTopText(1),u=new w("StaveTempo.glyph"),g=new w("StaveTempo");if(s&&(this.text=s,this.fontInfo=p.getFontInfo("StaveTempo.name"),this.renderText(i,e,d),c+=this.getWidth()+3),(s&&n||l)&&(g.setText("("),g.renderText(i,c+this.xShift,d+this.yShift),c+=g.getWidth()+3),n){if(u.setText(this.durationToCode[n]),u.renderText(i,c+this.xShift,d+this.yShift),c+=u.getWidth()+3,a){u.setText(eO.metAugmentationDot);for(let t=0;t<a;t++)u.renderText(i,c+this.xShift,d+2+this.yShift),c+=u.getWidth()+3}if(g.setText("="),g.renderText(i,c+this.xShift,d+this.yShift),c+=g.getWidth()+3,o){if(u.setText(this.durationToCode[o]),u.renderText(i,c+this.xShift,d+this.yShift),c+=u.getWidth()+3,h){u.setText(eO.metAugmentationDot);for(let t=0;t<h;t++)u.renderText(i,c+this.xShift,d+2+this.yShift),c+=u.getWidth()+3}}else r&&(g.setText(""+r),g.renderText(i,c+this.xShift,d+this.yShift),c+=g.getWidth()+3);(s||l)&&(g.setText(")"),g.renderText(i,c+this.xShift,d+this.yShift))}}}!function(t){t[t.LEFT=1]="LEFT",t[t.CENTER=2]="CENTER",t[t.RIGHT=3]="RIGHT"}(eJ||(eJ={}));class t1 extends te{static get CATEGORY(){return"TextNote"}static get GLYPHS(){return{segno:eO.segno,tr:eO.ornamentTrill,mordent:eO.ornamentMordent,mordentUpper:eO.ornamentShortTrill,mordentLower:eO.ornamentMordent,f:eO.dynamicForte,p:eO.dynamicPiano,m:eO.dynamicMezzo,s:eO.dynamicSforzando,z:eO.dynamicZ,coda:eO.coda,pedalOpen:eO.keyboardPedalPed,pedalClose:eO.keyboardPedalUp,caesuraStraight:eO.caesura,caesuraCurved:eO.caesuraCurved,breath:eO.breathMarkComma,tick:eO.breathMarkTick,turn:eO.ornamentTurn,turnInverted:eO.ornamentTurnSlash}}constructor(t){var e,i;super(t),this.text=null!=(e=t.text)?e:"",t.glyph&&(this.text+=t1.GLYPHS[t.glyph]||t.glyph),t.font?this.setFont(t.font):void 0===t.glyph&&this.setFont(p.getFontInfo("TextNote.text.fontSize"));let s=.769231*S.convertSizeToPointValue(this.fontInfo.size);t.superscript&&(this.superscript=new w("TexNote.subSuper"),this.superscript.setText(t.superscript),this.superscript.setFontSize(s)),t.subscript&&(this.subscript=new w("TexNote.subSuper"),this.subscript.setText(t.subscript),this.subscript.setFontSize(s)),this.line=null!=(i=t.line)?i:0,this.smooth=t.smooth||!1,this.ignoreTicks=t.ignoreTicks||!1,this.justification=eJ.LEFT}setJustification(t){return this.justification=t,this}setLine(t){return this.line=t,this}getLine(){return this.line}preFormat(){if(this.preFormatted)return;let t=this.checkTickContext("Can't preformat without a TickContext.");this.justification===eJ.CENTER?this.leftDisplacedHeadPx=this.width/2:this.justification===eJ.RIGHT&&(this.leftDisplacedHeadPx=this.width),this.rightDisplacedHeadPx=t.getMetrics().glyphPx/2,this.preFormatted=!0}draw(){let t=this.checkContext(),e=this.checkStave(),i=this.checkTickContext("Can't draw without a TickContext.");this.setRendered();let s=this.getAbsoluteX()+i.getMetrics().glyphPx/2,n=this.getWidth();this.justification===eJ.CENTER?s-=n/2:this.justification===eJ.RIGHT&&(s-=n);let a=e.getYForLine(this.line+-3);this.renderText(t,s,a);let r=this.getHeight();this.superscript&&this.superscript.renderText(t,s+this.width+2,a-r/2.2),this.subscript&&this.subscript.renderText(t,s+this.width+2,a+r/2.2-1)}}t1.Justification=eJ;class t2 extends ti{static get CATEGORY(){return"StaveText"}constructor(t,e,i={}){var s,n,a;super(),this.setText(t),this.setXShift(null!=(s=i.shiftX)?s:0),this.setYShift(null!=(n=i.shiftY)?n:0),this.position=e,this.justification=null!=(a=i.justification)?a:t1.Justification.CENTER}draw(){let t,e,i=this.checkStave(),s=i.checkContext();switch(this.setRendered(),this.position){case eI.LEFT:case eI.RIGHT:e=(i.getYForLine(0)+i.getBottomLineY())/2,t=this.position===eI.LEFT?i.getX()-this.width-24:i.getX()+i.getWidth()+24;break;case eI.ABOVE:case eI.BELOW:t=i.getX(),this.justification===eJ.CENTER?t+=i.getWidth()/2-this.width/2:this.justification===eJ.RIGHT&&(t+=i.getWidth()-this.width),e=this.position===eI.ABOVE?i.getYForTopText(2):i.getYForBottomText(2);break;default:throw new n("InvalidPosition","Value Must be in Modifier.Position.")}this.renderText(s,t,e+4)}}!function(t){t[t.NONE=1]="NONE",t[t.BEGIN=2]="BEGIN",t[t.MID=3]="MID",t[t.END=4]="END",t[t.BEGIN_END=5]="BEGIN_END"}(eQ||(eQ={}));class t5 extends ti{static get CATEGORY(){return"Volta"}static get type(){return eQ}constructor(t,e,i,s){super(),this.type=t,this.x=i,this.yShift=s,this.text=e}draw(){let t=this.checkStave(),e=t.getModifierXShift(this.getPosition()),i=t.checkContext();this.setRendered();let s=t.getWidth()-e,n=t.getYForTopText(t.getNumLines())+this.yShift,a=1.5*t.getSpacingBetweenLines();switch(this.type){case eQ.BEGIN:i.fillRect(this.x+e,n,1,a);break;case eQ.END:s-=5,i.fillRect(this.x+e+s,n,1,a);break;case eQ.BEGIN_END:s-=3,i.fillRect(this.x+e,n,1,a),i.fillRect(this.x+e+s,n,1,a)}(this.type===eQ.BEGIN||this.type===eQ.BEGIN_END)&&this.renderText(i,e+5,n-this.yShift+15),i.fillRect(this.x+e,n,s,1)}}class t3 extends ti{static get CATEGORY(){return"TimeSignature"}constructor(t="4/4",e=15,i=!0){super(),this.timeSpec="4/4",this.line=0,this.isNumeric=!0,this.topStartX=0,this.botStartX=0,this.lineShift=0,this.topText=new w,this.botText=new w,this.validateArgs=i,this.topLine=1,this.bottomLine=3,this.setPosition(eI.BEGIN),this.setTimeSig(t),this.setPadding(e)}static getTimeSigCode(t,e=!1){let i=eO.null;switch(t){case"C":i=eO.timeSigCommon;break;case"C|":i=eO.timeSigCutCommon;break;case"+":i=e?eO.timeSigPlusSmall:eO.timeSigPlus;break;case"-":i=eO.timeSigMinus;break;case"(":i=e?eO.timeSigParensLeftSmall:eO.timeSigParensLeft;break;case")":i=e?eO.timeSigParensRightSmall:eO.timeSigParensRight;break;default:i=String.fromCodePoint(57472+Number(t[0]))}return i}makeTimeSignatureGlyph(t,e){let i="",s=0,n=0;for(let s=0;s<t.length;++s)i+=t3.getTimeSigCode(t[s],e.length>0);this.topText.setText(i),s=this.topText.getWidth(),n=this.topText.getHeight();let a=0;i="";for(let t=0;t<e.length;++t)i+=t3.getTimeSigCode(e[t],!0);this.botText.setText(i),a=this.botText.getWidth(),n=Math.max(n,this.botText.getHeight()),this.lineShift=.5*(n>30),this.width=Math.max(s,a),this.topStartX=(this.width-s)/2,this.botStartX=(this.width-a)/2}setTimeSig(t){var e,i;if(this.timeSpec=t,"C"===t||"C|"===t){let e=t3.getTimeSigCode(t);this.line=2,this.text=e,this.isNumeric=!1}else{this.validateArgs&&t.split("/").forEach(e=>{if(!1===/^[0-9+\-()]+$/.test(e))throw new n("BadTimeSignature",`Invalid time spec: ${t}. Must contain valid signatures.`)});let s=t.split("/");this.line=0,this.isNumeric=!0,this.makeTimeSignatureGlyph(null!=(e=s[0])?e:"",null!=(i=s[1])?i:"")}return this}getTimeSpec(){return this.timeSpec}getLine(){return this.line}setLine(t){this.line=t}getIsNumeric(){return this.isNumeric}setIsNumeric(t){this.isNumeric=t}draw(){let t=this.checkStave(),e=t.checkContext();this.setRendered(),e.openGroup("timesignature",this.getAttribute("id")),this.drawAt(e,t,this.x),e.closeGroup()}drawAt(t,e,i){if(this.setRendered(),this.isNumeric){let s=i+this.topStartX,n=0;n=this.botText.getText().length>0?e.getYForLine(this.topLine-this.lineShift):(e.getYForLine(this.topLine)+e.getYForLine(this.bottomLine))/2,this.topText.renderText(t,s,n),s=i+this.botStartX,n=e.getYForLine(this.bottomLine+this.lineShift),this.botText.renderText(t,s,n)}else this.renderText(t,i-this.x,e.getYForLine(this.line))}}let t4={[ts.CATEGORY]:0,[tg.CATEGORY]:1,[tZ.CATEGORY]:2,[t3.CATEGORY]:3},t6={[t3.CATEGORY]:0,[tZ.CATEGORY]:1,[ts.CATEGORY]:2,[tg.CATEGORY]:3};class t8 extends w{static get CATEGORY(){return"Stave"}static get defaultPadding(){return p.get("Stave.padding")+p.get("Stave.endPaddingMax")}static get rightPadding(){return p.get("Stave.endPaddingMax")}constructor(t,e,i,s){super(),this.x=t,this.y=e,this.width=i,this.formatted=!1,this.startX=t+5,this.endX=t+i,this.modifiers=[],this.measure=0,this.clef="treble",this.endClef=void 0,this.options=Object.assign({verticalBarWidth:10,numLines:5,leftBar:!0,rightBar:!0,spacingBetweenLinesPx:N.STAVE_LINE_DISTANCE,spaceAboveStaffLn:4,spaceBelowStaffLn:4,topTextPosition:1,bottomTextPosition:4,lineConfig:[]},s),this.bounds={x:this.x,y:this.y,w:this.width,h:0},this.defaultLedgerLineStyle={strokeStyle:"#444",lineWidth:2},this.resetLines(),this.addModifier(new ts(this.options.leftBar?eG.SINGLE:eG.NONE)),this.addEndModifier(new ts(this.options.rightBar?eG.SINGLE:eG.NONE))}setDefaultLedgerLineStyle(t){this.defaultLedgerLineStyle=t}getDefaultLedgerLineStyle(){return Object.assign(Object.assign({},this.getStyle()),this.defaultLedgerLineStyle)}space(t){return this.options.spacingBetweenLinesPx*t}resetLines(){this.options.lineConfig=[];for(let t=0;t<this.options.numLines;t++)this.options.lineConfig.push({visible:!0});this.height=(this.options.numLines+this.options.spaceAboveStaffLn)*this.options.spacingBetweenLinesPx,this.options.bottomTextPosition=this.options.numLines}setNoteStartX(t){return this.formatted||this.format(),this.startX=t,this}getNoteStartX(){return this.formatted||this.format(),this.startX}getNoteEndX(){return this.formatted||this.format(),this.endX}getTieStartX(){return this.startX}getTieEndX(){return this.endX}getNumLines(){return this.options.numLines}setNumLines(t){return this.options.numLines=t,this.resetLines(),this}getTopLineTopY(){return this.getYForLine(0)}getBottomLineBottomY(){var t;return this.getYForLine(this.getNumLines()-1)+(null!=(t=this.getStyle().lineWidth)?t:1)}setX(t){let e=t-this.x;this.formatted=!1,this.x=t,this.startX+=e,this.endX+=e;for(let t=0;t<this.modifiers.length;t++){let i=this.modifiers[t];i.setX(i.getX()+e)}return this}setWidth(t){return this.formatted=!1,this.width=t,this.endX=this.x+t,this}setMeasure(t){return this.measure=t,this}getMeasure(){return this.measure}getModifierXShift(t=0){if("number"!=typeof t)throw new n("InvalidIndex","Must be of number type");if(this.formatted||this.format(),1===this.getModifiers(eI.BEGIN).length||this.modifiers[t].getPosition()===eI.RIGHT)return 0;let e=this.startX-this.x,i=this.modifiers[0];return i.getType()===eG.REPEAT_BEGIN&&e>i.getWidth()&&(e-=i.getWidth()),e}setRepetitionType(t,e=0){return this.modifiers.push(new t_(t,this.x,e)),this}setVoltaType(t,e,i){return this.modifiers.push(new t5(t,e,this.x,i)),this}setSection(t,e,i=0,s,n=!0){let a=new t$(t).setYShift(e).setXShift(i).setDrawRect(n);return s&&a.setFontSize(s),this.addModifier(a),this}setTempo(t,e){return this.modifiers.push(new t0(t,this.x,e)),this}setStaveText(t,e,i={}){return this.modifiers.push(new t2(t,e,i)),this}getSpacingBetweenLines(){return this.options.spacingBetweenLinesPx}getBoundingBox(){return new f(this.x,this.y,this.width,this.getBottomY()-this.y)}getBottomY(){let t=this.options,e=t.spacingBetweenLinesPx;return this.getYForLine(t.numLines)+t.spaceBelowStaffLn*e}getBottomLineY(){return this.getYForLine(this.options.numLines)}getYForLine(t){let e=this.options,i=e.spacingBetweenLinesPx,s=e.spaceAboveStaffLn;return this.y+t*i+s*i}getLineForY(t){let e=this.options,i=e.spacingBetweenLinesPx,s=e.spaceAboveStaffLn;return(t-this.y)/i-s}getYForTopText(t=0){return this.getYForLine(-t-this.options.topTextPosition)}getYForBottomText(t=0){return this.getYForLine(this.options.bottomTextPosition+t)}getYForNote(t){let e=this.options,i=e.spacingBetweenLinesPx,s=e.spaceAboveStaffLn;return this.y+s*i+5*i-t*i}getYForGlyphs(){return this.getYForLine(3)}addModifier(t,e){return void 0!==e&&t.setPosition(e),t.setStave(this),this.formatted=!1,this.modifiers.push(t),this}addEndModifier(t){return this.addModifier(t,eI.END),this}setBegBarType(t){let{SINGLE:e,REPEAT_BEGIN:i,NONE:s}=eG;return(t===e||t===i||t===s)&&(this.modifiers[0].setType(t),this.formatted=!1),this}setEndBarType(t){return t!==eG.REPEAT_BEGIN&&(this.modifiers[1].setType(t),this.formatted=!1),this}setClef(t,e,i,s){void 0===s&&(s=eI.BEGIN),s===eI.END?this.endClef=t:this.clef=t;let n=this.getModifiers(s,tg.CATEGORY);return 0===n.length?this.addClef(t,e,i,s):n[0].setType(t,e,i),this}getClef(){return this.clef}setEndClef(t,e,i){return this.setClef(t,e,i,eI.END),this}getEndClef(){return this.endClef}setKeySignature(t,e,i){void 0===i&&(i=eI.BEGIN);let s=this.getModifiers(i,tZ.CATEGORY);return 0===s.length?this.addKeySignature(t,e,i):s[0].setKeySig(t,e),this}setEndKeySignature(t,e){return this.setKeySignature(t,e,eI.END),this}setTimeSignature(t,e,i){void 0===i&&(i=eI.BEGIN);let s=this.getModifiers(i,t3.CATEGORY);return 0===s.length?this.addTimeSignature(t,e,i):s[0].setTimeSig(t),this}setEndTimeSignature(t,e){return this.setTimeSignature(t,e,eI.END),this}addKeySignature(t,e,i){return void 0===i&&(i=eI.BEGIN),this.addModifier(new tZ(t,e).setPosition(i),i),this}addClef(t,e,i,s){return void 0===s||s===eI.BEGIN?this.clef=t:s===eI.END&&(this.endClef=t),this.addModifier(new tg(t,e,i),s),this}addEndClef(t,e,i){return this.addClef(t,e,i,eI.END),this}addTimeSignature(t,e,i){return this.addModifier(new t3(t,e),i),this}addEndTimeSignature(t,e){return this.addTimeSignature(t,e,eI.END),this}addTrebleGlyph(){return this.addClef("treble"),this}getModifiers(t,e){let i=void 0===t,s=void 0===e;return i&&s?this.modifiers:i?this.modifiers.filter(t=>e===t.getCategory()):s?this.modifiers.filter(e=>t===e.getPosition()):this.modifiers.filter(i=>t===i.getPosition()&&e===i.getCategory())}sortByCategory(t,e){for(let i=t.length-1;i>=0;i--)for(let s=0;s<i;s++)if(e[t[s].getCategory()]>e[t[s+1].getCategory()]){let e=t[s];t[s]=t[s+1],t[s+1]=e}}format(){var t,e,i,s;let n,a,r,o=this.modifiers[0],h=this.modifiers[1],l=this.getModifiers(eI.BEGIN),c=this.getModifiers(eI.END);this.sortByCategory(l,t4),this.sortByCategory(c,t6),l.length>1&&o.getType()===eG.REPEAT_BEGIN&&(l.push(l.splice(0,1)[0]),l.splice(0,0,new ts(eG.SINGLE))),c.indexOf(h)>0&&c.splice(0,0,new ts(eG.NONE));let d=0,u=this.x;for(let t=0;t<l.length;t++)a=(r=l[t]).getPadding(t+d),n=r.getWidth(),u+=a,r.setX(u),u+=n,a+n===0&&d--;this.startX=u,u=this.x+this.width;let g={left:0,right:0,paddingRight:0,paddingLeft:0},p=0;for(let n=0;n<c.length;n++){p=O(r=c[n])?n:p,g.right=0,g.left=0,g.paddingRight=0,g.paddingLeft=0;let a=r.getLayoutMetrics();a?(0!==n&&(g.right=null!=(t=a.xMax)?t:0,g.paddingRight=null!=(e=a.paddingRight)?e:0),g.left=-(null!=(i=a.xMin)?i:0),g.paddingLeft=null!=(s=a.paddingLeft)?s:0,n===c.length-1&&(g.paddingLeft=0)):(g.paddingRight=r.getPadding(n-p),0!==n&&(g.right=r.getWidth()),0===n&&(g.left=r.getWidth())),u-=g.paddingRight,u-=g.right,r.setX(u),u-=g.left,u-=g.paddingLeft}this.endX=1===c.length?this.x+this.width:u,this.formatted=!0}draw(){var t;let e,i=this.checkContext();this.setRendered(),i.openGroup("stave",this.getAttribute("id")),this.formatted||this.format();let s=this.options.numLines,n=this.width,a=this.x,r=.5*((null!=(t=this.getStyle().lineWidth)?t:1)%2!=0);for(let t=0;t<s;t++)e=this.getYForLine(t),this.options.lineConfig[t].visible&&(i.beginPath(),i.moveTo(a,e+r),i.lineTo(a+n,e+r),i.stroke());i.closeGroup();for(let t=0;t<this.modifiers.length;t++){let e=this.modifiers[t];e.setContext(i),e.setStave(this),e.drawWithStyle()}if(this.measure>0){i.setFont(this.fontInfo);let t=i.measureText(""+this.measure).width;e=this.getYForTopText(0)+3,i.fillText(""+this.measure,this.x-t/2,e)}}getVerticalBarWidth(){return this.options.verticalBarWidth}getConfigForLines(){return this.options.lineConfig}setConfigForLine(t,e){if(t>=this.options.numLines||t<0)throw new n("StaveConfigError","The line number must be within the range of the number of lines in the Stave.");if(void 0===e.visible)throw new n("StaveConfigError","The line configuration object is missing the 'visible' property.");if("boolean"!=typeof e.visible)throw new n("StaveConfigError","The line configuration objects 'visible' property must be true or false.");return this.options.lineConfig[t]=e,this}setConfigForLines(t){if(t.length!==this.options.numLines)throw new n("StaveConfigError","The length of the lines configuration array must match the number of lines in the Stave");for(let e in t)void 0===t[e].visible&&(t[e]=this.options.lineConfig[e]),this.options.lineConfig[e]=Object.assign(Object.assign({},this.options.lineConfig[e]),t[e]);return this.options.lineConfig=t,this}static formatBegModifiers(t){let e=e=>{let i=0;t.forEach(t=>{let s=t.getModifiers(eI.BEGIN,e);s.length>0&&s[0].getX()>i&&(i=s[0].getX())});let s=0;t.forEach(t=>{s=0,t.getModifiers(eI.BEGIN,e).forEach(t=>{i-t.getX()>s&&(s=i-t.getX())});let n=t.getModifiers(eI.BEGIN),a=!1;n.forEach(t=>{t.getCategory()===e&&(a=!0),a&&s>0&&t.setX(t.getX()+s)}),t.setNoteStartX(t.getNoteStartX()+s)})};t.forEach(t=>{t.formatted||t.format()}),e("Clef"),e("KeySignature"),e("TimeSignature");let i=0;t.forEach(t=>{t.getNoteStartX()>i&&(i=t.getNoteStartX())}),t.forEach(t=>{t.setNoteStartX(i)}),i=0,t.forEach(t=>{t.getModifiers(eI.BEGIN,"Barline").forEach(t=>{t.getType()===eG.REPEAT_BEGIN&&t.getX()>i&&(i=t.getX())})}),t.forEach(t=>{t.getModifiers(eI.BEGIN,"Barline").forEach(t=>{t.getType()===eG.REPEAT_BEGIN&&t.setX(i)})})}}function t9(t,e,i,s,a){if(e!==t7.type.BOLD_DOUBLE_LEFT&&e!==t7.type.BOLD_DOUBLE_RIGHT)throw new n("InvalidConnector","A REPEAT_BEGIN or REPEAT_END type must be provided.");let r=3,o=3.5;e===t7.type.BOLD_DOUBLE_RIGHT&&(r=-5,o=3),t.fillRect(i+r,s,1,a-s),t.fillRect(i-2,s,o,a-s)}class t7 extends w{static get CATEGORY(){return"StaveConnector"}constructor(t,e){super(),this.thickness=N.STAVE_LINE_THICKNESS,this.topStave=t,this.bottomStave=e,this.type=t7.type.DOUBLE,this.xShift=0,this.texts=[]}setType(t){let e="string"==typeof t?t7.typeString[t]:t;return Object.values(t7.type).includes(e)&&(this.type=e),this}getType(){return this.type}setText(t,e={}){var i,s;let n=new w("StaveConnector.text");return n.setText(t),n.setXShift(null!=(i=e.shiftX)?i:0),n.setYShift(null!=(s=e.shiftY)?s:0),this.texts.push(n),this}draw(){let t=this.checkContext();this.setRendered();let e=this.topStave.getYForLine(0),i=this.bottomStave.getYForLine(this.bottomStave.getNumLines()-1)+this.thickness,s=3,a=this.topStave.getX();(this.type===t7.type.SINGLE_RIGHT||this.type===t7.type.BOLD_DOUBLE_RIGHT||this.type===t7.type.THIN_DOUBLE)&&(a=this.topStave.getX()+this.topStave.getWidth());let r=i-e,o=new w;switch(this.type){case t7.type.SINGLE:case t7.type.SINGLE_LEFT:case t7.type.SINGLE_RIGHT:s=1;break;case t7.type.DOUBLE:a-=5,e-=this.thickness,r+=.5;break;case t7.type.BRACE:{s=12;let n=this.topStave.getX()-2+this.xShift,a=e,o=i,h=n-s,l=a+r/2,c=h-.9*s,d=a+.2*r,u=n+1.1*s,g=l-.135*r,p=l+.135*r,m=o-.2*r,f=h-s,S=n+.4*s,T=l+.135*r,x=l-.135*r;t.beginPath(),t.moveTo(n,a),t.bezierCurveTo(c,d,u,g,h,l),t.bezierCurveTo(u,p,c,m,n,o),t.bezierCurveTo(f,m,S,T,h,l),t.bezierCurveTo(S,x,f,d,n,a),t.fill(),t.stroke();break}case t7.type.BRACKET:e-=6,i+=6,r=i-e,o.setText(eO.bracketTop),o.renderText(t,a-5,e),o.setText(eO.bracketBottom),o.renderText(t,a-5,i),a-=5;break;case t7.type.BOLD_DOUBLE_LEFT:t9(t,this.type,a+this.xShift,e,i-this.thickness);break;case t7.type.BOLD_DOUBLE_RIGHT:t9(t,this.type,a,e,i-this.thickness);break;case t7.type.THIN_DOUBLE:s=1,r-=this.thickness;break;case t7.type.NONE:break;default:throw new n("InvalidType",`The provided StaveConnector.type (${this.type}) is invalid.`)}this.type!==t7.type.BRACE&&this.type!==t7.type.BOLD_DOUBLE_LEFT&&this.type!==t7.type.BOLD_DOUBLE_RIGHT&&this.type!==t7.type.NONE&&t.fillRect(a,e,s,r),this.type===t7.type.THIN_DOUBLE&&t.fillRect(a-3,e,s,r);for(let e=0;e<this.texts.length;e++){let i=this.texts[e],s=this.topStave.getX()-i.getWidth()-24,n=(this.topStave.getYForLine(0)+this.bottomStave.getBottomLineY())/2;i.renderText(t,s,n+4)}}}function et(t,e,i,s){let n=e;for(let e=i+1;e<t.length;e++){let i=t[e];if(M(i)&&!i.isRest()&&!i.shouldIgnoreTicks()){n=i.getLineForRest();break}}return s&&e!==n&&(n=h(Math.max(e,n),Math.min(e,n))),n}t7.type={SINGLE_RIGHT:0,SINGLE_LEFT:1,SINGLE:1,DOUBLE:2,BRACE:3,BRACKET:4,BOLD_DOUBLE_LEFT:5,BOLD_DOUBLE_RIGHT:6,THIN_DOUBLE:7,NONE:8},t7.typeString={singleRight:t7.type.SINGLE_RIGHT,singleLeft:t7.type.SINGLE_LEFT,single:t7.type.SINGLE,double:t7.type.DOUBLE,brace:t7.type.BRACE,bracket:t7.type.BRACKET,boldDoubleLeft:t7.type.BOLD_DOUBLE_LEFT,boldDoubleRight:t7.type.BOLD_DOUBLE_RIGHT,thinDouble:t7.type.THIN_DOUBLE,none:t7.type.NONE};class ee{static SimpleFormat(t,e=0,{paddingBetween:i=10}={}){t.reduce((t,e)=>{e.addToModifierContext(new tK);let s=new tm().addTickable(e).preFormat(),n=s.getMetrics();return s.setX(t+n.totalLeftPx),t+s.getWidth()+n.totalRightPx+i},e)}static plotDebugging(t,e,i,s,n,a){var r,o;let h=i+(a=Object.assign({stavePadding:p.get("Stave.padding")},a)).stavePadding,l=e.contextGaps;t.save(),t.setFont(p.get("fontFamily"),8),l.gaps.forEach(e=>{var i,a;i=h+e.x1,a=h+e.x2,t.beginPath(),t.setStrokeStyle("rgba(100,200,100,0.4)"),t.setFillStyle("rgba(100,200,100,0.4)"),t.setLineWidth(1),t.fillRect(i,s,Math.max(a-i,0),n-s),t.setFillStyle("green"),t.fillText(Math.round(e.x2-e.x1).toString(),h+e.x1,n+12)}),t.setFillStyle("red"),t.fillText(`Loss: ${(null!=(r=e.totalCost)?r:0).toFixed(2)} Shift: ${(null!=(o=e.totalShift)?o:0).toFixed(2)} Gap: ${l.total.toFixed(2)}`,h-20,n+27),t.restore()}static FormatAndDraw(t,e,i,s){let n={autoBeam:!1,alignRests:!1};"object"==typeof s?n=Object.assign(Object.assign({},n),s):"boolean"==typeof s&&(n.autoBeam=s);let a=new tI(N.TIME4_4).setMode(tI.Mode.SOFT).addTickables(i),r=n.autoBeam?tr.applyAndGetBeams(a):[];return new ee().joinVoices([a]).formatToStave([a],e,{alignRests:n.alignRests,stave:e}),a.setContext(t).setStave(e).drawWithStyle(),r.forEach(e=>e.setContext(t).drawWithStyle()),a.getBoundingBox()}static FormatAndDrawTab(t,e,i,s,n,a,r){let o={autoBeam:a,alignRests:!1};"object"==typeof r?o=Object.assign(Object.assign({},o),r):"boolean"==typeof r&&(o.autoBeam=r);let h=new tI(N.TIME4_4).setMode(tI.Mode.SOFT).addTickables(n),l=new tI(N.TIME4_4).setMode(tI.Mode.SOFT).addTickables(s),c=o.autoBeam?tr.applyAndGetBeams(h):[];new ee().joinVoices([h]).joinVoices([l]).formatToStave([h,l],i,{alignRests:o.alignRests}),h.draw(t,i),l.draw(t,e),c.forEach(e=>e.setContext(t).drawWithStyle()),new t7(i,e).setContext(t).drawWithStyle()}static AlignRestsToNotes(t,e,i){t.forEach((s,n)=>{if(I(s)&&s.isRest()&&(!s.getTuplet()||i)&&3===s.getLineForRest()&&(e||s.getBeam())){let e=s.getKeyProps()[0];if(0===n)e.line=et(t,e.line,n,!1);else if(n>0&&n<t.length){let i=t[n-1];I(i)&&(i.isRest()?e.line=i.getKeyProps()[0].line:e.line=et(t,i.getLineForRest(),n,!0))}s.setKeyLine(0,e.line)}})}constructor(t){this.formatterOptions=Object.assign({globalSoftmax:!1,softmaxFactor:N.SOFTMAX_FACTOR,maxIterations:5},t),this.justifyWidth=0,this.totalCost=0,this.totalShift=0,this.durationStats={},this.minTotalWidth=0,this.hasMinTotalWidth=!1,this.tickContexts={map:{},array:[],list:[],resolutionMultiplier:0},this.modifierContexts=[],this.contextGaps={total:0,gaps:[]},this.voices=[],this.lossHistory=[]}alignRests(t,e){if(!t||!t.length)throw new n("BadArgument","No voices to format rests");t.forEach(t=>ee.AlignRestsToNotes(t.getTickables(),e))}preCalculateMinTotalWidth(t){let e=p.get("Stave.unalignedNotePadding"),i=0,s=0,a=0,r=[],o=[];if(this.hasMinTotalWidth)return this.minTotalWidth;if(!t)throw new n("BadArgument","'voices' required to run preCalculateMinTotalWidth");this.createTickContexts(t);let{list:h,map:l}=this.tickContexts;this.minTotalWidth=0,h.forEach(e=>{let n=l[e];n.preFormat(),n.getTickables().length<t.length&&(i+=1),n.getTickables().forEach(t=>{s+=t.getMetrics().width,a+=t.getTicks().value(),r.push(t.getMetrics().width),o.push(t.getTicks().value())});let h=n.getWidth();this.minTotalWidth+=h}),this.hasMinTotalWidth=!0;let c=s>0?s/r.length:1/r.length,u=Math.pow(d(r.map(t=>Math.pow(t-c,2)))/r.length,.5)/c,g=a/o.length,m=Math.max(Math.pow(d(o.map(t=>Math.pow(t-g,2)))/o.length,.5)/g,u)*h.length*e,f=e*i;return this.minTotalWidth+Math.max(f,m)}getMinTotalWidth(){if(!this.hasMinTotalWidth)throw new n("NoMinTotalWidth","Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'");return this.minTotalWidth}static getResolutionMultiplier(t){if(!t||!t.length)throw new n("BadArgument","No voices to format");let e=t[0].getTotalTicks();return t.reduce((t,i)=>{if(!i.getTotalTicks().equals(e))throw new n("TickMismatch","Voices should have same total note duration in ticks.");if(i.getMode()===tI.Mode.STRICT&&!i.isComplete())throw new n("IncompleteVoice","Voice does not have enough notes.");return Math.max(t,u.LCM(t,i.getResolutionMultiplier()))},1)}createModifierContexts(t){if(0===t.length)return;let e=ee.getResolutionMultiplier(t),i=new Map,s=[];t.forEach(t=>{let n=new u(0,e);t.getTickables().forEach(t=>{let e=n.numerator,a=i.get(t.getStave());if(a||(i.set(t.getStave(),{}),a=i.get(t.getStave())),!(a?a[e]:void 0)){let t=new tK;s.push(t),a[e]=t}t.addToModifierContext(a[e]),n.add(t.getTicks())})}),this.modifierContexts.push({map:i,array:s,resolutionMultiplier:e})}createTickContexts(t){let e=function(t,e,i){if(0===t.length)return{map:{},array:[],list:[],resolutionMultiplier:0};let s={},n=[],a=[],r=ee.getResolutionMultiplier(t);return t.forEach((t,o)=>{let h=new u(0,r);t.getTickables().forEach(t=>{let r=h.numerator;if(!s[r]){let t=e({tickID:r});a.push(t),s[r]=t,n.push(r)}i(t,s[r],o),h.add(t.getTicks())})}),{map:s,array:a,list:n.sort((t,e)=>t-e),resolutionMultiplier:r}}(t,t=>new tm(t),(t,e,i)=>e.addTickable(t,i));this.tickContexts=e;let i=this.tickContexts.array;return i.forEach(t=>{t.tContexts=i}),e}getTickContexts(){return this.tickContexts}preFormat(t=0,e,i,s){let a=this.tickContexts;if(!a)throw new n("NoTickContexts","preFormat requires TickContexts");let{list:o,map:h}=a;this.lossHistory=[],i&&s&&i.forEach(t=>t.setStave(s).preFormat());let l=0,c=0;this.minTotalWidth=0;let u=0;o.forEach(t=>{let e=h[t];e.preFormat();let i=e.getWidth();this.minTotalWidth+=i;let s=e.getMaxTicks().value();u+=s;let n=e.getMetrics();l=l+c+n.totalLeftPx,e.setX(l),c=i-n.totalLeftPx});let{globalSoftmax:g,softmaxFactor:m,maxIterations:f}=this.formatterOptions,S=d(o.map(t=>Math.pow(m,h[t].getMaxTicks().value()/u)));if(this.minTotalWidth=l+c,this.hasMinTotalWidth=!0,t<=0)return this.evaluate();let T=h[o[0]],x=h[o[o.length-1]];function w(t){return o.map((e,i)=>{let s,n=h[e],a=n.getTickablesByVoice();if(i>0){let e=h[o[i-1]];for(let r=i-1;r>=0;r--){let i=h[o[r]].getTickablesByVoice(),l=[];if(Object.keys(a).forEach(t=>{i[t]&&l.push(t)}),l.length>0){let r=0,o=1/0,h=0;return l.forEach(t=>{let e=i[t].getTicks().value();e>r&&(s=i[t],r=e);let n=a[t],h=n.getX()-(n.getMetrics().modLeftPx+n.getMetrics().leftDisplacedHeadPx),l=i[t].getMetrics(),c=i[t].getX()+l.notePx+l.modRightPx+l.rightDisplacedHeadPx;o=Math.min(o,h-c)}),o=Math.min(o,n.getX()-(e.getX()+.05*t)),g?h=Math.pow(m,r/u)/S*t:void 0!==s&&(h=s.getVoice().softmax(r)*t),{expectedDistance:h,maxNegativeShiftPx:o,fromTickable:s}}}}return{expectedDistance:0,fromTickablePx:0,maxNegativeShiftPx:0}})}function b(t){let e=y/2,i=0;return o.forEach((s,n)=>{let a=h[s];if(n>0){let e=a.getX(),s=t[n],o=r(s.fromTickable).getX()+s.expectedDistance-(e+i),h=0;o>0?i+=o:o<0&&(h=Math.min(s.maxNegativeShiftPx,Math.abs(o)),i+=-h),a.setX(e+i)}a.getCenterAlignedTickables().forEach(t=>{t.setCenterXShift(e-a.getX())})}),x.getX()-T.getX()}let y=t-x.getMetrics().notePx-x.getMetrics().totalRightPx-T.getMetrics().totalLeftPx,C=p.get("Stave.endPaddingMin"),k=p.get("Stave.endPaddingMax"),A=p.get("Stave.padding"),B=y,E=w(B),D=b(E);if(1===o.length)return 0;let v=((t,e)=>{let i=t/2;if(e.length>1)for(let t=1;t<e.length;++t)i=Math.min(e[t].expectedDistance/2,i);return i})(B,E),L=t=>{let e=0,i=x&&x.getMaxTickable();if(i){let s=i.getVoice();if(s.getTicksUsed().value()>s.getTotalTicks().value())return 2*k<v?v:k;let n=i.getWidth();e=s.softmax(x.getMaxTicks().value())*t-(n+A)}return 2*k<e?e:k},N=L(B),F=N-(k-C),R=y-F,O=f;for(;D>R&&O>0||D+N<R&&O>1;)B-=D-R,F=(N=L(B))-(k-C),D=b(w(B)),O--;return this.justifyWidth=t,this.evaluate()}evaluate(){let t=this.tickContexts,e=this.justifyWidth;this.contextGaps={total:0,gaps:[]},t.list.forEach((e,i)=>{if(0===i)return;let s=t.list[i-1],n=t.map[s],a=t.map[e],r=n.getMetrics(),o=a.getMetrics(),h=n.getX()+r.notePx+r.totalRightPx,l=a.getX()-o.totalLeftPx,c=l-h;this.contextGaps.total+=c,this.contextGaps.gaps.push({x1:h,x2:l}),a.getFormatterMetrics().freedom.left=c,n.getFormatterMetrics().freedom.right=c}),this.durationStats={};let i=this.durationStats;this.voices.forEach(t=>{t.getTickables().forEach((t,s,n)=>{let a=t.getTicks().clone().simplify().toString(),r=t.getMetrics(),o=t.getFormatterMetrics(),h=t.getX()+r.notePx+r.modRightPx+r.rightDisplacedHeadPx,l=0;if(s<n.length-1){let e=n[s+1],i=e.getMetrics();l=e.getX()-i.modLeftPx-i.leftDisplacedHeadPx-h,o.space.used=e.getX()-t.getX(),e.getFormatterMetrics().freedom.left=l}else l=e-h,o.space.used=e-t.getX();o.freedom.right=l;var c=o.space.used;let d=i[a];void 0===d?i[a]={mean:c,count:1,total:c}:(d.count+=1,d.total+=c,d.mean=d.total/d.count)})});let s=0;return this.voices.forEach(t=>{t.getTickables().forEach(t=>{let e=t.getTicks().clone().simplify().toString(),n=t.getFormatterMetrics();n.space.mean=i[e].mean,n.duration=e,n.iterations+=1,n.space.deviation=n.space.used-n.space.mean,s+=Math.pow(n.space.deviation,2)})}),this.totalCost=Math.sqrt(s),this.lossHistory.push(this.totalCost),this.totalCost}tune(t){var e;let i=this.tickContexts;if(!i)return 0;let s=null!=(e=null==t?void 0:t.alpha)?e:.5,n=0;return this.totalShift=0,i.list.forEach((t,e,a)=>{let r=i.map[t],o=e>0?i.map[a[e-1]]:void 0,h=e<a.length-1?i.map[a[e+1]]:void 0;r.move(n,o,h);let l=-r.getDeviationCost();l>0?n=-Math.min(r.getFormatterMetrics().freedom.right,Math.abs(l)):l<0&&(n=h?Math.min(h.getFormatterMetrics().freedom.right,Math.abs(l)):0),n*=s,this.totalShift+=n}),this.evaluate()}postFormat(){return this.modifierContexts.forEach(t=>{t.array.forEach(t=>t.postFormat())}),this.tickContexts.list.forEach(t=>{this.tickContexts.map[t].postFormat()}),this}joinVoices(t){return this.createModifierContexts(t),this.hasMinTotalWidth=!1,this}format(t,e,i){let s=Object.assign({alignRests:!1},i);this.voices=t;let n=this.formatterOptions.softmaxFactor;return n&&this.voices.forEach(t=>t.setSoftmaxFactor(n)),this.alignRests(t,s.alignRests),this.createTickContexts(t),this.preFormat(e,s.context,t,s.stave),s.stave&&this.postFormat(),this}formatToStave(t,e,i){let s=Object.assign({context:e.getContext()},i),n=e.getNoteEndX()-e.getNoteStartX()-t8.defaultPadding;return!function(...t){ee.DEBUG&&o("VexFlow.Formatter",t)}("Formatting voices to width: ",n),this.format(t,n,s)}getTickContext(t){var e;return null==(e=this.tickContexts)?void 0:e.map[t]}}ee.DEBUG=!1;let ei="Ghost note must have valid initialization data to identify duration.";class es extends tF{static get CATEGORY(){return"GhostNote"}constructor(t){let e;if(!t)throw new n("BadArguments",ei);if("string"==typeof t)e={duration:t};else if("object"==typeof t)e=t;else throw new n("BadArguments",ei);super(e),this.setWidth(0)}isRest(){return!0}setStave(t){return super.setStave(t),this}addToModifierContext(t){return this}preFormat(){return this.preFormatted=!0,this}draw(){this.setRendered();for(let t=0;t<this.modifiers.length;++t){let e=this.modifiers[t];R(e)&&(e.setContext(this.getContext()),e.drawWithStyle())}}}class en extends te{static get CATEGORY(){return"GlyphNote"}constructor(t,e,i){super(e),this.options=Object.assign({ignoreTicks:!1,line:2},i),this.ignoreTicks=this.options.ignoreTicks,this.setGlyph(t)}setGlyph(t){return this.text=t,this}preFormat(){return!this.preFormatted&&this.modifierContext&&this.modifierContext.preFormat(),this.preFormatted=!0,this}drawModifiers(){let t=this.checkContext();for(let e=0;e<this.modifiers.length;e++){let i=this.modifiers[e];i.setContext(t),i.drawWithStyle()}}draw(){let t=this.checkStave(),e=t.checkContext();this.setRendered(),e.openGroup("glyphNote",this.getAttribute("id")),this.x=this.isCenterAligned()?this.getAbsoluteX()-this.getWidth()/2:this.getAbsoluteX(),this.y=t.getYForLine(this.options.line),this.renderText(e,0,0),this.drawModifiers(),e.closeGroup()}}class ea extends tO{static get CATEGORY(){return"GraceNote"}static get LEDGER_LINE_OFFSET(){return 2}constructor(t){super(Object.assign({strokePx:ea.LEDGER_LINE_OFFSET},t)),this.slash=t.slash||!1,this.slur=!0,this.buildNoteHeads(),this.width=3}getStemExtension(){if(this.stemExtensionOverride)return this.stemExtensionOverride;let t=super.getStemExtension();return V.HEIGHT*this.getFontScale()-V.HEIGHT+t}draw(){super.draw(),this.setRendered();let t=this.stem;if(this.slash&&t){let t,e=this.getFontScale(),i=this.beam;if(i)i.postFormatted||i.postFormat(),t=this.calcBeamedNotesSlashBBox(8*e,8*e,{stem:6*e,beam:5*e});else{let i=this.getStemDirection(),s=this.getNoteHeadBounds(),n=this.noteHeads[0].getWidth(),a=i===V.DOWN?this.getAbsoluteX():this.getAbsoluteX()+n,r=N.STEM_HEIGHT*e/2,o=i===V.DOWN?s.yBottom+r:s.yTop-r;t=i===V.DOWN?{x1:a-n,y1:o-n,x2:a+n,y2:o+n}:{x1:a-n,y1:o+n,x2:a+n,y2:o-n}}let s=this.checkContext();s.setLineWidth(+e),s.beginPath(),s.moveTo(t.x1,t.y1),s.lineTo(t.x2,t.y2),s.closePath(),s.stroke()}}calcBeamedNotesSlashBBox(t,e,i){let s=this.beam;if(!s)throw new n("NoBeam","Can't calculate without a beam.");let a=s.slope,r=s.notes[s.notes.length-1]===this?-1:1,o=Math.atan(a*r),h={dx:Math.cos(o)*e,dy:Math.sin(o)*e};t*=this.getStemDirection();let l=Math.atan((h.dy-t)/h.dx),c=Math.cos(l)*i.stem*r,d=Math.sin(l)*i.stem,u=Math.cos(l)*i.beam*r,g=Math.sin(l)*i.beam,p=this.getStemX(),m=s.notes[0].getStemX(),f=s.getBeamYToDraw()+(p-m)*a;return{x1:p-c,y1:f+t-d,x2:p+h.dx*r+u,y2:f+h.dy+g}}}class er extends te{static get CATEGORY(){return"KeySigNote"}constructor(t,e,i){super({duration:"b"}),this.keySignature=new tZ(t,e,i),this.ignoreTicks=!0}addToModifierContext(t){return this}preFormat(){return this.preFormatted=!0,this.keySignature.setStave(this.checkStave()),this.setWidth(this.keySignature.getWidth()),this}draw(){let t=this.checkStave().checkContext();this.setRendered(),this.keySignature.setX(this.getAbsoluteX()),this.keySignature.setContext(t),this.keySignature.drawWithStyle()}}class eo extends w{static get CATEGORY(){return"MultiMeasureRest"}constructor(t,e){var i;super(),this.xs={left:NaN,right:NaN},this.hasPaddingLeft=!1,this.hasPaddingRight=!1,this.hasLineThickness=!1,this.hasSymbolSpacing=!1;let s=null!=(i=e.numberGlyphPoint)?i:p.get("MultiMeasureRest.fontSize");for(let e of(this.fontInfo.size=s,this.numberOfMeasures=t,this.text="",`${this.numberOfMeasures}`))this.text+=String.fromCodePoint(57472+Number(e));this.hasPaddingLeft="number"==typeof e.paddingLeft,this.hasPaddingRight="number"==typeof e.paddingRight,this.hasLineThickness="number"==typeof e.lineThickness,this.hasSymbolSpacing="number"==typeof e.symbolSpacing,this.renderOptions=Object.assign({useSymbols:!1,showNumber:!0,numberLine:-.5,numberGlyphPoint:s,line:2,spacingBetweenLinesPx:N.STAVE_LINE_DISTANCE,serifThickness:2,semibreveRestGlyphScale:p.get("fontSize"),paddingLeft:0,paddingRight:0,lineThickness:5,symbolSpacing:0},e)}getXs(){return this.xs}setStave(t){return this.stave=t,this}getStave(){return this.stave}checkStave(){return r(this.stave,"NoStave","No stave attached to instance.")}drawLine(t,e,i,s){let a=this.renderOptions,r=t.getYForLine(a.line),o=(s-i)*.1;i+=o,s-=o;let h="",l=new w;l.setText(h);let c=l.getWidth();if(!c)throw new n("Cannot drawLine if width is 0");for(let t=1;(t+2)*c+i<=s;t++)h+="";h+="",l.setText(h),l.renderText(e,i+(s-i)*.5-.5*l.getWidth(),r)}drawSymbols(t,e,i,s){let n=Math.floor(this.numberOfMeasures/4),a=this.numberOfMeasures%4,r=Math.floor(a/2),o=a%2,h=this.renderOptions,l=new w,c="";for(let t=0;t<n;++t)c+=eO.restLonga+" ";for(let t=0;t<r;++t)c+=eO.restDoubleWhole+" ";l.setText(c);let d=new w;c="";for(let t=0;t<o;++t)c+=eO.restWhole+" ";d.setText(c);let u=i+(s-i)*.5-.5*(l.getWidth()+d.getWidth()),g=h.line,p=t.getYForLine(g-1),m=t.getYForLine(g);l.renderText(e,u,m),u+=l.getWidth(),d.renderText(e,u,p),d.getWidth()}draw(){let t=this.checkContext();this.setRendered();let e=this.checkStave(),i=e.getNoteStartX(),s=e.getNoteEndX(),n=e.getModifiers(eI.BEGIN);1===n.length&&O(n[0])&&(i-=n[0].getWidth());let a=this.renderOptions;this.hasPaddingLeft&&(i=e.getX()+a.paddingLeft),this.hasPaddingRight&&(s=e.getX()+e.getWidth()-a.paddingRight),this.xs.left=i,this.xs.right=s,a.useSymbols?this.drawSymbols(e,t,i,s):this.drawLine(e,t,i,s),a.showNumber&&this.renderText(t,i+(s-i)*.5-.5*this.width,e.getYForLine(a.numberLine)-.5*this.height)}}class eh extends w{static get CATEGORY(){return"PedalMarking"}static createSustain(t){return new eh(t)}static createSostenuto(t){let e=new eh(t);return e.setType(eh.type.MIXED),e.setCustomText("Sost. Ped."),e}static createUnaCorda(t){let e=new eh(t);return e.setType(eh.type.TEXT),e.setCustomText("una corda","tre corda"),e}constructor(t){super(),this.notes=t,this.type=eh.type.TEXT,this.line=0,this.depressText=eh.GLYPHS.pedalDepress,this.releaseText=eh.GLYPHS.pedalRelease,this.renderOptions={bracketHeight:10,textMarginRight:6,bracketLineWidth:1,color:"black"}}setType(t){return(t="string"==typeof t?eh.typeString[t]:t)>=eh.type.TEXT&&t<=eh.type.MIXED&&(this.type=t),this}setCustomText(t,e){return this.depressText=t||"",this.releaseText=e||"",this.setFont(p.getFontInfo("PedalMarking.text")),this}setLine(t){return this.line=t,this}drawBracketed(){let t,e,i=this.checkContext(),s=!1,a=0;this.notes.forEach((r,o,h)=>{var l,c,d,u;s=!s;let g=r.getAbsoluteX(),p=r.checkStave().getYForBottomText(this.line+3);if(g<t)throw new n("InvalidConfiguration","The notes provided must be in order of ascending x positions");let m=h[o+1]===r,f=h[o-1]===r,S=0;if(s)S=5*!!f,this.type!==eh.type.MIXED||f?(i.beginPath(),i.moveTo(g,p-this.renderOptions.bracketHeight),i.lineTo(g+S,p),i.stroke(),i.closePath()):(a=i.measureText(this.depressText).width,i.fillText(this.depressText,g,p),S=a+this.renderOptions.textMarginRight);else{let s=r.getVoice().getTickables().indexOf(r),n=s+1<r.getVoice().getTickables().length?r.getVoice().getTickables()[s+1].getAbsoluteX():(null!=(c=null==(l=r.getStave())?void 0:l.getX())?c:0)+(null!=(u=null==(d=r.getStave())?void 0:d.getWidth())?u:0);i.beginPath(),i.moveTo(t,e),i.lineTo(m?g-5:n-5,p),i.lineTo(m?g:n-5,p-this.renderOptions.bracketHeight),i.stroke(),i.closePath()}t=g+S,e=p})}drawText(){let t=this.checkContext(),e=!1,i=0;this.notes.forEach(s=>{var n,a,r,o;e=!e;let h=s.checkStave(),l=s.getAbsoluteX(),c=h.getYForBottomText(this.line+3);if(e)i=t.measureText(this.depressText).width,t.fillText(this.depressText,l,c);else{let e=s.getVoice().getTickables().indexOf(s),h=e+1<s.getVoice().getTickables().length?s.getVoice().getTickables()[e+1].getAbsoluteX():(null!=(a=null==(n=s.getStave())?void 0:n.getX())?a:0)+(null!=(o=null==(r=s.getStave())?void 0:r.getWidth())?o:0);i=t.measureText(this.releaseText).width,t.fillText(this.releaseText,h-i,c)}})}draw(){let t=this.checkContext();this.setRendered(),t.setStrokeStyle(this.renderOptions.color),t.setFillStyle(this.renderOptions.color),t.setFont(this.font),function(...t){eh.DEBUG&&o("VexFlow.PedalMarking",t)}("Rendering Pedal Marking"),this.type===eh.type.BRACKET||this.type===eh.type.MIXED?(t.setLineWidth(this.renderOptions.bracketLineWidth),this.drawBracketed()):this.type===eh.type.TEXT&&this.drawText()}}eh.DEBUG=!1,eh.GLYPHS={pedalDepress:eO.keyboardPedalPed,pedalRelease:eO.keyboardPedalUp},eh.type={TEXT:1,BRACKET:2,MIXED:3},eh.typeString={text:eh.type.TEXT,bracket:eh.type.BRACKET,mixed:eh.type.MIXED};let el={1:eO.repeat1Bar,2:eO.repeat2Bars,4:eO.repeat4Bars,slash:eO.repeatBarSlash};class ec extends en{static get CATEGORY(){return"RepeatNote"}constructor(t,e,i){super(el[t]||"",Object.assign({duration:"q",alignCenter:"slash"!==t},e),i)}}function ed(t,e,i,s,n,a,r){t.beginPath(),t.moveTo(e,i),t.lineTo(s,n),t.lineTo(a,r),t.lineTo(e,i),t.closePath(),t.fill()}class eu extends w{static get CATEGORY(){return"StaveLine"}constructor(t){super(),this.setNotes(t),this.text="",this.renderOptions={paddingLeft:4,paddingRight:3,lineWidth:1,lineDash:void 0,roundedEnd:!0,color:void 0,drawStartArrow:!1,drawEndArrow:!1,arrowheadLength:10,arrowheadAngle:Math.PI/8,textPositionVertical:eu.TextVerticalPosition.TOP,textJustification:eu.TextJustification.CENTER}}setText(t){return this.text=t,this}setNotes(t){if(!t.firstNote&&!t.lastNote)throw new n("BadArguments","Notes needs to have either firstNote or lastNote set.");if(t.firstIndexes||(t.firstIndexes=[0]),t.lastIndexes||(t.lastIndexes=[0]),t.firstIndexes.length!==t.lastIndexes.length)throw new n("BadArguments","Connected notes must have same number of indexes.");return this.notes=t,this.firstNote=t.firstNote,this.firstIndexes=t.firstIndexes,this.lastNote=t.lastNote,this.lastIndexes=t.lastIndexes,this}applyLineStyle(){let t=this.checkContext(),e=this.renderOptions;e.lineDash&&t.setLineDash(e.lineDash),e.lineWidth&&t.setLineWidth(e.lineWidth),e.roundedEnd?t.setLineCap("round"):t.setLineCap("square")}drawArrowLine(t,e,i){let s,n,a,r,o,h,l,c,d,u,g=this.renderOptions.drawStartArrow&&this.renderOptions.drawEndArrow,p=e.x,m=e.y,f=i.x,S=i.y,T=Math.sqrt((f-p)*(f-p)+(S-m)*(S-m)),x=(T-this.renderOptions.arrowheadLength/3)/T;this.renderOptions.drawEndArrow||g?(s=Math.round(p+(f-p)*x),n=Math.round(m+(S-m)*x)):(s=f,n=S),this.renderOptions.drawStartArrow||g?(a=p+(f-p)*(1-x),r=m+(S-m)*(1-x)):(a=p,r=m),this.renderOptions.color&&(t.setStrokeStyle(this.renderOptions.color),t.setFillStyle(this.renderOptions.color)),t.beginPath(),t.moveTo(a,r),t.lineTo(s,n),t.stroke(),t.closePath();let w=Math.atan2(S-m,f-p),b=Math.abs(this.renderOptions.arrowheadLength/Math.cos(this.renderOptions.arrowheadAngle));(this.renderOptions.drawEndArrow||g)&&(l=f+Math.cos(o=w+Math.PI+this.renderOptions.arrowheadAngle)*b,c=S+Math.sin(o)*b,d=f+Math.cos(h=w+Math.PI-this.renderOptions.arrowheadAngle)*b,u=S+Math.sin(h)*b,ed(t,l,c,f,S,d,u)),(this.renderOptions.drawStartArrow||g)&&(l=p+Math.cos(o=w+this.renderOptions.arrowheadAngle)*b,c=m+Math.sin(o)*b,d=p+Math.cos(h=w-this.renderOptions.arrowheadAngle)*b,u=m+Math.sin(h)*b,ed(t,l,c,p,m,d,u))}draw(){let t=this.checkContext();this.setRendered();let e=this.firstNote,i=this.lastNote,s=this.renderOptions;this.applyLineStyle();let n={x:0,y:0},a={x:0,y:0};this.firstIndexes.forEach((r,o)=>{let h=this.lastIndexes[o];n=e.getModifierStartXY(2,r),a=i.getModifierStartXY(1,h);let l=n.y>a.y;n.x+=e.getMetrics().modRightPx+s.paddingLeft,a.x-=i.getMetrics().modLeftPx+s.paddingRight;let c=e.getGlyphWidth();e.getKeyProps()[r].displaced&&1===e.getStemDirection()&&(n.x+=c+s.paddingLeft),i.getKeyProps()[h].displaced&&-1===i.getStemDirection()&&(a.x-=c+s.paddingRight),n.y+=l?-3:1,a.y+=2*!!l,this.drawArrowLine(t,n,a)});let r=this.width,o=s.textJustification,h=0;o===eu.TextJustification.LEFT?h=n.x:o===eu.TextJustification.CENTER?h=(a.x-n.x)/2+n.x-r/2:o===eu.TextJustification.RIGHT&&(h=a.x-r);let l=0,c=s.textPositionVertical;c===eu.TextVerticalPosition.TOP?l=e.checkStave().getYForTopText():c===eu.TextVerticalPosition.BOTTOM&&(l=e.checkStave().getYForBottomText(N.TEXT_HEIGHT_OFFSET_HACK));let d=s.color;this.applyStyle(t,{fillStyle:d,strokeStyle:d}),this.renderText(t,h,l)}}eu.TextVerticalPosition={TOP:1,BOTTOM:2},eu.TextJustification=eJ;class eg extends w{static get CATEGORY(){return"System"}constructor(t={}){super(),this.setOptions(t),this.partStaves=[],this.partStaveInfos=[],this.partVoices=[]}setOptions(t={}){if(!t.factory)throw new n("NoFactory","System.setOptions(options) requires a factory.");this.factory=t.factory,this.options=Object.assign(Object.assign({factory:this.factory,x:10,y:10,width:500,spaceBetweenStaves:12,autoWidth:!1,noJustification:!1,debugFormatter:!1,formatIterations:0,noPadding:!1},t),{details:Object.assign({alpha:.5},t.details),formatOptions:Object.assign({},t.formatOptions)}),!1===this.options.noJustification&&void 0===t.width&&(this.options.autoWidth=!0)}getX(){return this.options.x}setX(t){return this.options.x=t,this.partStaves.forEach(e=>{e.setX(t)}),this}getY(){return this.options.y}setY(t){return this.options.y=t,this.partStaves.forEach(e=>{e.setY(t)}),this}getStaves(){return this.partStaves}getVoices(){return this.partVoices}setContext(t){return super.setContext(t),this.factory.setContext(t),this}addConnector(t="double"){return this.connector=this.factory.StaveConnector({topStave:this.partStaves[0],bottomStave:this.partStaves[this.partStaves.length-1],type:t}),this.connector}addStave(t){var e;let i=Object.assign({leftBar:!1},t.options),s=null!=(e=t.stave)?e:this.factory.Stave({x:this.options.x,y:this.options.y,width:this.options.width,options:i}),n=Object.assign(Object.assign({spaceAbove:0,spaceBelow:0,debugNoteMetrics:!1,noJustification:!1},t),{options:i}),a=this.getContext();return n.voices.forEach(t=>{t.setContext(a).setStave(s).getTickables().forEach(t=>t.setStave(s)),this.partVoices.push(t)}),this.partStaves.push(s),this.partStaveInfos.push(n),s}addVoices(t){let e=this.getContext();t.forEach(t=>{t.setContext(e),this.partVoices.push(t)})}format(){let t=this.options.details,e=0,i=new ee(t);this.formatter=i;let s=this.options.y,n=0,a=[];this.partStaves.forEach((t,e)=>{s+=t.space(this.partStaveInfos[e].spaceAbove),t.setY(s),s+=t.space(this.partStaveInfos[e].spaceBelow),s+=t.space(this.options.spaceBetweenStaves),this.partStaveInfos[e].debugNoteMetrics&&(a.push({y:s,stave:t}),s+=15),n=Math.max(n,t.getNoteStartX())}),this.partVoices.forEach(t=>{t.getTickables().forEach(t=>{let e=t.getStave();e&&t.setStave(e)})}),i.joinVoices(this.partVoices),this.partStaves.forEach(t=>t.setNoteStartX(n)),this.options.autoWidth&&this.partVoices.length>0?(e=i.preCalculateMinTotalWidth(this.partVoices),this.options.width=e+t8.rightPadding+(n-this.options.x),this.partStaves.forEach(t=>{t.setWidth(this.options.width)})):e=this.options.noPadding?this.options.width-(n-this.options.x):this.options.width-(n-this.options.x)-t8.defaultPadding,this.partVoices.length>0&&i.format(this.partVoices,this.options.noJustification?0:e,this.options.formatOptions),i.postFormat();for(let e=0;e<this.options.formatIterations;e++)i.tune(t);this.startX=n,this.debugNoteMetricsYs=a,this.lastY=s,t8.formatBegModifiers(this.partStaves)}getBoundingBox(){var t;return new f(this.options.x,this.options.y,this.options.width,(null!=(t=this.lastY)?t:0)-this.options.y)}draw(){let t=this.checkContext();if(!this.formatter||!this.startX||!this.lastY||!this.debugNoteMetricsYs)throw new n("NoFormatter","format() must be called before draw()");this.setRendered(),this.options.debugFormatter&&ee.plotDebugging(t,this.formatter,this.startX,this.options.y,this.lastY),this.debugNoteMetricsYs.forEach(e=>{this.partVoices.forEach(i=>{i.getTickables().forEach(i=>{i.getStave()===e.stave&&te.plotMetrics(t,i,e.y)})})})}}class ep extends tF{static get CATEGORY(){return"TabNote"}constructor(t,e=!1){super(t),this.fretElement=[],this.greatestString=()=>this.positions.map(t=>t.str).reduce((t,e)=>t>e?t:e),this.leastString=()=>this.positions.map(t=>t.str).reduce((t,e)=>t<e?t:e),this.ghost=!1,this.positions=t.positions||[],this.renderOptions=Object.assign(Object.assign({},this.renderOptions),{drawStem:e,drawDots:e,drawStemThroughStave:!1,yShift:0}),this.glyphProps=te.getGlyphProps(this.duration,this.noteType),r(this.glyphProps,"BadArguments",`No glyph found for duration '${this.duration}' and type '${this.noteType}'`),this.buildStem(),t.stemDirection?this.setStemDirection(t.stemDirection):this.setStemDirection(V.UP),this.ghost=!1,this.updateWidth()}reset(){return super.reset(),this.stave&&this.setStave(this.stave),this}setGhost(t){return this.ghost=t,this.updateWidth(),this}hasStem(){return!!this.renderOptions.drawStem}getStemExtension(){return void 0!==this.stemExtensionOverride?this.stemExtensionOverride:this.flag.getHeight()>V.HEIGHT?this.flag.getHeight()-V.HEIGHT:0}static tabToElement(t){let e;return"X"===t.toUpperCase()?(e=new w("TabNote")).setText(eO.accidentalDoubleSharp):((e=new w("TabNote.text")).setText(t),e.setYShift(e.getHeight()/2)),e}updateWidth(){this.fretElement=[],this.width=0;for(let t=0;t<this.positions.length;++t){let e=this.positions[t].fret;this.ghost&&(e="("+e+")");let i=ep.tabToElement(e.toString());this.fretElement.push(i),this.width=Math.max(i.getWidth(),this.width)}}setStave(t){super.setStave(t);let e=t.getContext();this.setContext(e);let i=this.positions.map(({str:e})=>t.getYForLine(Number(e)-1));return this.setYs(i),this.stem&&this.stem.setYBounds(this.getStemY(),this.getStemY()),this}getPositions(){return this.positions}getModifierStartXY(t,e){if(!this.preFormatted)throw new n("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");if(0===this.ys.length)throw new n("NoYValues","No Y-Values calculated for this note.");let i=0;return t===b.Position.LEFT?i=-2:t===b.Position.RIGHT?i=this.width+2:(t===b.Position.BELOW||t===b.Position.ABOVE)&&(i=this.width/2),{x:this.getAbsoluteX()+i,y:this.ys[e]}}getLineForRest(){return Number(this.positions[0].str)}preFormat(){this.preFormatted||(this.modifierContext&&this.modifierContext.preFormat(),this.preFormatted=!0)}getStemX(){return this.getCenterGlyphX()}getStemY(){let t=this.checkStave().getNumLines(),e=V.UP===this.stemDirection?-.5:t-.5;return this.checkStave().getYForLine(e)}getStemExtents(){return this.checkStem().getExtents()}drawFlag(){let{beam:t,glyphProps:e,renderOptions:{drawStem:i}}=this,s=this.checkContext();if(e.codeFlagUp&&void 0===t&&i){let t=this.getStemX(),e=this.getStemDirection()===V.DOWN?this.getStemY()-this.checkStem().getHeight()-this.getStemExtension():this.getStemY()-this.checkStem().getHeight()+this.getStemExtension();this.flag.setContext(s).setX(t).setY(e).drawWithStyle()}}drawModifiers(){this.modifiers.forEach(t=>{(!F(t,"Dot")||this.renderOptions.drawDots)&&(t.setContext(this.getContext()),t.drawWithStyle())})}drawStemThrough(){let t=this.getStemX(),e=this.getStemY(),i=this.checkContext(),s=this.renderOptions.drawStem,n=this.renderOptions.drawStemThroughStave;if(s&&n){let s=function(t,e,i,s){let n=1!==s,a=-1!==s,r=i.getSpacingBetweenLines(),o=i.getNumLines(),h=[];return e.forEach(e=>{let l=e.indexOf(o)>-1,c=e.indexOf(1)>-1;if(n&&c||a&&l)return;1===e.length&&e.push(e[0]);let d=[];e.forEach((e,n,a)=>{let h=1===e,l=e===o,c=i.getYForLine(e-1);0!==n||h?n!==a.length-1||l||(c+=r/2-1):c-=r/2-1,d.push(c),1===s&&h?d.push(t-2):-1===s&&l&&d.push(t+2)}),h.push(d.sort((t,e)=>t-e))}),h}(e,function(t,e){let i=[],s=[];for(let n=1;n<=t;n++)e.indexOf(n)>-1?(i.push(s),s=[]):s.push(n);return s.length>0&&i.push(s),i}(this.checkStave().getNumLines(),this.positions.map(t=>Number(t.str))),this.checkStave(),this.getStemDirection());i.setLineWidth(V.WIDTH),s.forEach(e=>{0!==e.length&&(i.beginPath(),i.moveTo(t,e[0]),i.lineTo(t,e[e.length-1]),i.stroke(),i.closePath())})}}drawPositions(){let t=this.checkContext(),e=this.getAbsoluteX(),i=this.ys;for(let s=0;s<this.positions.length;++s){let n=i[s]+this.renderOptions.yShift,a=this.fretElement[s],r=e-a.getWidth()/2;t.clearRect(r-2,n-3,a.getWidth()+4,6),a.renderText(t,r,n)}}draw(){let t=this.checkContext();if(0===this.ys.length)throw new n("NoYValues","Can't draw note without Y values.");this.setRendered();let e=void 0===this.beam&&this.renderOptions.drawStem;if(t.openGroup("tabnote",this.getAttribute("id")),this.drawPositions(),this.drawStemThrough(),this.stem&&e){let e=this.getStemX();this.stem.setNoteHeadXBounds(e,e),this.stem.setContext(t).drawWithStyle()}this.drawFlag(),this.drawModifiers(),t.closeGroup()}}class em extends t8{static get CATEGORY(){return"TabStave"}constructor(t,e,i,s){super(t,e,i,Object.assign({spacingBetweenLinesPx:13,numLines:6,topTextPosition:1},s))}getYForGlyphs(){return this.getYForLine(2.5)}addTabGlyph(){return this.addClef("tab"),this}}!function(t){t[t.TOP=1]="TOP",t[t.BOTTOM=-1]="BOTTOM"}(eq||(eq={}));class ef extends w{static get CATEGORY(){return"TextBracket"}static get Position(){return eq}static get PositionString(){return{top:eq.TOP,bottom:eq.BOTTOM}}constructor({start:t,stop:e,text:i="",superscript:s="",position:n=eq.TOP}){super(),this.start=t,this.stop=e,this.textElement=new w("TextBracket"),this.textElement.setText(i),this.superscriptElement=new w("TextBracket"),this.superscriptElement.setText(s);let a=S.scaleSize(this.fontInfo.size,.714286);this.superscriptElement.setFontSize(a),this.position="string"==typeof n?ef.PositionString[n]:n,this.line=1,this.renderOptions={dashed:!0,dash:[5],color:"black",lineWidth:1,showBracket:!0,bracketHeight:8,underlineSuperscript:!0}}applyStyle(t){this.textElement.setFont(this.fontInfo);let{family:e,size:i,weight:s,style:n}=this.fontInfo,a=S.scaleSize(i,.714286);this.superscriptElement.setFont(e,a,s,n);let r=this.renderOptions;return t.setStrokeStyle(r.color),t.setFillStyle(r.color),t.setLineWidth(r.lineWidth),this}setDashed(t,e){return this.renderOptions.dashed=t,e&&(this.renderOptions.dash=e),this}setLine(t){return this.line=t,this}draw(){let t=this.checkContext();this.setRendered();let e=0;switch(this.position){case eq.TOP:e=this.start.checkStave().getYForTopText(this.line);break;case eq.BOTTOM:e=this.start.checkStave().getYForBottomText(this.line+N.TEXT_HEIGHT_OFFSET_HACK);break;default:throw new n("InvalidPosition",`The position ${this.position} is invalid.`)}let i={x:this.start.getAbsoluteX(),y:e},s={x:this.stop.getAbsoluteX(),y:e};!function(...t){ef.DEBUG&&o("VexFlow.TextBracket",t)}("Rendering TextBracket: start:",i,"stop:",s,"y:",e);let a=this.renderOptions.bracketHeight*this.position;this.textElement.renderText(t,i.x,i.y);let r=this.textElement.getWidth(),h=this.textElement.getHeight(),l=i.y-h/2.5;this.superscriptElement.renderText(t,i.x+r+1,l);let c=this.superscriptElement.getWidth(),d=this.superscriptElement.getHeight(),u=i.x,g=l,p=s.x+this.stop.getGlyphWidth();this.position===eq.TOP?(u+=r+c+5,g-=d/2.7):this.position===eq.BOTTOM&&(g+=d/2.7,u+=r+2,this.renderOptions.underlineSuperscript||(u+=c)),this.renderOptions.dashed?(tz.drawDashedLine(t,u,g,p,g,this.renderOptions.dash),this.renderOptions.showBracket&&tz.drawDashedLine(t,p,g+ +this.position,p,g+a,this.renderOptions.dash)):(t.beginPath(),t.moveTo(u,g),t.lineTo(p,g),this.renderOptions.showBracket&&t.lineTo(p,g+a),t.stroke(),t.closePath())}}function eS(...t){eT.DEBUG&&o("VexFlow.TextDynamics",t)}ef.DEBUG=!1;class eT extends te{static get CATEGORY(){return"TextDynamics"}static get GLYPHS(){return{f:eO.dynamicForte,p:eO.dynamicPiano,m:eO.dynamicMezzo,s:eO.dynamicSforzando,z:eO.dynamicZ,r:eO.dynamicRinforzando}}constructor(t){var e,i;super(t),this.sequence=(null!=(e=t.text)?e:"").toLowerCase(),this.line=null!=(i=t.line)?i:0,this.text="",eS("New Dynamics Text: ",this.sequence)}setLine(t){return this.line=t,this}preFormat(){return this.text="",this.sequence.split("").forEach(t=>{let e=eT.GLYPHS[t];if(!e)throw new n("Invalid dynamics character: "+t);this.text+=e}),this.preFormatted=!0,this}draw(){this.setRendered();let t=this.getAbsoluteX(),e=this.checkStave().getYForLine(this.line+-3);eS("Rendering Dynamics: ",this.sequence),this.renderText(this.checkContext(),t,e)}}eT.DEBUG=!1;class ex extends te{static get CATEGORY(){return"TimeSigNote"}constructor(t,e){super({duration:"b"}),this.timeSig=new t3(t,e),this.setWidth(this.timeSig.getWidth()),this.ignoreTicks=!0}addToModifierContext(t){return this}preFormat(){return this.preFormatted=!0,this}draw(){let t=this.checkStave(),e=this.checkContext();this.setRendered(),e.openGroup("timesignote",this.getAttribute("id")),this.timeSig.drawAt(e,t,this.getAbsoluteX()),e.closeGroup()}}class ew extends w{static get CATEGORY(){return"Tuplet"}static get LOCATION_TOP(){return 1}static get LOCATION_BOTTOM(){return -1}static get NESTING_OFFSET(){return 15}constructor(t,e={}){if(super(),!t||!t.length)throw new n("BadArguments","No notes provided for tuplet.");this.notes=t;let i=void 0!==e.numNotes?e.numNotes:t.length,s=e.notesOccupied||2,a=void 0!==e.bracketed?e.bracketed:t.some(t=>!t.hasBeam()),r=void 0!==e.ratioed?e.ratioed:Math.abs(s-i)>1,o=e.location||ew.LOCATION_TOP,h=e.yOffset||p.get("Tuplet.yOffset"),l=e.textYOffset||p.get("Tuplet.textYOffset");this.options={bracketed:a,location:o,notesOccupied:s,numNotes:i,ratioed:r,yOffset:h,textYOffset:l},this.textElement=new w("Tuplet"),this.setTupletLocation(o||ew.LOCATION_TOP),ee.AlignRestsToNotes(t,!0,!0),this.resolveGlyphs(),this.attach()}attach(){for(let t=0;t<this.notes.length;t++)this.notes[t].setTuplet(this)}detach(){for(let t=0;t<this.notes.length;t++)this.notes[t].resetTuplet(this)}setBracketed(t){return this.options.bracketed=t,this}setRatioed(t){return this.options.ratioed=t,this}setTupletLocation(t){return t!==ew.LOCATION_TOP&&t!==ew.LOCATION_BOTTOM&&(console.warn(`Invalid tuplet location [${t}]. Using Tuplet.LOCATION_TOP.`),t=ew.LOCATION_TOP),this.options.location=t,this}getNotes(){return this.notes}getNoteCount(){return this.options.numNotes}getNotesOccupied(){return this.options.notesOccupied}setNotesOccupied(t){this.detach(),this.options.notesOccupied=t,this.resolveGlyphs(),this.attach()}resolveGlyphs(){let t="",e="",i=this.options.numNotes;for(;i>=1;)t=String.fromCharCode(59520+i%10)+t,i=Math.floor(i/10);if(this.options.ratioed){for(i=this.options.notesOccupied;i>=1;)e=String.fromCharCode(59520+i%10)+e,i=Math.floor(i/10);e=eO.tupletColon+e}this.textElement.setText(t+e)}getNestedTupletCount(){let{location:t}=this.options,e=this.notes[0],i=n(e,t),s=n(e,t);function n(t,e){return t.getTupletStack().filter(t=>t.options.location===e).length}return this.notes.forEach(e=>{let a=n(e,t);i=a>i?a:i,s=a<s?a:s}),i-s}getYPosition(){var t;let e,i=-(this.getNestedTupletCount()*ew.NESTING_OFFSET*this.options.location),s=null!=(t=this.options.yOffset)?t:0,n=this.notes[0];if(this.options.location===ew.LOCATION_TOP){e=n.checkStave().getYForLine(0)-1.5*N.STAVE_LINE_DISTANCE;for(let t=0;t<this.notes.length;++t){let i=this.notes[t],s=0,n=i.getModifierContext();n&&(s=Math.max(s,n.getState().topTextLine));let a=i.getYForTopText(s)-2*N.STAVE_LINE_DISTANCE;(i.hasStem()||i.isRest())&&(e=Math.min(i.getStemDirection()===V.UP?i.getStemExtents().topY-N.STAVE_LINE_DISTANCE:i.getStemExtents().baseY-2*N.STAVE_LINE_DISTANCE,e),s>0&&(e=Math.min(a,e)))}}else{let t=4;this.notes.forEach(e=>{let i=e.getModifierContext();i&&(t=Math.max(t,i.getState().textLine+1))}),e=n.checkStave().getYForLine(t)+2*N.STAVE_LINE_DISTANCE;for(let t=0;t<this.notes.length;++t)if(this.notes[t].hasStem()||this.notes[t].isRest()){let i=this.notes[t].getStemDirection()===V.UP?this.notes[t].getStemExtents().baseY+2*N.STAVE_LINE_DISTANCE:this.notes[t].getStemExtents().topY+N.STAVE_LINE_DISTANCE;i>e&&(e=i)}}return e+i+s}draw(){let{location:t,bracketed:e,textYOffset:i}=this.options,s=this.checkContext(),n=0,a=0,r=this.notes[0],o=this.notes[this.notes.length-1];e?(n=r.getTieLeftX()-5,this.width=o.getTieRightX()-n+5):(n=r.getStemX(),this.width=o.getStemX()-n),a=this.getYPosition();let h=n+this.width/2-this.textElement.getWidth()/2;if(s.openGroup("tuplet",this.getAttribute("id")),e){let e=this.width/2-this.textElement.getWidth()/2-5;e>0&&(s.fillRect(n,a,e,1),s.fillRect(n+this.width/2+this.textElement.getWidth()/2+5,a,e,1),s.fillRect(n,a+ +(t===ew.LOCATION_BOTTOM),1,10*t),s.fillRect(n+this.width,a+ +(t===ew.LOCATION_BOTTOM),1,10*t))}this.textElement.renderText(s,h,a+this.textElement.getHeight()/2+(t===ew.LOCATION_TOP?-1:1)*i);let l=this.getBoundingBox();s.pointerRect(l.getX(),l.getY(),l.getW(),l.getH()),s.closeGroup(),this.setRendered()}}class eb extends w{static get CATEGORY(){return"VibratoBracket"}constructor(t){super(),this.vibrato=new tq,t.start&&(this.start=t.start),t.stop&&(this.stop=t.stop),this.line=1}setLine(t){return this.line=t,this}setVibratoCode(t){return this.vibrato.setVibratoCode(t),this}draw(){let t=this.checkContext();this.setRendered();let e=this.start&&this.start.checkStave().getYForTopText(this.line)||this.stop&&this.stop.checkStave().getYForTopText(this.line)||0,i=this.start&&this.start.getAbsoluteX()||this.stop&&this.stop.checkStave().getTieStartX()||0,s=this.stop&&this.stop.getAbsoluteX()-this.stop.getWidth()-5||this.start&&this.start.checkStave().getTieEndX()-10||0;this.vibrato.setVibratoWidth(s-i),function(...t){eb.DEBUG&&o("VexFlow.VibratoBracket",t)}("Rendering VibratoBracket: startX:",i,"stopX:",s,"y:",e),this.vibrato.renderText(t,i,e)}}function ey(...t){eC.DEBUG&&o("VexFlow.Factory",t)}eb.DEBUG=!1;class eC{static newFromElementId(t,e=500,i=200){return new eC({renderer:{elementId:t,width:e,height:i}})}constructor(t={}){ey("New factory: ",t),this.options={stave:{space:10},renderer:{elementId:"",width:500,height:200,background:"#FFF"}},this.setOptions(t)}reset(){this.renderQ=[],this.systems=[],this.staves=[],this.voices=[],this.stave=void 0}setOptions(t){this.options=Object.assign(Object.assign({},this.options),t),this.initRenderer(),this.reset()}initRenderer(){let{elementId:t,width:e,height:i,background:s}=this.options.renderer;if(null===t)return;if(""===t)throw ey(this),new n("renderer.elementId not set in FactoryOptions");let a=this.options.renderer.backend;void 0===a&&(a=th(document.getElementById(t))?tz.Backends.CANVAS:tz.Backends.SVG),this.context=tz.buildContext(t,a,e,i,s)}getContext(){return this.context}setContext(t){return this.context=t,this}getStave(){return this.stave}getVoices(){return this.voices}Stave(t){let e=this.options.stave.space,i=Object.assign({x:0,y:0,width:this.options.renderer.width-e,options:{spacingBetweenLinesPx:+e}},t),s=new t8(i.x,i.y,i.width,i.options);return this.staves.push(s),s.setContext(this.context),this.stave=s,s}TabStave(t){let e=this.options.stave.space,i=Object.assign({x:0,y:0,width:this.options.renderer.width-e,options:{spacingBetweenLinesPx:1.3*e}},t),s=new em(i.x,i.y,i.width,i.options);return this.staves.push(s),s.setContext(this.context),this.stave=s,s}StaveNote(t){let e=new tO(t);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}GlyphNote(t,e,i){let s=new en(t,e,i);return this.stave&&s.setStave(this.stave),s.setContext(this.context),this.renderQ.push(s),s}RepeatNote(t,e,i){let s=new ec(t,e,i);return this.stave&&s.setStave(this.stave),s.setContext(this.context),this.renderQ.push(s),s}GhostNote(t){let e=new es(t);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}TextNote(t){let e=new t1(t);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}BarNote(t={}){let e=new tn(t.type);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}ClefNote(t){let e=Object.assign({type:"treble",options:{size:"default",annotation:void 0}},t),i=new tp(e.type,e.options.size,e.options.annotation);return this.stave&&i.setStave(this.stave),i.setContext(this.context),this.renderQ.push(i),i}TimeSigNote(t){let e=new ex(Object.assign({time:"4/4"},t).time);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}KeySigNote(t){let e=new er(t.key,t.cancelKey,t.alterKey);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}TabNote(t){let e=new ep(t);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}GraceNote(t){let e=new ea(t);return this.stave&&e.setStave(this.stave),e.setContext(this.context),e}GraceNoteGroup(t){let e=new tG(t.notes,t.slur);return e.setContext(this.context),e}Accidental(t){let e=new U(t.type);return e.setContext(this.context),e}Annotation(t){let e=Object.assign({text:"p",hJustify:eP.CENTER,vJustify:eM.BOTTOM},t),i=new Y(e.text);return i.setJustification(e.hJustify),i.setVerticalJustification(e.vJustify),i.setFont(e.font),i.setContext(this.context),i}ChordSymbol(t){let e=Object.assign({vJustify:"top",hJustify:"center"},t),i=new tu;return i.setHorizontal(e.hJustify),i.setVertical(e.vJustify),"string"==typeof e.fontFamily&&"number"==typeof e.fontSize?"string"==typeof e.fontWeight?i.setFont(e.fontFamily,e.fontSize,e.fontWeight):i.setFont(e.fontFamily,e.fontSize,""):"number"==typeof e.fontSize&&i.setFontSize(e.fontSize),i.setContext(this.context),i}Articulation(t){var e;let i=new _(null!=(e=null==t?void 0:t.type)?e:"a.");return(null==t?void 0:t.position)!==void 0&&i.setPosition(t.position),(null==t?void 0:t.betweenLines)!==void 0&&i.setBetweenLines(t.betweenLines),i.setContext(this.context),i}Ornament(t,e){let i=Object.assign({type:t,accidental:""},e),s=new tH(t);return(null==e?void 0:e.position)!==void 0&&s.setPosition(e.position),i.upperAccidental&&s.setUpperAccidental(i.upperAccidental),i.lowerAccidental&&s.setLowerAccidental(i.lowerAccidental),void 0!==i.delayed&&s.setDelayed(i.delayed),s.setContext(this.context),s}TextDynamics(t){let e=Object.assign({text:"p",duration:"q",dots:0,line:0},t),i=new eT({text:e.text,line:e.line,duration:e.duration,dots:e.dots});return this.stave&&i.setStave(this.stave),i.setContext(this.context),this.renderQ.push(i),i}Fingering(t){let e=Object.assign({number:"0",position:"left"},t),i=new tx(e.number);return i.setPosition(e.position),i.setContext(this.context),i}StringNumber(t,e=!0){let i=new tJ(t.number);return i.setPosition(t.position),i.setContext(this.context),i.setDrawCircle(e),i}TickContext(){return new tm}ModifierContext(){return new tK}MultiMeasureRest(t){let e=new eo(r(t.numberOfMeasures,"NoNumberOfMeasures"),t);return e.setContext(this.context),this.renderQ.push(e),e}Voice(t){let e=new tI(Object.assign({time:"4/4"},t).time);return this.voices.push(e),e}StaveConnector(t){let e=new t7(t.topStave,t.bottomStave);return e.setType(t.type).setContext(this.context),this.renderQ.push(e),e}Formatter(t){return new ee(t)}Tuplet(t){let e=Object.assign({notes:[],options:{}},t),i=new ew(e.notes,e.options).setContext(this.context);return this.renderQ.push(i),i}Beam(t){var e,i,s,n,a;let r=new tr(t.notes,null==(e=t.options)?void 0:e.autoStem).setContext(this.context);return r.breakSecondaryAt(null!=(s=null==(i=t.options)?void 0:i.secondaryBeamBreaks)?s:[]),(null==(n=t.options)?void 0:n.partialBeamDirections)&&Object.entries(null==(a=t.options)?void 0:a.partialBeamDirections).forEach(([t,e])=>{r.setPartialBeamSideAt(Number(t),e)}),this.renderQ.push(r),r}Curve(t){let e=new tS(t.from,t.to,t.options).setContext(this.context);return this.renderQ.push(e),e}StaveTie(t){var e;let i=new tP({firstNote:t.from,lastNote:t.to,firstIndexes:t.firstIndexes,lastIndexes:t.lastIndexes},t.text);return(null==(e=t.options)?void 0:e.direction)&&i.setDirection(t.options.direction),i.setContext(this.context),this.renderQ.push(i),i}StaveLine(t){var e,i;let s=new eu({firstNote:t.from,lastNote:t.to,firstIndexes:t.firstIndexes,lastIndexes:t.lastIndexes});return(null==(e=t.options)?void 0:e.text)&&s.setText(t.options.text),(null==(i=t.options)?void 0:i.font)&&s.setFont(t.options.font),s.setContext(this.context),this.renderQ.push(s),s}VibratoBracket(t){let e=new eb({start:t.from,stop:t.to});return t.options.line&&e.setLine(t.options.line),t.options.code&&e.setVibratoCode(t.options.code),e.setContext(this.context),this.renderQ.push(e),e}TextBracket(t){let e=new ef({start:t.from,stop:t.to,text:t.text,superscript:t.options.superscript,position:t.options.position});return t.options.line&&e.setLine(t.options.line),t.options.font&&e.setFont(t.options.font),e.setContext(this.context),this.renderQ.push(e),e}System(t={}){t.factory=this;let e=new eg(t).setContext(this.context);return this.systems.push(e),e}EasyScore(t={}){return t.factory=this,new tv(t)}PedalMarking(t){let e=Object.assign({notes:[],options:{style:"mixed"}},t),i=new eh(e.notes);return i.setType(eh.typeString[e.options.style]),i.setContext(this.context),this.renderQ.push(i),i}NoteSubGroup(t){let e=new tW(Object.assign({notes:[]},t).notes);return e.setContext(this.context),e}draw(){let t=this.context;this.systems.forEach(e=>e.setContext(t).format()),this.staves.forEach(e=>e.setContext(t).drawWithStyle()),this.voices.forEach(e=>e.setContext(t).drawWithStyle()),this.renderQ.forEach(e=>{e.isRendered()||e.setContext(t).drawWithStyle()}),this.systems.forEach(e=>e.setContext(t).drawWithStyle()),this.reset()}}eC.DEBUG=!1;class ek extends ep{static get CATEGORY(){return"GraceTabNote"}constructor(t){super(t,!1),this.renderOptions=Object.assign(Object.assign({},this.renderOptions),{yShift:.3}),this.updateWidth()}}class eA{constructor(t){this.music=new y,this.setKey(t)}setKey(t){return this.key=t,this.reset(),this}getKey(){return this.key}reset(){if(this.keyParts=this.music.getKeyParts(this.key),this.keyString=this.keyParts.root,this.keyParts.accidental&&(this.keyString+=this.keyParts.accidental),!y.scaleTypes[this.keyParts.type])throw new n("BadArguments",`Unsupported key type: ${this.key}`);this.scale=this.music.getScaleTones(this.music.getNoteValue(this.keyString),y.scaleTypes[this.keyParts.type]),this.scaleMap={},this.scaleMapByValue={},this.originalScaleMapByValue={};let t=y.rootIndexes[this.keyParts.root];for(let e=0;e<y.roots.length;++e){let i=(t+e)%y.roots.length,s=y.roots[i],n=this.music.getRelativeNoteName(s,this.scale[e]);this.scaleMap[s]=n,this.scaleMapByValue[this.scale[e]]=n,this.originalScaleMapByValue[this.scale[e]]=n}return this}getAccidental(t){let e=this.music.getKeyParts(t).root,i=this.music.getNoteParts(this.scaleMap[e]);return{note:this.scaleMap[e],accidental:i.accidental}}selectNote(t){t=t.toLowerCase();let e=this.music.getNoteParts(t),i=this.scaleMap[e.root],s=this.music.getNoteParts(i);if(i===t)return{note:i,accidental:e.accidental,change:!1};let n=this.scaleMapByValue[this.music.getNoteValue(t)];if(void 0!==n)return{note:n,accidental:this.music.getNoteParts(n).accidental,change:!1};let a=this.originalScaleMapByValue[this.music.getNoteValue(t)];return void 0!==a?(this.scaleMap[s.root]=a,delete this.scaleMapByValue[this.music.getNoteValue(i)],this.scaleMapByValue[this.music.getNoteValue(t)]=a,{note:a,accidental:this.music.getNoteParts(a).accidental,change:!0}):s.root===t?(delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[e.root])],this.scaleMapByValue[this.music.getNoteValue(s.root)]=s.root,this.scaleMap[s.root]=s.root,{note:s.root,accidental:void 0,change:!0}):(delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[e.root])],this.scaleMapByValue[this.music.getNoteValue(t)]=t,delete this.scaleMap[s.root],this.scaleMap[s.root]=t,{note:t,accidental:e.accidental,change:!0})}}class eB extends w{static get CATEGORY(){return"StaveHairpin"}static FormatByTicksAndDraw(t,e,i,s,a,r){var o,h;let l=e.pixelsPerTick;if(null===l)throw new n("BadArguments","A valid Formatter must be provide to draw offsets by ticks.");let c=l*(null!=(o=r.leftShiftTicks)?o:0),d=l*(null!=(h=r.rightShiftTicks)?h:0),u={height:r.height,yShift:r.yShift,leftShiftPx:c,rightShiftPx:d,rightShiftTicks:0,leftShiftTicks:0};new eB({firstNote:i.firstNote,lastNote:i.lastNote},s).setContext(t).setRenderOptions(u).setPosition(a).drawWithStyle()}constructor(t,e){super(),this.setNotes(t),this.hairpin=e,this.position=b.Position.BELOW,this.renderOptions={height:10,yShift:0,leftShiftPx:0,rightShiftPx:0,rightShiftTicks:0,leftShiftTicks:0}}setPosition(t){return(t===b.Position.ABOVE||t===b.Position.BELOW)&&(this.position=t),this}setRenderOptions(t){return this.renderOptions=t,this}setNotes(t){if(!t.firstNote&&!t.lastNote)throw new n("BadArguments","Hairpin needs to have either firstNote or lastNote set.");return this.notes=t,this.firstNote=t.firstNote,this.lastNote=t.lastNote,this}renderHairpin(t){let e=this.checkContext(),i=this.renderOptions.yShift+20,s=t.firstY;this.position===b.Position.ABOVE&&(i=-i+30,s=t.firstY-t.staffHeight);let n=this.renderOptions.leftShiftPx,a=this.renderOptions.rightShiftPx;switch(e.beginPath(),this.hairpin){case eB.type.CRESC:e.moveTo(t.lastX+a,s+i),e.lineTo(t.firstX+n,s+this.renderOptions.height/2+i),e.lineTo(t.lastX+a,s+this.renderOptions.height+i);break;case eB.type.DECRESC:e.moveTo(t.firstX+n,s+i),e.lineTo(t.lastX+a,s+this.renderOptions.height/2+i),e.lineTo(t.firstX+n,s+this.renderOptions.height+i)}e.stroke(),e.closePath()}draw(){this.checkContext(),this.setRendered();let t=this.firstNote,e=this.lastNote;if(!t||!e)throw new n("NoNote","Notes required to draw");let i=t.getModifierStartXY(this.position,0),s=e.getModifierStartXY(this.position,0);this.renderHairpin({firstX:i.x,lastX:s.x,firstY:t.checkStave().getY()+t.checkStave().getHeight(),lastY:e.checkStave().getY()+e.checkStave().getHeight(),staffHeight:t.checkStave().getHeight()})}}eB.type={CRESC:1,DECRESC:2};class eE extends tM{static get CATEGORY(){return"TabSlide"}static get SLIDE_UP(){return 1}static get SLIDE_DOWN(){return -1}static createSlideUp(t){return new eE(t,eE.SLIDE_UP)}static createSlideDown(t){return new eE(t,eE.SLIDE_DOWN)}constructor(t,e){if(super(t,"sl."),!e){let i=t.firstNote.getPositions()[0].fret;"string"==typeof i&&(i=parseInt(i,10));let s=t.lastNote.getPositions()[0].fret;"string"==typeof s&&(s=parseInt(s,10)),e=isNaN(i)||isNaN(s)?eE.SLIDE_UP:i>s?eE.SLIDE_DOWN:eE.SLIDE_UP}this.direction=e,this.renderOptions.cp1=11,this.renderOptions.cp2=14,this.renderOptions.yShift=.5}renderTie(t){if(0===t.firstYs.length||0===t.lastYs.length)throw new n("BadArguments","No Y-values to render");let e=this.checkContext(),i=t.firstX,s=t.firstYs,a=t.lastX,r=t.direction;if(r!==eE.SLIDE_UP&&r!==eE.SLIDE_DOWN)throw new n("BadSlide","Invalid slide direction");let o=this.notes.firstIndexes;for(let t=0;t<o.length;++t){let h=s[o[t]]+this.renderOptions.yShift;if(isNaN(h))throw new n("BadArguments","Bad indexes for slide rendering.");e.beginPath(),e.moveTo(i,h+3*r),e.lineTo(a,h-3*r),e.closePath(),e.stroke()}this.setRendered()}}class eD extends b{static get CATEGORY(){return"Tremolo"}constructor(t){super(),this.num=t,this.position=b.Position.CENTER,this.text=eO.tremolo1}draw(){let t=this.checkContext(),e=this.checkAttachedNote();this.setRendered();let i=e.getStemDirection(),s=e.getFontScale(),n=p.get("Tremolo.spacing")*i*s,a=e.getAbsoluteX()+(i===V.UP?e.getGlyphWidth()-V.WIDTH/2:V.WIDTH/2),r=e.getStemExtents().topY+(this.num<=3?n:0);this.fontInfo.size=p.get("Tremolo.fontSize")*s;for(let e=0;e<this.num;++e)this.renderText(t,a,r),r+=n}}class ev{static get names(){return{standard:"E/5,B/4,G/4,D/4,A/3,E/3",dagdad:"D/5,A/4,G/4,D/4,A/3,D/3",dropd:"E/5,B/4,G/4,D/4,A/3,D/3",eb:"Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3",standardBanjo:"D/5,B/4,G/4,D/4,G/5"}}constructor(t="E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2"){this.tuningValues=[],this.setTuning(t)}noteToInteger(t){var e;return null!=(e=N.keyProperties(t).intValue)?e:-1}setTuning(t){ev.names[t]&&(t=ev.names[t]),this.tuningValues=[];let e=t.split(/\s*,\s*/);if(0===e.length)throw new n("BadArguments",`Invalid tuning string: ${t}`);for(let t=0;t<e.length;++t)this.tuningValues[t]=this.noteToInteger(e[t])}getValueForString(t){let e=Number(t);if(e<1||e>this.tuningValues.length)throw new n("BadArguments",`String number must be between 1 and ${this.tuningValues.length}:${t}`);return this.tuningValues[e-1]}getValueForFret(t,e){let i=this.getValueForString(e),s=Number(t);if(s<0)throw new n("BadArguments",`Fret number must be 0 or higher: ${t}`);return i+s}getNoteForFret(t,e){let i=this.getValueForFret(t,e),s=Math.floor(i/12);return`${N.integerToNote(i%12)}/${s}`}}class eL{static loadFonts(...t){var e,i,s,n;return e=this,i=void 0,s=void 0,n=function*(){t||(t=Object.keys(S.FILES));let e=[];for(let i of t)e.push(S.load(i));yield Promise.all(e)},new(s||(s=Promise))(function(t,a){function r(t){try{h(n.next(t))}catch(t){a(t)}}function o(t){try{h(n.throw(t))}catch(t){a(t)}}function h(e){var i;e.done?t(e.value):((i=e.value)instanceof s?i:new s(function(t){t(i)})).then(r,o)}h((n=n.apply(e,i||[])).next())})}static setFonts(...t){m.fontFamily=t.join(","),p.clear()}static getFonts(){return p.get("fontFamily").split(",")}static get RENDER_PRECISION_PLACES(){return N.RENDER_PRECISION_PLACES}static set RENDER_PRECISION_PLACES(t){N.RENDER_PRECISION_PLACES=t}static get SOFTMAX_FACTOR(){return N.SOFTMAX_FACTOR}static set SOFTMAX_FACTOR(t){N.SOFTMAX_FACTOR=t}static get UNISON(){return N.UNISON}static set UNISON(t){N.UNISON=t}static get NOTATION_FONT_SCALE(){return N.NOTATION_FONT_SCALE}static set NOTATION_FONT_SCALE(t){N.NOTATION_FONT_SCALE=t}static get TABLATURE_FONT_SCALE(){return N.TABLATURE_FONT_SCALE}static set TABLATURE_FONT_SCALE(t){N.TABLATURE_FONT_SCALE=t}static get RESOLUTION(){return N.RESOLUTION}static set RESOLUTION(t){N.RESOLUTION=t}static get SLASH_NOTEHEAD_WIDTH(){return N.SLASH_NOTEHEAD_WIDTH}static set SLASH_NOTEHEAD_WIDTH(t){N.SLASH_NOTEHEAD_WIDTH=t}static get STAVE_LINE_DISTANCE(){return N.STAVE_LINE_DISTANCE}static set STAVE_LINE_DISTANCE(t){N.STAVE_LINE_DISTANCE=t}static get STAVE_LINE_THICKNESS(){return m.Stave.lineWidth}static set STAVE_LINE_THICKNESS(t){m.Stave.lineWidth=t,m.TabStave.lineWidth=t,p.clear("Stave"),p.clear("TabStave")}static get STEM_HEIGHT(){return N.STEM_HEIGHT}static set STEM_HEIGHT(t){N.STEM_HEIGHT=t}static get STEM_WIDTH(){return N.STEM_WIDTH}static set STEM_WIDTH(t){N.STEM_WIDTH=t}static get TIME4_4(){return N.TIME4_4}static get unicode(){return N.unicode}static keySignature(t){return N.keySignature(t)}static hasKeySignature(t){return N.hasKeySignature(t)}static getKeySignatures(){return N.getKeySignatures()}static clefProperties(t){return N.clefProperties(t)}static keyProperties(t,e,i){return N.keyProperties(t,e,i)}static durationToTicks(t){return N.durationToTicks(t)}}eL.BUILD={VERSION:"5.0.0",ID:"0ca6f889545c33cce851b420c24945f6eb685aeb",DATE:"2025-03-05T17:05:43.991Z",INFO:""},eL.Accidental=U,eL.Annotation=Y,eL.Articulation=_,eL.Barline=ts,eL.BarNote=tn,eL.Beam=tr,eL.Bend=to,eL.BoundingBox=f,eL.CanvasContext=tl,eL.ChordSymbol=tu,eL.Clef=tg,eL.ClefNote=tp,eL.Crescendo=tf,eL.Curve=tS,eL.Dot=tT,eL.EasyScore=tv,eL.Element=w,eL.Factory=eC,eL.Font=S,eL.Formatter=ee,eL.Fraction=u,eL.FretHandFinger=tx,eL.GhostNote=es,eL.GlyphNote=en,eL.GraceNote=ea,eL.GraceNoteGroup=tG,eL.GraceTabNote=ek,eL.KeyManager=eA,eL.KeySignature=tZ,eL.KeySigNote=er,eL.Modifier=b,eL.ModifierContext=tK,eL.MultiMeasureRest=eo,eL.Music=y,eL.Note=te,eL.NoteHead=tL,eL.NoteSubGroup=tW,eL.Ornament=tH,eL.Parenthesis=tU,eL.Parser=tb,eL.PedalMarking=eh,eL.Registry=x,eL.RenderContext=$,eL.Renderer=tz,eL.RepeatNote=ec,eL.Repetition=t_,eL.Stave=t8,eL.StaveConnector=t7,eL.StaveHairpin=eB,eL.StaveLine=eu,eL.StaveModifier=ti,eL.StaveNote=tO,eL.StaveTempo=t0,eL.StaveText=t2,eL.StaveTie=tP,eL.Stem=V,eL.StringNumber=tJ,eL.Stroke=tQ,eL.SVGContext=tX,eL.System=eg,eL.TabNote=ep,eL.TabSlide=eE,eL.TabStave=em,eL.TabTie=tM,eL.TextBracket=ef,eL.TextDynamics=eT,eL.TextNote=t1,eL.TickContext=tm,eL.TimeSignature=t3,eL.TimeSigNote=ex,eL.Tremolo=eD,eL.Tuning=ev,eL.Tuplet=ew,eL.Vibrato=tq,eL.VibratoBracket=eb,eL.Voice=tI,eL.Volta=t5,eL.RuntimeError=n,eL.Test=void 0,eL.AnnotationHorizontalJustify=eP,eL.AnnotationVerticalJustify=eM,eL.ChordSymbolHorizontalJustify=eW,eL.ChordSymbolVerticalJustify=eH,eL.SymbolModifiers=eU,eL.CurvePosition=eV,eL.FontWeight=eN,eL.FontStyle=eF,eL.Glyphs=eO,eL.ModifierPosition=eR,eL.RendererBackends=eX,eL.RendererLineEndType=ez,eL.BarlineType=eG,eL.StaveModifierPosition=eI,eL.VoltaType=eQ,eL.TextBracketPosition=eq,eL.TextJustification=eJ,eL.VoiceMode=eY;var eN,eF,eR,eO,eP,eM,eI,eG,eW,eH,eU,eV,eY,eX,ez,eJ,eQ,eq,ej=i(7800),eK=i(6929);let eZ={display:"block"},e_={display:"swap"},e$=S.load("Bravura",ej.S,eZ),e0=S.load("Academico","data:font/woff2;charset=utf-8;base64,",e_),e1=S.load("Academico","data:font/woff2;charset=utf-8;base64,",{display:"swap",weight:"bold"}),e2=S.load("Gonville","data:font/woff2;charset=utf-8;base64,",eZ),e5=S.load("Petaluma",eK.i,eZ),e3=S.load("Petaluma Script","data:font/woff2;charset=utf-8;base64,",e_);eL.BUILD.INFO="vexflow",eL.setFonts("Bravura","Academico"),Promise.allSettled([e$,e0,e1,e2,e5,e3]).then(()=>{})},2269:(t,e,i)=>{"use strict";var s=i(1890);i(8375);var n=i(2115),a=function(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}(n),r=void 0!==s&&s.env&&!0,o=function(t){return"[object String]"===Object.prototype.toString.call(t)},h=function(){function t(t){var e=void 0===t?{}:t,i=e.name,s=void 0===i?"stylesheet":i,n=e.optimizeForSpeed,a=void 0===n?r:n;l(o(s),"`name` must be a string"),this._name=s,this._deletedRulePlaceholder="#"+s+"-deleted-rule____{}",l("boolean"==typeof a,"`optimizeForSpeed` must be a boolean"),this._optimizeForSpeed=a,this._serverSheet=void 0,this._tags=[],this._injected=!1,this._rulesCount=0;var h="undefined"!=typeof window&&document.querySelector('meta[property="csp-nonce"]');this._nonce=h?h.getAttribute("content"):null}var e,i=t.prototype;return i.setOptimizeForSpeed=function(t){l("boolean"==typeof t,"`setOptimizeForSpeed` accepts a boolean"),l(0===this._rulesCount,"optimizeForSpeed cannot be when rules have already been inserted"),this.flush(),this._optimizeForSpeed=t,this.inject()},i.isOptimizeForSpeed=function(){return this._optimizeForSpeed},i.inject=function(){var t=this;if(l(!this._injected,"sheet already injected"),this._injected=!0,"undefined"!=typeof window&&this._optimizeForSpeed){this._tags[0]=this.makeStyleTag(this._name),this._optimizeForSpeed="insertRule"in this.getSheet(),this._optimizeForSpeed||(r||console.warn("StyleSheet: optimizeForSpeed mode not supported falling back to standard mode."),this.flush(),this._injected=!0);return}this._serverSheet={cssRules:[],insertRule:function(e,i){return"number"==typeof i?t._serverSheet.cssRules[i]={cssText:e}:t._serverSheet.cssRules.push({cssText:e}),i},deleteRule:function(e){t._serverSheet.cssRules[e]=null}}},i.getSheetForTag=function(t){if(t.sheet)return t.sheet;for(var e=0;e<document.styleSheets.length;e++)if(document.styleSheets[e].ownerNode===t)return document.styleSheets[e]},i.getSheet=function(){return this.getSheetForTag(this._tags[this._tags.length-1])},i.insertRule=function(t,e){if(l(o(t),"`insertRule` accepts only strings"),"undefined"==typeof window)return"number"!=typeof e&&(e=this._serverSheet.cssRules.length),this._serverSheet.insertRule(t,e),this._rulesCount++;if(this._optimizeForSpeed){var i=this.getSheet();"number"!=typeof e&&(e=i.cssRules.length);try{i.insertRule(t,e)}catch(e){return r||console.warn("StyleSheet: illegal rule: \n\n"+t+"\n\nSee https://stackoverflow.com/q/20007992 for more info"),-1}}else{var s=this._tags[e];this._tags.push(this.makeStyleTag(this._name,t,s))}return this._rulesCount++},i.replaceRule=function(t,e){if(this._optimizeForSpeed||"undefined"==typeof window){var i="undefined"!=typeof window?this.getSheet():this._serverSheet;if(e.trim()||(e=this._deletedRulePlaceholder),!i.cssRules[t])return t;i.deleteRule(t);try{i.insertRule(e,t)}catch(s){r||console.warn("StyleSheet: illegal rule: \n\n"+e+"\n\nSee https://stackoverflow.com/q/20007992 for more info"),i.insertRule(this._deletedRulePlaceholder,t)}}else{var s=this._tags[t];l(s,"old rule at index `"+t+"` not found"),s.textContent=e}return t},i.deleteRule=function(t){if("undefined"==typeof window)return void this._serverSheet.deleteRule(t);if(this._optimizeForSpeed)this.replaceRule(t,"");else{var e=this._tags[t];l(e,"rule at index `"+t+"` not found"),e.parentNode.removeChild(e),this._tags[t]=null}},i.flush=function(){this._injected=!1,this._rulesCount=0,"undefined"!=typeof window?(this._tags.forEach(function(t){return t&&t.parentNode.removeChild(t)}),this._tags=[]):this._serverSheet.cssRules=[]},i.cssRules=function(){var t=this;return"undefined"==typeof window?this._serverSheet.cssRules:this._tags.reduce(function(e,i){return i?e=e.concat(Array.prototype.map.call(t.getSheetForTag(i).cssRules,function(e){return e.cssText===t._deletedRulePlaceholder?null:e})):e.push(null),e},[])},i.makeStyleTag=function(t,e,i){e&&l(o(e),"makeStyleTag accepts only strings as second parameter");var s=document.createElement("style");this._nonce&&s.setAttribute("nonce",this._nonce),s.type="text/css",s.setAttribute("data-"+t,""),e&&s.appendChild(document.createTextNode(e));var n=document.head||document.getElementsByTagName("head")[0];return i?n.insertBefore(s,i):n.appendChild(s),s},e=[{key:"length",get:function(){return this._rulesCount}}],function(t,e){for(var i=0;i<e.length;i++){var s=e[i];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}(t.prototype,e),t}();function l(t,e){if(!t)throw Error("StyleSheet: "+e+".")}var c=function(t){for(var e=5381,i=t.length;i;)e=33*e^t.charCodeAt(--i);return e>>>0},d={};function u(t,e){if(!e)return"jsx-"+t;var i=String(e),s=t+i;return d[s]||(d[s]="jsx-"+c(t+"-"+i)),d[s]}function g(t,e){"undefined"==typeof window&&(e=e.replace(/\/style/gi,"\\/style"));var i=t+e;return d[i]||(d[i]=e.replace(/__jsx-style-dynamic-selector/g,t)),d[i]}var p=function(){function t(t){var e=void 0===t?{}:t,i=e.styleSheet,s=void 0===i?null:i,n=e.optimizeForSpeed,a=void 0!==n&&n;this._sheet=s||new h({name:"styled-jsx",optimizeForSpeed:a}),this._sheet.inject(),s&&"boolean"==typeof a&&(this._sheet.setOptimizeForSpeed(a),this._optimizeForSpeed=this._sheet.isOptimizeForSpeed()),this._fromServer=void 0,this._indices={},this._instancesCounts={}}var e=t.prototype;return e.add=function(t){var e=this;void 0===this._optimizeForSpeed&&(this._optimizeForSpeed=Array.isArray(t.children),this._sheet.setOptimizeForSpeed(this._optimizeForSpeed),this._optimizeForSpeed=this._sheet.isOptimizeForSpeed()),"undefined"==typeof window||this._fromServer||(this._fromServer=this.selectFromServer(),this._instancesCounts=Object.keys(this._fromServer).reduce(function(t,e){return t[e]=0,t},{}));var i=this.getIdAndRules(t),s=i.styleId,n=i.rules;if(s in this._instancesCounts){this._instancesCounts[s]+=1;return}var a=n.map(function(t){return e._sheet.insertRule(t)}).filter(function(t){return -1!==t});this._indices[s]=a,this._instancesCounts[s]=1},e.remove=function(t){var e=this,i=this.getIdAndRules(t).styleId;if(function(t,e){if(!t)throw Error("StyleSheetRegistry: "+e+".")}(i in this._instancesCounts,"styleId: `"+i+"` not found"),this._instancesCounts[i]-=1,this._instancesCounts[i]<1){var s=this._fromServer&&this._fromServer[i];s?(s.parentNode.removeChild(s),delete this._fromServer[i]):(this._indices[i].forEach(function(t){return e._sheet.deleteRule(t)}),delete this._indices[i]),delete this._instancesCounts[i]}},e.update=function(t,e){this.add(e),this.remove(t)},e.flush=function(){this._sheet.flush(),this._sheet.inject(),this._fromServer=void 0,this._indices={},this._instancesCounts={}},e.cssRules=function(){var t=this,e=this._fromServer?Object.keys(this._fromServer).map(function(e){return[e,t._fromServer[e]]}):[],i=this._sheet.cssRules();return e.concat(Object.keys(this._indices).map(function(e){return[e,t._indices[e].map(function(t){return i[t].cssText}).join(t._optimizeForSpeed?"":"\n")]}).filter(function(t){return!!t[1]}))},e.styles=function(t){var e,i;return e=this.cssRules(),void 0===(i=t)&&(i={}),e.map(function(t){var e=t[0],s=t[1];return a.default.createElement("style",{id:"__"+e,key:"__"+e,nonce:i.nonce?i.nonce:void 0,dangerouslySetInnerHTML:{__html:s}})})},e.getIdAndRules=function(t){var e=t.children,i=t.dynamic,s=t.id;if(i){var n=u(s,i);return{styleId:n,rules:Array.isArray(e)?e.map(function(t){return g(n,t)}):[g(n,e)]}}return{styleId:u(s),rules:Array.isArray(e)?e:[e]}},e.selectFromServer=function(){return Array.prototype.slice.call(document.querySelectorAll('[id^="__jsx-"]')).reduce(function(t,e){return t[e.id.slice(2)]=e,t},{})},t}(),m=n.createContext(null);m.displayName="StyleSheetContext";var f=a.default.useInsertionEffect||a.default.useLayoutEffect,S="undefined"!=typeof window?new p:void 0;function T(t){var e=S||n.useContext(m);return e&&("undefined"==typeof window?e.add(t):f(function(){return e.add(t),function(){e.remove(t)}},[t.id,String(t.dynamic)])),null}T.dynamic=function(t){return t.map(function(t){return u(t[0],t[1])}).join(" ")},e.style=T},5695:(t,e,i)=>{"use strict";var s=i(8999);i.o(s,"useRouter")&&i.d(e,{useRouter:function(){return s.useRouter}})},8375:()=>{},9137:(t,e,i)=>{"use strict";t.exports=i(2269).style}}]);